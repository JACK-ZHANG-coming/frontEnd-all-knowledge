{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule encodeEntityRanges\n * @format\n * \n */\n\n'use strict';\n\nvar DraftStringKey = require('./DraftStringKey');\nvar UnicodeUtils = require('fbjs/lib/UnicodeUtils');\nvar strlen = UnicodeUtils.strlen;\n\n/**\n * Convert to UTF-8 character counts for storage.\n */\n\nfunction encodeEntityRanges(block, storageMap) {\n  var encoded = [];\n  block.findEntityRanges(function (character) {\n    return !!character.getEntity();\n  }, function ( /*number*/start, /*number*/end) {\n    var text = block.getText();\n    var key = block.getEntityAt(start);\n    encoded.push({\n      offset: strlen(text.slice(0, start)),\n      length: strlen(text.slice(start, end)),\n      // Encode the key as a number for range storage.\n      key: Number(storageMap[DraftStringKey.stringify(key)])\n    });\n  });\n  return encoded;\n}\nmodule.exports = encodeEntityRanges;","map":{"version":3,"names":["DraftStringKey","require","UnicodeUtils","strlen","encodeEntityRanges","block","storageMap","encoded","findEntityRanges","character","getEntity","start","end","text","getText","key","getEntityAt","push","offset","slice","length","Number","stringify","module","exports"],"sources":["/Users/zhangqiang/Documents/GitHub/frontEnd-all-knowledge/examples/react/a08antd带编辑的表格/node_modules/rc-editor-core/node_modules/draft-js/lib/encodeEntityRanges.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule encodeEntityRanges\n * @format\n * \n */\n\n'use strict';\n\nvar DraftStringKey = require('./DraftStringKey');\nvar UnicodeUtils = require('fbjs/lib/UnicodeUtils');\n\nvar strlen = UnicodeUtils.strlen;\n\n/**\n * Convert to UTF-8 character counts for storage.\n */\n\nfunction encodeEntityRanges(block, storageMap) {\n  var encoded = [];\n  block.findEntityRanges(function (character) {\n    return !!character.getEntity();\n  }, function ( /*number*/start, /*number*/end) {\n    var text = block.getText();\n    var key = block.getEntityAt(start);\n    encoded.push({\n      offset: strlen(text.slice(0, start)),\n      length: strlen(text.slice(start, end)),\n      // Encode the key as a number for range storage.\n      key: Number(storageMap[DraftStringKey.stringify(key)])\n    });\n  });\n  return encoded;\n}\n\nmodule.exports = encodeEntityRanges;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,cAAc,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAChD,IAAIC,YAAY,GAAGD,OAAO,CAAC,uBAAuB,CAAC;AAEnD,IAAIE,MAAM,GAAGD,YAAY,CAACC,MAAM;;AAEhC;AACA;AACA;;AAEA,SAASC,kBAAkBA,CAACC,KAAK,EAAEC,UAAU,EAAE;EAC7C,IAAIC,OAAO,GAAG,EAAE;EAChBF,KAAK,CAACG,gBAAgB,CAAC,UAAUC,SAAS,EAAE;IAC1C,OAAO,CAAC,CAACA,SAAS,CAACC,SAAS,CAAC,CAAC;EAChC,CAAC,EAAE,WAAW,UAAUC,KAAK,EAAE,UAAUC,GAAG,EAAE;IAC5C,IAAIC,IAAI,GAAGR,KAAK,CAACS,OAAO,CAAC,CAAC;IAC1B,IAAIC,GAAG,GAAGV,KAAK,CAACW,WAAW,CAACL,KAAK,CAAC;IAClCJ,OAAO,CAACU,IAAI,CAAC;MACXC,MAAM,EAAEf,MAAM,CAACU,IAAI,CAACM,KAAK,CAAC,CAAC,EAAER,KAAK,CAAC,CAAC;MACpCS,MAAM,EAAEjB,MAAM,CAACU,IAAI,CAACM,KAAK,CAACR,KAAK,EAAEC,GAAG,CAAC,CAAC;MACtC;MACAG,GAAG,EAAEM,MAAM,CAACf,UAAU,CAACN,cAAc,CAACsB,SAAS,CAACP,GAAG,CAAC,CAAC;IACvD,CAAC,CAAC;EACJ,CAAC,CAAC;EACF,OAAOR,OAAO;AAChB;AAEAgB,MAAM,CAACC,OAAO,GAAGpB,kBAAkB"},"metadata":{},"sourceType":"script","externalDependencies":[]}