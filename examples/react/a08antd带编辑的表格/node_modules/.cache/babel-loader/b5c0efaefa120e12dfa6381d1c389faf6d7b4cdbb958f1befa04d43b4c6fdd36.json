{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CharacterMetadata\n * @format\n * \n */\n\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nvar _require = require('immutable'),\n  Map = _require.Map,\n  OrderedSet = _require.OrderedSet,\n  Record = _require.Record;\n\n// Immutable.map is typed such that the value for every key in the map\n// must be the same type\n\nvar EMPTY_SET = OrderedSet();\nvar defaultRecord = {\n  style: EMPTY_SET,\n  entity: null\n};\nvar CharacterMetadataRecord = Record(defaultRecord);\nvar CharacterMetadata = function (_CharacterMetadataRec) {\n  _inherits(CharacterMetadata, _CharacterMetadataRec);\n  function CharacterMetadata() {\n    _classCallCheck(this, CharacterMetadata);\n    return _possibleConstructorReturn(this, _CharacterMetadataRec.apply(this, arguments));\n  }\n  CharacterMetadata.prototype.getStyle = function getStyle() {\n    return this.get('style');\n  };\n  CharacterMetadata.prototype.getEntity = function getEntity() {\n    return this.get('entity');\n  };\n  CharacterMetadata.prototype.hasStyle = function hasStyle(style) {\n    return this.getStyle().includes(style);\n  };\n  CharacterMetadata.applyStyle = function applyStyle(record, style) {\n    var withStyle = record.set('style', record.getStyle().add(style));\n    return CharacterMetadata.create(withStyle);\n  };\n  CharacterMetadata.removeStyle = function removeStyle(record, style) {\n    var withoutStyle = record.set('style', record.getStyle().remove(style));\n    return CharacterMetadata.create(withoutStyle);\n  };\n  CharacterMetadata.applyEntity = function applyEntity(record, entityKey) {\n    var withEntity = record.getEntity() === entityKey ? record : record.set('entity', entityKey);\n    return CharacterMetadata.create(withEntity);\n  };\n\n  /**\n   * Use this function instead of the `CharacterMetadata` constructor.\n   * Since most content generally uses only a very small number of\n   * style/entity permutations, we can reuse these objects as often as\n   * possible.\n   */\n\n  CharacterMetadata.create = function create(config) {\n    if (!config) {\n      return EMPTY;\n    }\n    var defaultConfig = {\n      style: EMPTY_SET,\n      entity: null\n    };\n\n    // Fill in unspecified properties, if necessary.\n    var configMap = Map(defaultConfig).merge(config);\n    var existing = pool.get(configMap);\n    if (existing) {\n      return existing;\n    }\n    var newCharacter = new CharacterMetadata(configMap);\n    pool = pool.set(configMap, newCharacter);\n    return newCharacter;\n  };\n  return CharacterMetadata;\n}(CharacterMetadataRecord);\nvar EMPTY = new CharacterMetadata();\nvar pool = Map([[Map(defaultRecord), EMPTY]]);\nCharacterMetadata.EMPTY = EMPTY;\nmodule.exports = CharacterMetadata;","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_require","require","Map","OrderedSet","Record","EMPTY_SET","defaultRecord","style","entity","CharacterMetadataRecord","CharacterMetadata","_CharacterMetadataRec","apply","arguments","getStyle","get","getEntity","hasStyle","includes","applyStyle","record","withStyle","set","add","removeStyle","withoutStyle","remove","applyEntity","entityKey","withEntity","config","EMPTY","defaultConfig","configMap","merge","existing","pool","newCharacter","module","exports"],"sources":["/Users/zhangqiang/Documents/GitHub/frontEnd-all-knowledge/examples/react/a08antd带编辑的表格/node_modules/rc-editor-mention/node_modules/draft-js/lib/CharacterMetadata.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CharacterMetadata\n * @format\n * \n */\n\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _require = require('immutable'),\n    Map = _require.Map,\n    OrderedSet = _require.OrderedSet,\n    Record = _require.Record;\n\n// Immutable.map is typed such that the value for every key in the map\n// must be the same type\n\n\nvar EMPTY_SET = OrderedSet();\n\nvar defaultRecord = {\n  style: EMPTY_SET,\n  entity: null\n};\n\nvar CharacterMetadataRecord = Record(defaultRecord);\n\nvar CharacterMetadata = function (_CharacterMetadataRec) {\n  _inherits(CharacterMetadata, _CharacterMetadataRec);\n\n  function CharacterMetadata() {\n    _classCallCheck(this, CharacterMetadata);\n\n    return _possibleConstructorReturn(this, _CharacterMetadataRec.apply(this, arguments));\n  }\n\n  CharacterMetadata.prototype.getStyle = function getStyle() {\n    return this.get('style');\n  };\n\n  CharacterMetadata.prototype.getEntity = function getEntity() {\n    return this.get('entity');\n  };\n\n  CharacterMetadata.prototype.hasStyle = function hasStyle(style) {\n    return this.getStyle().includes(style);\n  };\n\n  CharacterMetadata.applyStyle = function applyStyle(record, style) {\n    var withStyle = record.set('style', record.getStyle().add(style));\n    return CharacterMetadata.create(withStyle);\n  };\n\n  CharacterMetadata.removeStyle = function removeStyle(record, style) {\n    var withoutStyle = record.set('style', record.getStyle().remove(style));\n    return CharacterMetadata.create(withoutStyle);\n  };\n\n  CharacterMetadata.applyEntity = function applyEntity(record, entityKey) {\n    var withEntity = record.getEntity() === entityKey ? record : record.set('entity', entityKey);\n    return CharacterMetadata.create(withEntity);\n  };\n\n  /**\n   * Use this function instead of the `CharacterMetadata` constructor.\n   * Since most content generally uses only a very small number of\n   * style/entity permutations, we can reuse these objects as often as\n   * possible.\n   */\n\n\n  CharacterMetadata.create = function create(config) {\n    if (!config) {\n      return EMPTY;\n    }\n\n    var defaultConfig = {\n      style: EMPTY_SET,\n      entity: null\n    };\n\n    // Fill in unspecified properties, if necessary.\n    var configMap = Map(defaultConfig).merge(config);\n\n    var existing = pool.get(configMap);\n    if (existing) {\n      return existing;\n    }\n\n    var newCharacter = new CharacterMetadata(configMap);\n    pool = pool.set(configMap, newCharacter);\n    return newCharacter;\n  };\n\n  return CharacterMetadata;\n}(CharacterMetadataRecord);\n\nvar EMPTY = new CharacterMetadata();\nvar pool = Map([[Map(defaultRecord), EMPTY]]);\n\nCharacterMetadata.EMPTY = EMPTY;\n\nmodule.exports = CharacterMetadata;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}