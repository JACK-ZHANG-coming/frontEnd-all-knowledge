{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DraftModifier\n * @format\n * \n */\n\n'use strict';\n\nvar CharacterMetadata = require('./CharacterMetadata');\nvar ContentStateInlineStyle = require('./ContentStateInlineStyle');\nvar DraftFeatureFlags = require('./DraftFeatureFlags');\nvar Immutable = require('immutable');\nvar applyEntityToContentState = require('./applyEntityToContentState');\nvar getCharacterRemovalRange = require('./getCharacterRemovalRange');\nvar getContentStateFragment = require('./getContentStateFragment');\nvar insertFragmentIntoContentState = require('./insertFragmentIntoContentState');\nvar insertTextIntoContentState = require('./insertTextIntoContentState');\nvar invariant = require('fbjs/lib/invariant');\nvar modifyBlockForContentState = require('./modifyBlockForContentState');\nvar removeEntitiesAtEdges = require('./removeEntitiesAtEdges');\nvar removeRangeFromContentState = require('./removeRangeFromContentState');\nvar splitBlockInContentState = require('./splitBlockInContentState');\nvar OrderedSet = Immutable.OrderedSet;\n\n/**\n * `DraftModifier` provides a set of convenience methods that apply\n * modifications to a `ContentState` object based on a target `SelectionState`.\n *\n * Any change to a `ContentState` should be decomposable into a series of\n * transaction functions that apply the required changes and return output\n * `ContentState` objects.\n *\n * These functions encapsulate some of the most common transaction sequences.\n */\n\nvar DraftModifier = {\n  replaceText: function replaceText(contentState, rangeToReplace, text, inlineStyle, entityKey) {\n    var withoutEntities = removeEntitiesAtEdges(contentState, rangeToReplace);\n    var withoutText = removeRangeFromContentState(withoutEntities, rangeToReplace);\n    var character = CharacterMetadata.create({\n      style: inlineStyle || OrderedSet(),\n      entity: entityKey || null\n    });\n    return insertTextIntoContentState(withoutText, withoutText.getSelectionAfter(), text, character);\n  },\n  insertText: function insertText(contentState, targetRange, text, inlineStyle, entityKey) {\n    !targetRange.isCollapsed() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Target range must be collapsed for `insertText`.') : invariant(false) : void 0;\n    return DraftModifier.replaceText(contentState, targetRange, text, inlineStyle, entityKey);\n  },\n  moveText: function moveText(contentState, removalRange, targetRange) {\n    var movedFragment = getContentStateFragment(contentState, removalRange);\n    var afterRemoval = DraftModifier.removeRange(contentState, removalRange, 'backward');\n    return DraftModifier.replaceWithFragment(afterRemoval, targetRange, movedFragment);\n  },\n  replaceWithFragment: function replaceWithFragment(contentState, targetRange, fragment) {\n    var withoutEntities = removeEntitiesAtEdges(contentState, targetRange);\n    var withoutText = removeRangeFromContentState(withoutEntities, targetRange);\n    return insertFragmentIntoContentState(withoutText, withoutText.getSelectionAfter(), fragment);\n  },\n  removeRange: function removeRange(contentState, rangeToRemove, removalDirection) {\n    var startKey = void 0,\n      endKey = void 0,\n      startBlock = void 0,\n      endBlock = void 0;\n    if (rangeToRemove.getIsBackward()) {\n      rangeToRemove = rangeToRemove.merge({\n        anchorKey: rangeToRemove.getFocusKey(),\n        anchorOffset: rangeToRemove.getFocusOffset(),\n        focusKey: rangeToRemove.getAnchorKey(),\n        focusOffset: rangeToRemove.getAnchorOffset(),\n        isBackward: false\n      });\n    }\n    startKey = rangeToRemove.getAnchorKey();\n    endKey = rangeToRemove.getFocusKey();\n    startBlock = contentState.getBlockForKey(startKey);\n    endBlock = contentState.getBlockForKey(endKey);\n    var startOffset = rangeToRemove.getStartOffset();\n    var endOffset = rangeToRemove.getEndOffset();\n    var startEntityKey = startBlock.getEntityAt(startOffset);\n    var endEntityKey = endBlock.getEntityAt(endOffset - 1);\n\n    // Check whether the selection state overlaps with a single entity.\n    // If so, try to remove the appropriate substring of the entity text.\n    if (startKey === endKey) {\n      if (startEntityKey && startEntityKey === endEntityKey) {\n        var _adjustedRemovalRange = getCharacterRemovalRange(contentState.getEntityMap(), startBlock, endBlock, rangeToRemove, removalDirection);\n        return removeRangeFromContentState(contentState, _adjustedRemovalRange);\n      }\n    }\n    var adjustedRemovalRange = rangeToRemove;\n    if (DraftFeatureFlags.draft_segmented_entities_behavior) {\n      // Adjust the selection to properly delete segemented and immutable\n      // entities\n      adjustedRemovalRange = getCharacterRemovalRange(contentState.getEntityMap(), startBlock, endBlock, rangeToRemove, removalDirection);\n    }\n    var withoutEntities = removeEntitiesAtEdges(contentState, adjustedRemovalRange);\n    return removeRangeFromContentState(withoutEntities, adjustedRemovalRange);\n  },\n  splitBlock: function splitBlock(contentState, selectionState) {\n    var withoutEntities = removeEntitiesAtEdges(contentState, selectionState);\n    var withoutText = removeRangeFromContentState(withoutEntities, selectionState);\n    return splitBlockInContentState(withoutText, withoutText.getSelectionAfter());\n  },\n  applyInlineStyle: function applyInlineStyle(contentState, selectionState, inlineStyle) {\n    return ContentStateInlineStyle.add(contentState, selectionState, inlineStyle);\n  },\n  removeInlineStyle: function removeInlineStyle(contentState, selectionState, inlineStyle) {\n    return ContentStateInlineStyle.remove(contentState, selectionState, inlineStyle);\n  },\n  setBlockType: function setBlockType(contentState, selectionState, blockType) {\n    return modifyBlockForContentState(contentState, selectionState, function (block) {\n      return block.merge({\n        type: blockType,\n        depth: 0\n      });\n    });\n  },\n  setBlockData: function setBlockData(contentState, selectionState, blockData) {\n    return modifyBlockForContentState(contentState, selectionState, function (block) {\n      return block.merge({\n        data: blockData\n      });\n    });\n  },\n  mergeBlockData: function mergeBlockData(contentState, selectionState, blockData) {\n    return modifyBlockForContentState(contentState, selectionState, function (block) {\n      return block.merge({\n        data: block.getData().merge(blockData)\n      });\n    });\n  },\n  applyEntity: function applyEntity(contentState, selectionState, entityKey) {\n    var withoutEntities = removeEntitiesAtEdges(contentState, selectionState);\n    return applyEntityToContentState(withoutEntities, selectionState, entityKey);\n  }\n};\nmodule.exports = DraftModifier;","map":{"version":3,"names":["CharacterMetadata","require","ContentStateInlineStyle","DraftFeatureFlags","Immutable","applyEntityToContentState","getCharacterRemovalRange","getContentStateFragment","insertFragmentIntoContentState","insertTextIntoContentState","invariant","modifyBlockForContentState","removeEntitiesAtEdges","removeRangeFromContentState","splitBlockInContentState","OrderedSet","DraftModifier","replaceText","contentState","rangeToReplace","text","inlineStyle","entityKey","withoutEntities","withoutText","character","create","style","entity","getSelectionAfter","insertText","targetRange","isCollapsed","process","env","NODE_ENV","moveText","removalRange","movedFragment","afterRemoval","removeRange","replaceWithFragment","fragment","rangeToRemove","removalDirection","startKey","endKey","startBlock","endBlock","getIsBackward","merge","anchorKey","getFocusKey","anchorOffset","getFocusOffset","focusKey","getAnchorKey","focusOffset","getAnchorOffset","isBackward","getBlockForKey","startOffset","getStartOffset","endOffset","getEndOffset","startEntityKey","getEntityAt","endEntityKey","_adjustedRemovalRange","getEntityMap","adjustedRemovalRange","draft_segmented_entities_behavior","splitBlock","selectionState","applyInlineStyle","add","removeInlineStyle","remove","setBlockType","blockType","block","type","depth","setBlockData","blockData","data","mergeBlockData","getData","applyEntity","module","exports"],"sources":["/Users/zhangqiang/Documents/GitHub/frontEnd-all-knowledge/examples/react/a08antd带编辑的表格/node_modules/rc-editor-core/node_modules/draft-js/lib/DraftModifier.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DraftModifier\n * @format\n * \n */\n\n'use strict';\n\nvar CharacterMetadata = require('./CharacterMetadata');\nvar ContentStateInlineStyle = require('./ContentStateInlineStyle');\nvar DraftFeatureFlags = require('./DraftFeatureFlags');\nvar Immutable = require('immutable');\n\nvar applyEntityToContentState = require('./applyEntityToContentState');\nvar getCharacterRemovalRange = require('./getCharacterRemovalRange');\nvar getContentStateFragment = require('./getContentStateFragment');\nvar insertFragmentIntoContentState = require('./insertFragmentIntoContentState');\nvar insertTextIntoContentState = require('./insertTextIntoContentState');\nvar invariant = require('fbjs/lib/invariant');\nvar modifyBlockForContentState = require('./modifyBlockForContentState');\nvar removeEntitiesAtEdges = require('./removeEntitiesAtEdges');\nvar removeRangeFromContentState = require('./removeRangeFromContentState');\nvar splitBlockInContentState = require('./splitBlockInContentState');\n\nvar OrderedSet = Immutable.OrderedSet;\n\n/**\n * `DraftModifier` provides a set of convenience methods that apply\n * modifications to a `ContentState` object based on a target `SelectionState`.\n *\n * Any change to a `ContentState` should be decomposable into a series of\n * transaction functions that apply the required changes and return output\n * `ContentState` objects.\n *\n * These functions encapsulate some of the most common transaction sequences.\n */\n\nvar DraftModifier = {\n  replaceText: function replaceText(contentState, rangeToReplace, text, inlineStyle, entityKey) {\n    var withoutEntities = removeEntitiesAtEdges(contentState, rangeToReplace);\n    var withoutText = removeRangeFromContentState(withoutEntities, rangeToReplace);\n\n    var character = CharacterMetadata.create({\n      style: inlineStyle || OrderedSet(),\n      entity: entityKey || null\n    });\n\n    return insertTextIntoContentState(withoutText, withoutText.getSelectionAfter(), text, character);\n  },\n\n  insertText: function insertText(contentState, targetRange, text, inlineStyle, entityKey) {\n    !targetRange.isCollapsed() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Target range must be collapsed for `insertText`.') : invariant(false) : void 0;\n    return DraftModifier.replaceText(contentState, targetRange, text, inlineStyle, entityKey);\n  },\n\n  moveText: function moveText(contentState, removalRange, targetRange) {\n    var movedFragment = getContentStateFragment(contentState, removalRange);\n\n    var afterRemoval = DraftModifier.removeRange(contentState, removalRange, 'backward');\n\n    return DraftModifier.replaceWithFragment(afterRemoval, targetRange, movedFragment);\n  },\n\n  replaceWithFragment: function replaceWithFragment(contentState, targetRange, fragment) {\n    var withoutEntities = removeEntitiesAtEdges(contentState, targetRange);\n    var withoutText = removeRangeFromContentState(withoutEntities, targetRange);\n\n    return insertFragmentIntoContentState(withoutText, withoutText.getSelectionAfter(), fragment);\n  },\n\n  removeRange: function removeRange(contentState, rangeToRemove, removalDirection) {\n    var startKey = void 0,\n        endKey = void 0,\n        startBlock = void 0,\n        endBlock = void 0;\n    if (rangeToRemove.getIsBackward()) {\n      rangeToRemove = rangeToRemove.merge({\n        anchorKey: rangeToRemove.getFocusKey(),\n        anchorOffset: rangeToRemove.getFocusOffset(),\n        focusKey: rangeToRemove.getAnchorKey(),\n        focusOffset: rangeToRemove.getAnchorOffset(),\n        isBackward: false\n      });\n    }\n    startKey = rangeToRemove.getAnchorKey();\n    endKey = rangeToRemove.getFocusKey();\n    startBlock = contentState.getBlockForKey(startKey);\n    endBlock = contentState.getBlockForKey(endKey);\n    var startOffset = rangeToRemove.getStartOffset();\n    var endOffset = rangeToRemove.getEndOffset();\n\n    var startEntityKey = startBlock.getEntityAt(startOffset);\n    var endEntityKey = endBlock.getEntityAt(endOffset - 1);\n\n    // Check whether the selection state overlaps with a single entity.\n    // If so, try to remove the appropriate substring of the entity text.\n    if (startKey === endKey) {\n      if (startEntityKey && startEntityKey === endEntityKey) {\n        var _adjustedRemovalRange = getCharacterRemovalRange(contentState.getEntityMap(), startBlock, endBlock, rangeToRemove, removalDirection);\n        return removeRangeFromContentState(contentState, _adjustedRemovalRange);\n      }\n    }\n    var adjustedRemovalRange = rangeToRemove;\n    if (DraftFeatureFlags.draft_segmented_entities_behavior) {\n      // Adjust the selection to properly delete segemented and immutable\n      // entities\n      adjustedRemovalRange = getCharacterRemovalRange(contentState.getEntityMap(), startBlock, endBlock, rangeToRemove, removalDirection);\n    }\n\n    var withoutEntities = removeEntitiesAtEdges(contentState, adjustedRemovalRange);\n    return removeRangeFromContentState(withoutEntities, adjustedRemovalRange);\n  },\n\n  splitBlock: function splitBlock(contentState, selectionState) {\n    var withoutEntities = removeEntitiesAtEdges(contentState, selectionState);\n    var withoutText = removeRangeFromContentState(withoutEntities, selectionState);\n\n    return splitBlockInContentState(withoutText, withoutText.getSelectionAfter());\n  },\n\n  applyInlineStyle: function applyInlineStyle(contentState, selectionState, inlineStyle) {\n    return ContentStateInlineStyle.add(contentState, selectionState, inlineStyle);\n  },\n\n  removeInlineStyle: function removeInlineStyle(contentState, selectionState, inlineStyle) {\n    return ContentStateInlineStyle.remove(contentState, selectionState, inlineStyle);\n  },\n\n  setBlockType: function setBlockType(contentState, selectionState, blockType) {\n    return modifyBlockForContentState(contentState, selectionState, function (block) {\n      return block.merge({ type: blockType, depth: 0 });\n    });\n  },\n\n  setBlockData: function setBlockData(contentState, selectionState, blockData) {\n    return modifyBlockForContentState(contentState, selectionState, function (block) {\n      return block.merge({ data: blockData });\n    });\n  },\n\n  mergeBlockData: function mergeBlockData(contentState, selectionState, blockData) {\n    return modifyBlockForContentState(contentState, selectionState, function (block) {\n      return block.merge({ data: block.getData().merge(blockData) });\n    });\n  },\n\n  applyEntity: function applyEntity(contentState, selectionState, entityKey) {\n    var withoutEntities = removeEntitiesAtEdges(contentState, selectionState);\n    return applyEntityToContentState(withoutEntities, selectionState, entityKey);\n  }\n};\n\nmodule.exports = DraftModifier;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}