{"ast":null,"code":"import _classCallCheck from \"/Users/zhangqiang/Documents/GitHub/frontEnd-all-knowledge/examples/react/a08antd\\u5E26\\u7F16\\u8F91\\u7684\\u8868\\u683C/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/zhangqiang/Documents/GitHub/frontEnd-all-knowledge/examples/react/a08antd\\u5E26\\u7F16\\u8F91\\u7684\\u8868\\u683C/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n  return target;\n}\nimport { EnterLeaveCounter } from './EnterLeaveCounter.js';\nimport { createNativeDragSource, matchNativeItemType } from './NativeDragSources/index.js';\nimport * as NativeTypes from './NativeTypes.js';\nimport { getDragPreviewOffset, getEventClientOffset, getNodeClientOffset } from './OffsetUtils.js';\nimport { OptionsReader } from './OptionsReader.js';\nexport var HTML5BackendImpl = /*#__PURE__*/function () {\n  function HTML5BackendImpl(manager, globalContext, options) {\n    var _this = this;\n    _classCallCheck(this, HTML5BackendImpl);\n    this.sourcePreviewNodes = new Map();\n    this.sourcePreviewNodeOptions = new Map();\n    this.sourceNodes = new Map();\n    this.sourceNodeOptions = new Map();\n    this.dragStartSourceIds = null;\n    this.dropTargetIds = [];\n    this.dragEnterTargetIds = [];\n    this.currentNativeSource = null;\n    this.currentNativeHandle = null;\n    this.currentDragSourceNode = null;\n    this.altKeyPressed = false;\n    this.mouseMoveTimeoutTimer = null;\n    this.asyncEndDragFrameId = null;\n    this.dragOverTargetIds = null;\n    this.lastClientOffset = null;\n    this.hoverRafId = null;\n    this.getSourceClientOffset = function (sourceId) {\n      var source = _this.sourceNodes.get(sourceId);\n      return source && getNodeClientOffset(source) || null;\n    };\n    this.endDragNativeItem = function () {\n      if (!_this.isDraggingNativeItem()) {\n        return;\n      }\n      _this.actions.endDrag();\n      if (_this.currentNativeHandle) {\n        _this.registry.removeSource(_this.currentNativeHandle);\n      }\n      _this.currentNativeHandle = null;\n      _this.currentNativeSource = null;\n    };\n    this.isNodeInDocument = function (node) {\n      // Check the node either in the main document or in the current context\n      return Boolean(node && _this.document && _this.document.body && _this.document.body.contains(node));\n    };\n    this.endDragIfSourceWasRemovedFromDOM = function () {\n      var node = _this.currentDragSourceNode;\n      if (node == null || _this.isNodeInDocument(node)) {\n        return;\n      }\n      if (_this.clearCurrentDragSourceNode() && _this.monitor.isDragging()) {\n        _this.actions.endDrag();\n      }\n      _this.cancelHover();\n    };\n    this.scheduleHover = function (dragOverTargetIds) {\n      if (_this.hoverRafId === null && typeof requestAnimationFrame !== 'undefined') {\n        _this.hoverRafId = requestAnimationFrame(function () {\n          if (_this.monitor.isDragging()) {\n            _this.actions.hover(dragOverTargetIds || [], {\n              clientOffset: _this.lastClientOffset\n            });\n          }\n          _this.hoverRafId = null;\n        });\n      }\n    };\n    this.cancelHover = function () {\n      if (_this.hoverRafId !== null && typeof cancelAnimationFrame !== 'undefined') {\n        cancelAnimationFrame(_this.hoverRafId);\n        _this.hoverRafId = null;\n      }\n    };\n    this.handleTopDragStartCapture = function () {\n      _this.clearCurrentDragSourceNode();\n      _this.dragStartSourceIds = [];\n    };\n    this.handleTopDragStart = function (e) {\n      if (e.defaultPrevented) {\n        return;\n      }\n      var dragStartSourceIds = _this.dragStartSourceIds;\n      _this.dragStartSourceIds = null;\n      var clientOffset = getEventClientOffset(e);\n      // Avoid crashing if we missed a drop event or our previous drag died\n      if (_this.monitor.isDragging()) {\n        _this.actions.endDrag();\n        _this.cancelHover();\n      }\n      // Don't publish the source just yet (see why below)\n      _this.actions.beginDrag(dragStartSourceIds || [], {\n        publishSource: false,\n        getSourceClientOffset: _this.getSourceClientOffset,\n        clientOffset: clientOffset\n      });\n      var dataTransfer = e.dataTransfer;\n      var nativeType = matchNativeItemType(dataTransfer);\n      if (_this.monitor.isDragging()) {\n        if (dataTransfer && typeof dataTransfer.setDragImage === 'function') {\n          // Use custom drag image if user specifies it.\n          // If child drag source refuses drag but parent agrees,\n          // use parent's node as drag image. Neither works in IE though.\n          var sourceId = _this.monitor.getSourceId();\n          var sourceNode = _this.sourceNodes.get(sourceId);\n          var dragPreview = _this.sourcePreviewNodes.get(sourceId) || sourceNode;\n          if (dragPreview) {\n            var _this$getCurrentSourc = _this.getCurrentSourcePreviewNodeOptions(),\n              anchorX = _this$getCurrentSourc.anchorX,\n              anchorY = _this$getCurrentSourc.anchorY,\n              offsetX = _this$getCurrentSourc.offsetX,\n              offsetY = _this$getCurrentSourc.offsetY;\n            var anchorPoint = {\n              anchorX: anchorX,\n              anchorY: anchorY\n            };\n            var offsetPoint = {\n              offsetX: offsetX,\n              offsetY: offsetY\n            };\n            var dragPreviewOffset = getDragPreviewOffset(sourceNode, dragPreview, clientOffset, anchorPoint, offsetPoint);\n            dataTransfer.setDragImage(dragPreview, dragPreviewOffset.x, dragPreviewOffset.y);\n          }\n        }\n        try {\n          // Firefox won't drag without setting data\n          dataTransfer === null || dataTransfer === void 0 ? void 0 : dataTransfer.setData('application/json', {});\n        } catch (err) {\n          // IE doesn't support MIME types in setData\n        }\n        // Store drag source node so we can check whether\n        // it is removed from DOM and trigger endDrag manually.\n        _this.setCurrentDragSourceNode(e.target);\n        // Now we are ready to publish the drag source.. or are we not?\n        var _this$getCurrentSourc2 = _this.getCurrentSourcePreviewNodeOptions(),\n          captureDraggingState = _this$getCurrentSourc2.captureDraggingState;\n        if (!captureDraggingState) {\n          // Usually we want to publish it in the next tick so that browser\n          // is able to screenshot the current (not yet dragging) state.\n          //\n          // It also neatly avoids a situation where render() returns null\n          // in the same tick for the source element, and browser freaks out.\n          setTimeout(function () {\n            return _this.actions.publishDragSource();\n          }, 0);\n        } else {\n          // In some cases the user may want to override this behavior, e.g.\n          // to work around IE not supporting custom drag previews.\n          //\n          // When using a custom drag layer, the only way to prevent\n          // the default drag preview from drawing in IE is to screenshot\n          // the dragging state in which the node itself has zero opacity\n          // and height. In this case, though, returning null from render()\n          // will abruptly end the dragging, which is not obvious.\n          //\n          // This is the reason such behavior is strictly opt-in.\n          _this.actions.publishDragSource();\n        }\n      } else if (nativeType) {\n        // A native item (such as URL) dragged from inside the document\n        _this.beginDragNativeItem(nativeType);\n      } else if (dataTransfer && !dataTransfer.types && (e.target && !e.target.hasAttribute || !e.target.hasAttribute('draggable'))) {\n        // Looks like a Safari bug: dataTransfer.types is null, but there was no draggable.\n        // Just let it drag. It's a native type (URL or text) and will be picked up in\n        // dragenter handler.\n        return;\n      } else {\n        // If by this time no drag source reacted, tell browser not to drag.\n        e.preventDefault();\n      }\n    };\n    this.handleTopDragEndCapture = function () {\n      if (_this.clearCurrentDragSourceNode() && _this.monitor.isDragging()) {\n        // Firefox can dispatch this event in an infinite loop\n        // if dragend handler does something like showing an alert.\n        // Only proceed if we have not handled it already.\n        _this.actions.endDrag();\n      }\n      _this.cancelHover();\n    };\n    this.handleTopDragEnterCapture = function (e) {\n      _this.dragEnterTargetIds = [];\n      if (_this.isDraggingNativeItem()) {\n        var ref;\n        (ref = _this.currentNativeSource) === null || ref === void 0 ? void 0 : ref.loadDataTransfer(e.dataTransfer);\n      }\n      var isFirstEnter = _this.enterLeaveCounter.enter(e.target);\n      if (!isFirstEnter || _this.monitor.isDragging()) {\n        return;\n      }\n      var dataTransfer = e.dataTransfer;\n      var nativeType = matchNativeItemType(dataTransfer);\n      if (nativeType) {\n        // A native item (such as file or URL) dragged from outside the document\n        _this.beginDragNativeItem(nativeType, dataTransfer);\n      }\n    };\n    this.handleTopDragEnter = function (e) {\n      var dragEnterTargetIds = _this.dragEnterTargetIds;\n      _this.dragEnterTargetIds = [];\n      if (!_this.monitor.isDragging()) {\n        // This is probably a native item type we don't understand.\n        return;\n      }\n      _this.altKeyPressed = e.altKey;\n      // If the target changes position as the result of `dragenter`, `dragover` might still\n      // get dispatched despite target being no longer there. The easy solution is to check\n      // whether there actually is a target before firing `hover`.\n      if (dragEnterTargetIds.length > 0) {\n        _this.actions.hover(dragEnterTargetIds, {\n          clientOffset: getEventClientOffset(e)\n        });\n      }\n      var canDrop = dragEnterTargetIds.some(function (targetId) {\n        return _this.monitor.canDropOnTarget(targetId);\n      });\n      if (canDrop) {\n        // IE requires this to fire dragover events\n        e.preventDefault();\n        if (e.dataTransfer) {\n          e.dataTransfer.dropEffect = _this.getCurrentDropEffect();\n        }\n      }\n    };\n    this.handleTopDragOverCapture = function (e) {\n      _this.dragOverTargetIds = [];\n      if (_this.isDraggingNativeItem()) {\n        var ref;\n        (ref = _this.currentNativeSource) === null || ref === void 0 ? void 0 : ref.loadDataTransfer(e.dataTransfer);\n      }\n    };\n    this.handleTopDragOver = function (e) {\n      var dragOverTargetIds = _this.dragOverTargetIds;\n      _this.dragOverTargetIds = [];\n      if (!_this.monitor.isDragging()) {\n        // This is probably a native item type we don't understand.\n        // Prevent default \"drop and blow away the whole document\" action.\n        e.preventDefault();\n        if (e.dataTransfer) {\n          e.dataTransfer.dropEffect = 'none';\n        }\n        return;\n      }\n      _this.altKeyPressed = e.altKey;\n      _this.lastClientOffset = getEventClientOffset(e);\n      _this.scheduleHover(dragOverTargetIds);\n      var canDrop = (dragOverTargetIds || []).some(function (targetId) {\n        return _this.monitor.canDropOnTarget(targetId);\n      });\n      if (canDrop) {\n        // Show user-specified drop effect.\n        e.preventDefault();\n        if (e.dataTransfer) {\n          e.dataTransfer.dropEffect = _this.getCurrentDropEffect();\n        }\n      } else if (_this.isDraggingNativeItem()) {\n        // Don't show a nice cursor but still prevent default\n        // \"drop and blow away the whole document\" action.\n        e.preventDefault();\n      } else {\n        e.preventDefault();\n        if (e.dataTransfer) {\n          e.dataTransfer.dropEffect = 'none';\n        }\n      }\n    };\n    this.handleTopDragLeaveCapture = function (e) {\n      if (_this.isDraggingNativeItem()) {\n        e.preventDefault();\n      }\n      var isLastLeave = _this.enterLeaveCounter.leave(e.target);\n      if (!isLastLeave) {\n        return;\n      }\n      if (_this.isDraggingNativeItem()) {\n        setTimeout(function () {\n          return _this.endDragNativeItem();\n        }, 0);\n      }\n      _this.cancelHover();\n    };\n    this.handleTopDropCapture = function (e) {\n      _this.dropTargetIds = [];\n      if (_this.isDraggingNativeItem()) {\n        var ref;\n        e.preventDefault();\n        (ref = _this.currentNativeSource) === null || ref === void 0 ? void 0 : ref.loadDataTransfer(e.dataTransfer);\n      } else if (matchNativeItemType(e.dataTransfer)) {\n        // Dragging some elements, like <a> and <img> may still behave like a native drag event,\n        // even if the current drag event matches a user-defined type.\n        // Stop the default behavior when we're not expecting a native item to be dropped.\n        e.preventDefault();\n      }\n      _this.enterLeaveCounter.reset();\n    };\n    this.handleTopDrop = function (e) {\n      var dropTargetIds = _this.dropTargetIds;\n      _this.dropTargetIds = [];\n      _this.actions.hover(dropTargetIds, {\n        clientOffset: getEventClientOffset(e)\n      });\n      _this.actions.drop({\n        dropEffect: _this.getCurrentDropEffect()\n      });\n      if (_this.isDraggingNativeItem()) {\n        _this.endDragNativeItem();\n      } else if (_this.monitor.isDragging()) {\n        _this.actions.endDrag();\n      }\n      _this.cancelHover();\n    };\n    this.handleSelectStart = function (e) {\n      var target = e.target;\n      // Only IE requires us to explicitly say\n      // we want drag drop operation to start\n      if (typeof target.dragDrop !== 'function') {\n        return;\n      }\n      // Inputs and textareas should be selectable\n      if (target.tagName === 'INPUT' || target.tagName === 'SELECT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n        return;\n      }\n      // For other targets, ask IE\n      // to enable drag and drop\n      e.preventDefault();\n      target.dragDrop();\n    };\n    this.options = new OptionsReader(globalContext, options);\n    this.actions = manager.getActions();\n    this.monitor = manager.getMonitor();\n    this.registry = manager.getRegistry();\n    this.enterLeaveCounter = new EnterLeaveCounter(this.isNodeInDocument);\n  }\n  _createClass(HTML5BackendImpl, [{\n    key: \"profile\",\n    value:\n    /**\n    * Generate profiling statistics for the HTML5Backend.\n    */\n    function profile() {\n      var ref, ref1;\n      return {\n        sourcePreviewNodes: this.sourcePreviewNodes.size,\n        sourcePreviewNodeOptions: this.sourcePreviewNodeOptions.size,\n        sourceNodeOptions: this.sourceNodeOptions.size,\n        sourceNodes: this.sourceNodes.size,\n        dragStartSourceIds: ((ref = this.dragStartSourceIds) === null || ref === void 0 ? void 0 : ref.length) || 0,\n        dropTargetIds: this.dropTargetIds.length,\n        dragEnterTargetIds: this.dragEnterTargetIds.length,\n        dragOverTargetIds: ((ref1 = this.dragOverTargetIds) === null || ref1 === void 0 ? void 0 : ref1.length) || 0\n      };\n    }\n    // public for test\n  }, {\n    key: \"window\",\n    get: function get() {\n      return this.options.window;\n    }\n  }, {\n    key: \"document\",\n    get: function get() {\n      return this.options.document;\n    }\n    /**\n    * Get the root element to use for event subscriptions\n    */\n  }, {\n    key: \"rootElement\",\n    get: function get() {\n      return this.options.rootElement;\n    }\n  }, {\n    key: \"setup\",\n    value: function setup() {\n      var root = this.rootElement;\n      if (root === undefined) {\n        return;\n      }\n      if (root.__isReactDndBackendSetUp) {\n        throw new Error('Cannot have two HTML5 backends at the same time.');\n      }\n      root.__isReactDndBackendSetUp = true;\n      this.addEventListeners(root);\n    }\n  }, {\n    key: \"teardown\",\n    value: function teardown() {\n      var root = this.rootElement;\n      if (root === undefined) {\n        return;\n      }\n      root.__isReactDndBackendSetUp = false;\n      this.removeEventListeners(this.rootElement);\n      this.clearCurrentDragSourceNode();\n      if (this.asyncEndDragFrameId) {\n        var ref;\n        (ref = this.window) === null || ref === void 0 ? void 0 : ref.cancelAnimationFrame(this.asyncEndDragFrameId);\n      }\n    }\n  }, {\n    key: \"connectDragPreview\",\n    value: function connectDragPreview(sourceId, node, options) {\n      var _this2 = this;\n      this.sourcePreviewNodeOptions.set(sourceId, options);\n      this.sourcePreviewNodes.set(sourceId, node);\n      return function () {\n        _this2.sourcePreviewNodes.delete(sourceId);\n        _this2.sourcePreviewNodeOptions.delete(sourceId);\n      };\n    }\n  }, {\n    key: \"connectDragSource\",\n    value: function connectDragSource(sourceId, node, options) {\n      var _this3 = this;\n      this.sourceNodes.set(sourceId, node);\n      this.sourceNodeOptions.set(sourceId, options);\n      var handleDragStart = function handleDragStart(e) {\n        return _this3.handleDragStart(e, sourceId);\n      };\n      var handleSelectStart = function handleSelectStart(e) {\n        return _this3.handleSelectStart(e);\n      };\n      node.setAttribute('draggable', 'true');\n      node.addEventListener('dragstart', handleDragStart);\n      node.addEventListener('selectstart', handleSelectStart);\n      return function () {\n        _this3.sourceNodes.delete(sourceId);\n        _this3.sourceNodeOptions.delete(sourceId);\n        node.removeEventListener('dragstart', handleDragStart);\n        node.removeEventListener('selectstart', handleSelectStart);\n        node.setAttribute('draggable', 'false');\n      };\n    }\n  }, {\n    key: \"connectDropTarget\",\n    value: function connectDropTarget(targetId, node) {\n      var _this4 = this;\n      var handleDragEnter = function handleDragEnter(e) {\n        return _this4.handleDragEnter(e, targetId);\n      };\n      var handleDragOver = function handleDragOver(e) {\n        return _this4.handleDragOver(e, targetId);\n      };\n      var handleDrop = function handleDrop(e) {\n        return _this4.handleDrop(e, targetId);\n      };\n      node.addEventListener('dragenter', handleDragEnter);\n      node.addEventListener('dragover', handleDragOver);\n      node.addEventListener('drop', handleDrop);\n      return function () {\n        node.removeEventListener('dragenter', handleDragEnter);\n        node.removeEventListener('dragover', handleDragOver);\n        node.removeEventListener('drop', handleDrop);\n      };\n    }\n  }, {\n    key: \"addEventListeners\",\n    value: function addEventListeners(target) {\n      // SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n      if (!target.addEventListener) {\n        return;\n      }\n      target.addEventListener('dragstart', this.handleTopDragStart);\n      target.addEventListener('dragstart', this.handleTopDragStartCapture, true);\n      target.addEventListener('dragend', this.handleTopDragEndCapture, true);\n      target.addEventListener('dragenter', this.handleTopDragEnter);\n      target.addEventListener('dragenter', this.handleTopDragEnterCapture, true);\n      target.addEventListener('dragleave', this.handleTopDragLeaveCapture, true);\n      target.addEventListener('dragover', this.handleTopDragOver);\n      target.addEventListener('dragover', this.handleTopDragOverCapture, true);\n      target.addEventListener('drop', this.handleTopDrop);\n      target.addEventListener('drop', this.handleTopDropCapture, true);\n    }\n  }, {\n    key: \"removeEventListeners\",\n    value: function removeEventListeners(target) {\n      // SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n      if (!target.removeEventListener) {\n        return;\n      }\n      target.removeEventListener('dragstart', this.handleTopDragStart);\n      target.removeEventListener('dragstart', this.handleTopDragStartCapture, true);\n      target.removeEventListener('dragend', this.handleTopDragEndCapture, true);\n      target.removeEventListener('dragenter', this.handleTopDragEnter);\n      target.removeEventListener('dragenter', this.handleTopDragEnterCapture, true);\n      target.removeEventListener('dragleave', this.handleTopDragLeaveCapture, true);\n      target.removeEventListener('dragover', this.handleTopDragOver);\n      target.removeEventListener('dragover', this.handleTopDragOverCapture, true);\n      target.removeEventListener('drop', this.handleTopDrop);\n      target.removeEventListener('drop', this.handleTopDropCapture, true);\n    }\n  }, {\n    key: \"getCurrentSourceNodeOptions\",\n    value: function getCurrentSourceNodeOptions() {\n      var sourceId = this.monitor.getSourceId();\n      var sourceNodeOptions = this.sourceNodeOptions.get(sourceId);\n      return _objectSpread({\n        dropEffect: this.altKeyPressed ? 'copy' : 'move'\n      }, sourceNodeOptions || {});\n    }\n  }, {\n    key: \"getCurrentDropEffect\",\n    value: function getCurrentDropEffect() {\n      if (this.isDraggingNativeItem()) {\n        // It makes more sense to default to 'copy' for native resources\n        return 'copy';\n      }\n      return this.getCurrentSourceNodeOptions().dropEffect;\n    }\n  }, {\n    key: \"getCurrentSourcePreviewNodeOptions\",\n    value: function getCurrentSourcePreviewNodeOptions() {\n      var sourceId = this.monitor.getSourceId();\n      var sourcePreviewNodeOptions = this.sourcePreviewNodeOptions.get(sourceId);\n      return _objectSpread({\n        anchorX: 0.5,\n        anchorY: 0.5,\n        captureDraggingState: false\n      }, sourcePreviewNodeOptions || {});\n    }\n  }, {\n    key: \"isDraggingNativeItem\",\n    value: function isDraggingNativeItem() {\n      var itemType = this.monitor.getItemType();\n      return Object.keys(NativeTypes).some(function (key) {\n        return NativeTypes[key] === itemType;\n      });\n    }\n  }, {\n    key: \"beginDragNativeItem\",\n    value: function beginDragNativeItem(type, dataTransfer) {\n      this.clearCurrentDragSourceNode();\n      this.currentNativeSource = createNativeDragSource(type, dataTransfer);\n      this.currentNativeHandle = this.registry.addSource(type, this.currentNativeSource);\n      this.actions.beginDrag([this.currentNativeHandle]);\n    }\n  }, {\n    key: \"setCurrentDragSourceNode\",\n    value: function setCurrentDragSourceNode(node) {\n      var _this5 = this;\n      this.clearCurrentDragSourceNode();\n      this.currentDragSourceNode = node;\n      // A timeout of > 0 is necessary to resolve Firefox issue referenced\n      // See:\n      //   * https://github.com/react-dnd/react-dnd/pull/928\n      //   * https://github.com/react-dnd/react-dnd/issues/869\n      var MOUSE_MOVE_TIMEOUT = 1000;\n      // Receiving a mouse event in the middle of a dragging operation\n      // means it has ended and the drag source node disappeared from DOM,\n      // so the browser didn't dispatch the dragend event.\n      //\n      // We need to wait before we start listening for mousemove events.\n      // This is needed because the drag preview needs to be drawn or else it fires an 'mousemove' event\n      // immediately in some browsers.\n      //\n      // See:\n      //   * https://github.com/react-dnd/react-dnd/pull/928\n      //   * https://github.com/react-dnd/react-dnd/issues/869\n      //\n      this.mouseMoveTimeoutTimer = setTimeout(function () {\n        var ref;\n        return (ref = _this5.rootElement) === null || ref === void 0 ? void 0 : ref.addEventListener('mousemove', _this5.endDragIfSourceWasRemovedFromDOM, true);\n      }, MOUSE_MOVE_TIMEOUT);\n    }\n  }, {\n    key: \"clearCurrentDragSourceNode\",\n    value: function clearCurrentDragSourceNode() {\n      if (this.currentDragSourceNode) {\n        this.currentDragSourceNode = null;\n        if (this.rootElement) {\n          var ref;\n          (ref = this.window) === null || ref === void 0 ? void 0 : ref.clearTimeout(this.mouseMoveTimeoutTimer || undefined);\n          this.rootElement.removeEventListener('mousemove', this.endDragIfSourceWasRemovedFromDOM, true);\n        }\n        this.mouseMoveTimeoutTimer = null;\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"handleDragStart\",\n    value: function handleDragStart(e, sourceId) {\n      if (e.defaultPrevented) {\n        return;\n      }\n      if (!this.dragStartSourceIds) {\n        this.dragStartSourceIds = [];\n      }\n      this.dragStartSourceIds.unshift(sourceId);\n    }\n  }, {\n    key: \"handleDragEnter\",\n    value: function handleDragEnter(_e, targetId) {\n      this.dragEnterTargetIds.unshift(targetId);\n    }\n  }, {\n    key: \"handleDragOver\",\n    value: function handleDragOver(_e, targetId) {\n      if (this.dragOverTargetIds === null) {\n        this.dragOverTargetIds = [];\n      }\n      this.dragOverTargetIds.unshift(targetId);\n    }\n  }, {\n    key: \"handleDrop\",\n    value: function handleDrop(_e, targetId) {\n      this.dropTargetIds.unshift(targetId);\n    }\n  }]);\n  return HTML5BackendImpl;\n}();","map":{"version":3,"names":["_defineProperty","obj","key","value","EnterLeaveCounter","createNativeDragSource","matchNativeItemType","NativeTypes","getDragPreviewOffset","getEventClientOffset","getNodeClientOffset","OptionsReader","HTML5BackendImpl","manager","globalContext","options","_this","_classCallCheck","sourcePreviewNodes","Map","sourcePreviewNodeOptions","sourceNodes","sourceNodeOptions","dragStartSourceIds","dropTargetIds","dragEnterTargetIds","currentNativeSource","currentNativeHandle","currentDragSourceNode","altKeyPressed","mouseMoveTimeoutTimer","asyncEndDragFrameId","dragOverTargetIds","lastClientOffset","hoverRafId","getSourceClientOffset","sourceId","source","get","endDragNativeItem","isDraggingNativeItem","actions","endDrag","registry","removeSource","isNodeInDocument","node","Boolean","document","body","contains","endDragIfSourceWasRemovedFromDOM","clearCurrentDragSourceNode","monitor","isDragging","cancelHover","scheduleHover","requestAnimationFrame","hover","clientOffset","cancelAnimationFrame","handleTopDragStartCapture","handleTopDragStart","e","defaultPrevented","beginDrag","publishSource","dataTransfer","nativeType","setDragImage","getSourceId","sourceNode","dragPreview","_this$getCurrentSourc","getCurrentSourcePreviewNodeOptions","anchorX","anchorY","offsetX","offsetY","anchorPoint","offsetPoint","dragPreviewOffset","x","y","setData","err","setCurrentDragSourceNode","target","_this$getCurrentSourc2","captureDraggingState","setTimeout","publishDragSource","beginDragNativeItem","types","hasAttribute","preventDefault","handleTopDragEndCapture","handleTopDragEnterCapture","ref","loadDataTransfer","isFirstEnter","enterLeaveCounter","enter","handleTopDragEnter","altKey","length","canDrop","some","targetId","canDropOnTarget","dropEffect","getCurrentDropEffect","handleTopDragOverCapture","handleTopDragOver","handleTopDragLeaveCapture","isLastLeave","leave","handleTopDropCapture","reset","handleTopDrop","drop","handleSelectStart","dragDrop","tagName","isContentEditable","getActions","getMonitor","getRegistry","_createClass","profile","ref1","size","window","rootElement","setup","root","undefined","__isReactDndBackendSetUp","Error","addEventListeners","teardown","removeEventListeners","connectDragPreview","_this2","set","delete","connectDragSource","_this3","handleDragStart","setAttribute","addEventListener","removeEventListener","connectDropTarget","_this4","handleDragEnter","handleDragOver","handleDrop","getCurrentSourceNodeOptions","_objectSpread","itemType","getItemType","Object","keys","type","addSource","_this5","MOUSE_MOVE_TIMEOUT","clearTimeout","unshift","_e"],"sources":["/Users/zhangqiang/Documents/GitHub/frontEnd-all-knowledge/examples/react/a08antd带编辑的表格/node_modules/react-dnd-html5-backend/src/HTML5BackendImpl.ts"],"sourcesContent":["import type {\n\tBackend,\n\tDragDropActions,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport { EnterLeaveCounter } from './EnterLeaveCounter.js'\nimport {\n\tcreateNativeDragSource,\n\tmatchNativeItemType,\n} from './NativeDragSources/index.js'\nimport type { NativeDragSource } from './NativeDragSources/NativeDragSource.js'\nimport * as NativeTypes from './NativeTypes.js'\nimport {\n\tgetDragPreviewOffset,\n\tgetEventClientOffset,\n\tgetNodeClientOffset,\n} from './OffsetUtils.js'\nimport { OptionsReader } from './OptionsReader.js'\nimport type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\n\ntype RootNode = Node & { __isReactDndBackendSetUp: boolean | undefined }\n\nexport class HTML5BackendImpl implements Backend {\n\tprivate options: OptionsReader\n\n\t// React-Dnd Components\n\tprivate actions: DragDropActions\n\tprivate monitor: DragDropMonitor\n\tprivate registry: HandlerRegistry\n\n\t// Internal State\n\tprivate enterLeaveCounter: EnterLeaveCounter\n\n\tprivate sourcePreviewNodes: Map<string, Element> = new Map()\n\tprivate sourcePreviewNodeOptions: Map<string, any> = new Map()\n\tprivate sourceNodes: Map<string, Element> = new Map()\n\tprivate sourceNodeOptions: Map<string, any> = new Map()\n\n\tprivate dragStartSourceIds: string[] | null = null\n\tprivate dropTargetIds: string[] = []\n\tprivate dragEnterTargetIds: string[] = []\n\tprivate currentNativeSource: NativeDragSource | null = null\n\tprivate currentNativeHandle: Identifier | null = null\n\tprivate currentDragSourceNode: Element | null = null\n\tprivate altKeyPressed = false\n\tprivate mouseMoveTimeoutTimer: number | null = null\n\tprivate asyncEndDragFrameId: number | null = null\n\tprivate dragOverTargetIds: string[] | null = null\n\n\tprivate lastClientOffset: XYCoord | null = null\n\tprivate hoverRafId: number | null = null\n\n\tpublic constructor(\n\t\tmanager: DragDropManager,\n\t\tglobalContext?: HTML5BackendContext,\n\t\toptions?: HTML5BackendOptions,\n\t) {\n\t\tthis.options = new OptionsReader(globalContext, options)\n\t\tthis.actions = manager.getActions()\n\t\tthis.monitor = manager.getMonitor()\n\t\tthis.registry = manager.getRegistry()\n\t\tthis.enterLeaveCounter = new EnterLeaveCounter(this.isNodeInDocument)\n\t}\n\n\t/**\n\t * Generate profiling statistics for the HTML5Backend.\n\t */\n\tpublic profile(): Record<string, number> {\n\t\treturn {\n\t\t\tsourcePreviewNodes: this.sourcePreviewNodes.size,\n\t\t\tsourcePreviewNodeOptions: this.sourcePreviewNodeOptions.size,\n\t\t\tsourceNodeOptions: this.sourceNodeOptions.size,\n\t\t\tsourceNodes: this.sourceNodes.size,\n\t\t\tdragStartSourceIds: this.dragStartSourceIds?.length || 0,\n\t\t\tdropTargetIds: this.dropTargetIds.length,\n\t\t\tdragEnterTargetIds: this.dragEnterTargetIds.length,\n\t\t\tdragOverTargetIds: this.dragOverTargetIds?.length || 0,\n\t\t}\n\t}\n\n\t// public for test\n\tpublic get window(): Window | undefined {\n\t\treturn this.options.window\n\t}\n\tpublic get document(): Document | undefined {\n\t\treturn this.options.document\n\t}\n\t/**\n\t * Get the root element to use for event subscriptions\n\t */\n\tprivate get rootElement(): Node | undefined {\n\t\treturn this.options.rootElement as Node\n\t}\n\n\tpublic setup(): void {\n\t\tconst root = this.rootElement as RootNode | undefined\n\t\tif (root === undefined) {\n\t\t\treturn\n\t\t}\n\n\t\tif (root.__isReactDndBackendSetUp) {\n\t\t\tthrow new Error('Cannot have two HTML5 backends at the same time.')\n\t\t}\n\t\troot.__isReactDndBackendSetUp = true\n\t\tthis.addEventListeners(root)\n\t}\n\n\tpublic teardown(): void {\n\t\tconst root = this.rootElement as RootNode\n\t\tif (root === undefined) {\n\t\t\treturn\n\t\t}\n\n\t\troot.__isReactDndBackendSetUp = false\n\t\tthis.removeEventListeners(this.rootElement as Element)\n\t\tthis.clearCurrentDragSourceNode()\n\t\tif (this.asyncEndDragFrameId) {\n\t\t\tthis.window?.cancelAnimationFrame(this.asyncEndDragFrameId)\n\t\t}\n\t}\n\n\tpublic connectDragPreview(\n\t\tsourceId: string,\n\t\tnode: Element,\n\t\toptions: any,\n\t): Unsubscribe {\n\t\tthis.sourcePreviewNodeOptions.set(sourceId, options)\n\t\tthis.sourcePreviewNodes.set(sourceId, node)\n\n\t\treturn (): void => {\n\t\t\tthis.sourcePreviewNodes.delete(sourceId)\n\t\t\tthis.sourcePreviewNodeOptions.delete(sourceId)\n\t\t}\n\t}\n\n\tpublic connectDragSource(\n\t\tsourceId: string,\n\t\tnode: Element,\n\t\toptions: any,\n\t): Unsubscribe {\n\t\tthis.sourceNodes.set(sourceId, node)\n\t\tthis.sourceNodeOptions.set(sourceId, options)\n\n\t\tconst handleDragStart = (e: any) => this.handleDragStart(e, sourceId)\n\t\tconst handleSelectStart = (e: any) => this.handleSelectStart(e)\n\n\t\tnode.setAttribute('draggable', 'true')\n\t\tnode.addEventListener('dragstart', handleDragStart)\n\t\tnode.addEventListener('selectstart', handleSelectStart)\n\n\t\treturn (): void => {\n\t\t\tthis.sourceNodes.delete(sourceId)\n\t\t\tthis.sourceNodeOptions.delete(sourceId)\n\n\t\t\tnode.removeEventListener('dragstart', handleDragStart)\n\t\t\tnode.removeEventListener('selectstart', handleSelectStart)\n\t\t\tnode.setAttribute('draggable', 'false')\n\t\t}\n\t}\n\n\tpublic connectDropTarget(targetId: string, node: HTMLElement): Unsubscribe {\n\t\tconst handleDragEnter = (e: DragEvent) => this.handleDragEnter(e, targetId)\n\t\tconst handleDragOver = (e: DragEvent) => this.handleDragOver(e, targetId)\n\t\tconst handleDrop = (e: DragEvent) => this.handleDrop(e, targetId)\n\n\t\tnode.addEventListener('dragenter', handleDragEnter)\n\t\tnode.addEventListener('dragover', handleDragOver)\n\t\tnode.addEventListener('drop', handleDrop)\n\n\t\treturn (): void => {\n\t\t\tnode.removeEventListener('dragenter', handleDragEnter)\n\t\t\tnode.removeEventListener('dragover', handleDragOver)\n\t\t\tnode.removeEventListener('drop', handleDrop)\n\t\t}\n\t}\n\n\tprivate addEventListeners(target: Node) {\n\t\t// SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n\t\tif (!target.addEventListener) {\n\t\t\treturn\n\t\t}\n\t\ttarget.addEventListener(\n\t\t\t'dragstart',\n\t\t\tthis.handleTopDragStart as EventListener,\n\t\t)\n\t\ttarget.addEventListener('dragstart', this.handleTopDragStartCapture, true)\n\t\ttarget.addEventListener('dragend', this.handleTopDragEndCapture, true)\n\t\ttarget.addEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnter as EventListener,\n\t\t)\n\t\ttarget.addEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnterCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener(\n\t\t\t'dragleave',\n\t\t\tthis.handleTopDragLeaveCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener('dragover', this.handleTopDragOver as EventListener)\n\t\ttarget.addEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOverCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener('drop', this.handleTopDrop as EventListener)\n\t\ttarget.addEventListener(\n\t\t\t'drop',\n\t\t\tthis.handleTopDropCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t}\n\n\tprivate removeEventListeners(target: Node) {\n\t\t// SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n\t\tif (!target.removeEventListener) {\n\t\t\treturn\n\t\t}\n\t\ttarget.removeEventListener('dragstart', this.handleTopDragStart as any)\n\t\ttarget.removeEventListener(\n\t\t\t'dragstart',\n\t\t\tthis.handleTopDragStartCapture,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener('dragend', this.handleTopDragEndCapture, true)\n\t\ttarget.removeEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnter as EventListener,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnterCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragleave',\n\t\t\tthis.handleTopDragLeaveCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOver as EventListener,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOverCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener('drop', this.handleTopDrop as EventListener)\n\t\ttarget.removeEventListener(\n\t\t\t'drop',\n\t\t\tthis.handleTopDropCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t}\n\n\tprivate getCurrentSourceNodeOptions() {\n\t\tconst sourceId = this.monitor.getSourceId() as string\n\t\tconst sourceNodeOptions = this.sourceNodeOptions.get(sourceId)\n\n\t\treturn {\n\t\t\tdropEffect: this.altKeyPressed ? 'copy' : 'move',\n\t\t\t...(sourceNodeOptions || {}),\n\t\t}\n\t}\n\n\tprivate getCurrentDropEffect() {\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\t// It makes more sense to default to 'copy' for native resources\n\t\t\treturn 'copy'\n\t\t}\n\n\t\treturn this.getCurrentSourceNodeOptions().dropEffect\n\t}\n\n\tprivate getCurrentSourcePreviewNodeOptions() {\n\t\tconst sourceId = this.monitor.getSourceId() as string\n\t\tconst sourcePreviewNodeOptions = this.sourcePreviewNodeOptions.get(sourceId)\n\n\t\treturn {\n\t\t\tanchorX: 0.5,\n\t\t\tanchorY: 0.5,\n\t\t\tcaptureDraggingState: false,\n\t\t\t...(sourcePreviewNodeOptions || {}),\n\t\t}\n\t}\n\n\tprivate getSourceClientOffset = (sourceId: string): XYCoord | null => {\n\t\tconst source = this.sourceNodes.get(sourceId)\n\t\treturn (source && getNodeClientOffset(source as HTMLElement)) || null\n\t}\n\n\tprivate isDraggingNativeItem() {\n\t\tconst itemType = this.monitor.getItemType()\n\t\treturn Object.keys(NativeTypes).some(\n\t\t\t(key: string) => (NativeTypes as any)[key] === itemType,\n\t\t)\n\t}\n\n\tprivate beginDragNativeItem(type: string, dataTransfer?: DataTransfer) {\n\t\tthis.clearCurrentDragSourceNode()\n\n\t\tthis.currentNativeSource = createNativeDragSource(type, dataTransfer)\n\t\tthis.currentNativeHandle = this.registry.addSource(\n\t\t\ttype,\n\t\t\tthis.currentNativeSource,\n\t\t)\n\t\tthis.actions.beginDrag([this.currentNativeHandle])\n\t}\n\n\tprivate endDragNativeItem = (): void => {\n\t\tif (!this.isDraggingNativeItem()) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.actions.endDrag()\n\t\tif (this.currentNativeHandle) {\n\t\t\tthis.registry.removeSource(this.currentNativeHandle)\n\t\t}\n\t\tthis.currentNativeHandle = null\n\t\tthis.currentNativeSource = null\n\t}\n\n\tprivate isNodeInDocument = (node: Node | null | undefined): boolean => {\n\t\t// Check the node either in the main document or in the current context\n\t\treturn Boolean(\n\t\t\tnode &&\n\t\t\t\tthis.document &&\n\t\t\t\tthis.document.body &&\n\t\t\t\tthis.document.body.contains(node),\n\t\t)\n\t}\n\n\tprivate endDragIfSourceWasRemovedFromDOM = (): void => {\n\t\tconst node = this.currentDragSourceNode\n\t\tif (node == null || this.isNodeInDocument(node)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (this.clearCurrentDragSourceNode() && this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tprivate setCurrentDragSourceNode(node: Element | null) {\n\t\tthis.clearCurrentDragSourceNode()\n\t\tthis.currentDragSourceNode = node\n\n\t\t// A timeout of > 0 is necessary to resolve Firefox issue referenced\n\t\t// See:\n\t\t//   * https://github.com/react-dnd/react-dnd/pull/928\n\t\t//   * https://github.com/react-dnd/react-dnd/issues/869\n\t\tconst MOUSE_MOVE_TIMEOUT = 1000\n\n\t\t// Receiving a mouse event in the middle of a dragging operation\n\t\t// means it has ended and the drag source node disappeared from DOM,\n\t\t// so the browser didn't dispatch the dragend event.\n\t\t//\n\t\t// We need to wait before we start listening for mousemove events.\n\t\t// This is needed because the drag preview needs to be drawn or else it fires an 'mousemove' event\n\t\t// immediately in some browsers.\n\t\t//\n\t\t// See:\n\t\t//   * https://github.com/react-dnd/react-dnd/pull/928\n\t\t//   * https://github.com/react-dnd/react-dnd/issues/869\n\t\t//\n\t\tthis.mouseMoveTimeoutTimer = setTimeout(() => {\n\t\t\treturn this.rootElement?.addEventListener(\n\t\t\t\t'mousemove',\n\t\t\t\tthis.endDragIfSourceWasRemovedFromDOM,\n\t\t\t\ttrue,\n\t\t\t)\n\t\t}, MOUSE_MOVE_TIMEOUT) as any as number\n\t}\n\n\tprivate clearCurrentDragSourceNode() {\n\t\tif (this.currentDragSourceNode) {\n\t\t\tthis.currentDragSourceNode = null\n\n\t\t\tif (this.rootElement) {\n\t\t\t\tthis.window?.clearTimeout(this.mouseMoveTimeoutTimer || undefined)\n\t\t\t\tthis.rootElement.removeEventListener(\n\t\t\t\t\t'mousemove',\n\t\t\t\t\tthis.endDragIfSourceWasRemovedFromDOM,\n\t\t\t\t\ttrue,\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tthis.mouseMoveTimeoutTimer = null\n\t\t\treturn true\n\t\t}\n\n\t\treturn false\n\t}\n\n\tprivate scheduleHover = (dragOverTargetIds: string[] | null) => {\n\t\tif (\n\t\t\tthis.hoverRafId === null &&\n\t\t\ttypeof requestAnimationFrame !== 'undefined'\n\t\t) {\n\t\t\tthis.hoverRafId = requestAnimationFrame(() => {\n\t\t\t\tif (this.monitor.isDragging()) {\n\t\t\t\t\tthis.actions.hover(dragOverTargetIds || [], {\n\t\t\t\t\t\tclientOffset: this.lastClientOffset,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tthis.hoverRafId = null\n\t\t\t})\n\t\t}\n\t}\n\n\tprivate cancelHover = () => {\n\t\tif (\n\t\t\tthis.hoverRafId !== null &&\n\t\t\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t) {\n\t\t\tcancelAnimationFrame(this.hoverRafId)\n\t\t\tthis.hoverRafId = null\n\t\t}\n\t}\n\n\tpublic handleTopDragStartCapture = (): void => {\n\t\tthis.clearCurrentDragSourceNode()\n\t\tthis.dragStartSourceIds = []\n\t}\n\n\tpublic handleDragStart(e: DragEvent, sourceId: string): void {\n\t\tif (e.defaultPrevented) {\n\t\t\treturn\n\t\t}\n\n\t\tif (!this.dragStartSourceIds) {\n\t\t\tthis.dragStartSourceIds = []\n\t\t}\n\t\tthis.dragStartSourceIds.unshift(sourceId)\n\t}\n\n\tpublic handleTopDragStart = (e: DragEvent): void => {\n\t\tif (e.defaultPrevented) {\n\t\t\treturn\n\t\t}\n\n\t\tconst { dragStartSourceIds } = this\n\t\tthis.dragStartSourceIds = null\n\n\t\tconst clientOffset = getEventClientOffset(e)\n\n\t\t// Avoid crashing if we missed a drop event or our previous drag died\n\t\tif (this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t\tthis.cancelHover()\n\t\t}\n\n\t\t// Don't publish the source just yet (see why below)\n\t\tthis.actions.beginDrag(dragStartSourceIds || [], {\n\t\t\tpublishSource: false,\n\t\t\tgetSourceClientOffset: this.getSourceClientOffset,\n\t\t\tclientOffset,\n\t\t})\n\n\t\tconst { dataTransfer } = e\n\t\tconst nativeType = matchNativeItemType(dataTransfer)\n\n\t\tif (this.monitor.isDragging()) {\n\t\t\tif (dataTransfer && typeof dataTransfer.setDragImage === 'function') {\n\t\t\t\t// Use custom drag image if user specifies it.\n\t\t\t\t// If child drag source refuses drag but parent agrees,\n\t\t\t\t// use parent's node as drag image. Neither works in IE though.\n\t\t\t\tconst sourceId: string = this.monitor.getSourceId() as string\n\t\t\t\tconst sourceNode = this.sourceNodes.get(sourceId)\n\t\t\t\tconst dragPreview = this.sourcePreviewNodes.get(sourceId) || sourceNode\n\n\t\t\t\tif (dragPreview) {\n\t\t\t\t\tconst { anchorX, anchorY, offsetX, offsetY } =\n\t\t\t\t\t\tthis.getCurrentSourcePreviewNodeOptions()\n\t\t\t\t\tconst anchorPoint = { anchorX, anchorY }\n\t\t\t\t\tconst offsetPoint = { offsetX, offsetY }\n\t\t\t\t\tconst dragPreviewOffset = getDragPreviewOffset(\n\t\t\t\t\t\tsourceNode as HTMLElement,\n\t\t\t\t\t\tdragPreview as HTMLElement,\n\t\t\t\t\t\tclientOffset,\n\t\t\t\t\t\tanchorPoint,\n\t\t\t\t\t\toffsetPoint,\n\t\t\t\t\t)\n\n\t\t\t\t\tdataTransfer.setDragImage(\n\t\t\t\t\t\tdragPreview,\n\t\t\t\t\t\tdragPreviewOffset.x,\n\t\t\t\t\t\tdragPreviewOffset.y,\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// Firefox won't drag without setting data\n\t\t\t\tdataTransfer?.setData('application/json', {} as any)\n\t\t\t} catch (err) {\n\t\t\t\t// IE doesn't support MIME types in setData\n\t\t\t}\n\n\t\t\t// Store drag source node so we can check whether\n\t\t\t// it is removed from DOM and trigger endDrag manually.\n\t\t\tthis.setCurrentDragSourceNode(e.target as Element)\n\n\t\t\t// Now we are ready to publish the drag source.. or are we not?\n\t\t\tconst { captureDraggingState } = this.getCurrentSourcePreviewNodeOptions()\n\t\t\tif (!captureDraggingState) {\n\t\t\t\t// Usually we want to publish it in the next tick so that browser\n\t\t\t\t// is able to screenshot the current (not yet dragging) state.\n\t\t\t\t//\n\t\t\t\t// It also neatly avoids a situation where render() returns null\n\t\t\t\t// in the same tick for the source element, and browser freaks out.\n\t\t\t\tsetTimeout(() => this.actions.publishDragSource(), 0)\n\t\t\t} else {\n\t\t\t\t// In some cases the user may want to override this behavior, e.g.\n\t\t\t\t// to work around IE not supporting custom drag previews.\n\t\t\t\t//\n\t\t\t\t// When using a custom drag layer, the only way to prevent\n\t\t\t\t// the default drag preview from drawing in IE is to screenshot\n\t\t\t\t// the dragging state in which the node itself has zero opacity\n\t\t\t\t// and height. In this case, though, returning null from render()\n\t\t\t\t// will abruptly end the dragging, which is not obvious.\n\t\t\t\t//\n\t\t\t\t// This is the reason such behavior is strictly opt-in.\n\t\t\t\tthis.actions.publishDragSource()\n\t\t\t}\n\t\t} else if (nativeType) {\n\t\t\t// A native item (such as URL) dragged from inside the document\n\t\t\tthis.beginDragNativeItem(nativeType)\n\t\t} else if (\n\t\t\tdataTransfer &&\n\t\t\t!dataTransfer.types &&\n\t\t\t((e.target && !(e.target as Element).hasAttribute) ||\n\t\t\t\t!(e.target as Element).hasAttribute('draggable'))\n\t\t) {\n\t\t\t// Looks like a Safari bug: dataTransfer.types is null, but there was no draggable.\n\t\t\t// Just let it drag. It's a native type (URL or text) and will be picked up in\n\t\t\t// dragenter handler.\n\t\t\treturn\n\t\t} else {\n\t\t\t// If by this time no drag source reacted, tell browser not to drag.\n\t\t\te.preventDefault()\n\t\t}\n\t}\n\n\tpublic handleTopDragEndCapture = (): void => {\n\t\tif (this.clearCurrentDragSourceNode() && this.monitor.isDragging()) {\n\t\t\t// Firefox can dispatch this event in an infinite loop\n\t\t\t// if dragend handler does something like showing an alert.\n\t\t\t// Only proceed if we have not handled it already.\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleTopDragEnterCapture = (e: DragEvent): void => {\n\t\tthis.dragEnterTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t}\n\n\t\tconst isFirstEnter = this.enterLeaveCounter.enter(e.target)\n\t\tif (!isFirstEnter || this.monitor.isDragging()) {\n\t\t\treturn\n\t\t}\n\n\t\tconst { dataTransfer } = e\n\t\tconst nativeType = matchNativeItemType(dataTransfer)\n\n\t\tif (nativeType) {\n\t\t\t// A native item (such as file or URL) dragged from outside the document\n\t\t\tthis.beginDragNativeItem(nativeType, dataTransfer as DataTransfer)\n\t\t}\n\t}\n\n\tpublic handleDragEnter(_e: DragEvent, targetId: string): void {\n\t\tthis.dragEnterTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDragEnter = (e: DragEvent): void => {\n\t\tconst { dragEnterTargetIds } = this\n\t\tthis.dragEnterTargetIds = []\n\n\t\tif (!this.monitor.isDragging()) {\n\t\t\t// This is probably a native item type we don't understand.\n\t\t\treturn\n\t\t}\n\n\t\tthis.altKeyPressed = e.altKey\n\n\t\t// If the target changes position as the result of `dragenter`, `dragover` might still\n\t\t// get dispatched despite target being no longer there. The easy solution is to check\n\t\t// whether there actually is a target before firing `hover`.\n\t\tif (dragEnterTargetIds.length > 0) {\n\t\t\tthis.actions.hover(dragEnterTargetIds, {\n\t\t\t\tclientOffset: getEventClientOffset(e),\n\t\t\t})\n\t\t}\n\n\t\tconst canDrop = dragEnterTargetIds.some((targetId) =>\n\t\t\tthis.monitor.canDropOnTarget(targetId),\n\t\t)\n\n\t\tif (canDrop) {\n\t\t\t// IE requires this to fire dragover events\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = this.getCurrentDropEffect()\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleTopDragOverCapture = (e: DragEvent): void => {\n\t\tthis.dragOverTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t}\n\t}\n\n\tpublic handleDragOver(_e: DragEvent, targetId: string): void {\n\t\tif (this.dragOverTargetIds === null) {\n\t\t\tthis.dragOverTargetIds = []\n\t\t}\n\t\tthis.dragOverTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDragOver = (e: DragEvent): void => {\n\t\tconst { dragOverTargetIds } = this\n\t\tthis.dragOverTargetIds = []\n\n\t\tif (!this.monitor.isDragging()) {\n\t\t\t// This is probably a native item type we don't understand.\n\t\t\t// Prevent default \"drop and blow away the whole document\" action.\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = 'none'\n\t\t\t}\n\t\t\treturn\n\t\t}\n\n\t\tthis.altKeyPressed = e.altKey\n\t\tthis.lastClientOffset = getEventClientOffset(e)\n\n\t\tthis.scheduleHover(dragOverTargetIds)\n\n\t\tconst canDrop = (dragOverTargetIds || []).some((targetId) =>\n\t\t\tthis.monitor.canDropOnTarget(targetId),\n\t\t)\n\n\t\tif (canDrop) {\n\t\t\t// Show user-specified drop effect.\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = this.getCurrentDropEffect()\n\t\t\t}\n\t\t} else if (this.isDraggingNativeItem()) {\n\t\t\t// Don't show a nice cursor but still prevent default\n\t\t\t// \"drop and blow away the whole document\" action.\n\t\t\te.preventDefault()\n\t\t} else {\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = 'none'\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleTopDragLeaveCapture = (e: DragEvent): void => {\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\te.preventDefault()\n\t\t}\n\n\t\tconst isLastLeave = this.enterLeaveCounter.leave(e.target)\n\t\tif (!isLastLeave) {\n\t\t\treturn\n\t\t}\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tsetTimeout(() => this.endDragNativeItem(), 0)\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleTopDropCapture = (e: DragEvent): void => {\n\t\tthis.dropTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\te.preventDefault()\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t} else if (matchNativeItemType(e.dataTransfer)) {\n\t\t\t// Dragging some elements, like <a> and <img> may still behave like a native drag event,\n\t\t\t// even if the current drag event matches a user-defined type.\n\t\t\t// Stop the default behavior when we're not expecting a native item to be dropped.\n\n\t\t\te.preventDefault()\n\t\t}\n\n\t\tthis.enterLeaveCounter.reset()\n\t}\n\n\tpublic handleDrop(_e: DragEvent, targetId: string): void {\n\t\tthis.dropTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDrop = (e: DragEvent): void => {\n\t\tconst { dropTargetIds } = this\n\t\tthis.dropTargetIds = []\n\n\t\tthis.actions.hover(dropTargetIds, {\n\t\t\tclientOffset: getEventClientOffset(e),\n\t\t})\n\t\tthis.actions.drop({ dropEffect: this.getCurrentDropEffect() })\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.endDragNativeItem()\n\t\t} else if (this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleSelectStart = (e: DragEvent): void => {\n\t\tconst target = e.target as HTMLElement & { dragDrop: () => void }\n\n\t\t// Only IE requires us to explicitly say\n\t\t// we want drag drop operation to start\n\t\tif (typeof target.dragDrop !== 'function') {\n\t\t\treturn\n\t\t}\n\n\t\t// Inputs and textareas should be selectable\n\t\tif (\n\t\t\ttarget.tagName === 'INPUT' ||\n\t\t\ttarget.tagName === 'SELECT' ||\n\t\t\ttarget.tagName === 'TEXTAREA' ||\n\t\t\ttarget.isContentEditable\n\t\t) {\n\t\t\treturn\n\t\t}\n\n\t\t// For other targets, ask IE\n\t\t// to enable drag and drop\n\t\te.preventDefault()\n\t\ttarget.dragDrop()\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}