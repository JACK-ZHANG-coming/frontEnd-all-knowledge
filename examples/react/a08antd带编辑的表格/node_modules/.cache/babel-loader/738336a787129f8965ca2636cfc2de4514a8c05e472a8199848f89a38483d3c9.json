{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule editOnCompositionStart\n * @format\n * \n */\n\n'use strict';\n\nvar EditorState = require('./EditorState');\n\n/**\n * The user has begun using an IME input system. Switching to `composite` mode\n * allows handling composition input and disables other edit behavior.\n */\nfunction editOnCompositionStart(editor, e) {\n  editor.setMode('composite');\n  editor.update(EditorState.set(editor._latestEditorState, {\n    inCompositionMode: true\n  }));\n  // Allow composition handler to interpret the compositionstart event\n  editor._onCompositionStart(e);\n}\nmodule.exports = editOnCompositionStart;","map":{"version":3,"names":["EditorState","require","editOnCompositionStart","editor","e","setMode","update","set","_latestEditorState","inCompositionMode","_onCompositionStart","module","exports"],"sources":["/Users/zhangqiang/Documents/GitHub/frontEnd-all-knowledge/examples/react/a08antd带编辑的表格/node_modules/rc-editor-core/node_modules/draft-js/lib/editOnCompositionStart.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule editOnCompositionStart\n * @format\n * \n */\n\n'use strict';\n\nvar EditorState = require('./EditorState');\n\n/**\n * The user has begun using an IME input system. Switching to `composite` mode\n * allows handling composition input and disables other edit behavior.\n */\nfunction editOnCompositionStart(editor, e) {\n  editor.setMode('composite');\n  editor.update(EditorState.set(editor._latestEditorState, { inCompositionMode: true }));\n  // Allow composition handler to interpret the compositionstart event\n  editor._onCompositionStart(e);\n}\n\nmodule.exports = editOnCompositionStart;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,WAAW,GAAGC,OAAO,CAAC,eAAe,CAAC;;AAE1C;AACA;AACA;AACA;AACA,SAASC,sBAAsBA,CAACC,MAAM,EAAEC,CAAC,EAAE;EACzCD,MAAM,CAACE,OAAO,CAAC,WAAW,CAAC;EAC3BF,MAAM,CAACG,MAAM,CAACN,WAAW,CAACO,GAAG,CAACJ,MAAM,CAACK,kBAAkB,EAAE;IAAEC,iBAAiB,EAAE;EAAK,CAAC,CAAC,CAAC;EACtF;EACAN,MAAM,CAACO,mBAAmB,CAACN,CAAC,CAAC;AAC/B;AAEAO,MAAM,CAACC,OAAO,GAAGV,sBAAsB"},"metadata":{},"sourceType":"script","externalDependencies":[]}