{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DraftEntitySegments\n * @format\n * \n */\n\n'use strict';\n\n/**\n * Identify the range to delete from a segmented entity.\n *\n * Rules:\n *\n *  Example: 'John F. Kennedy'\n *\n *   - Deletion from within any non-whitespace (i.e. ['John', 'F.', 'Kennedy'])\n *     will return the range of that text.\n *\n *       'John F. Kennedy' -> 'John F.'\n *                  ^\n *\n *   - Forward deletion of whitespace will remove the following section:\n *\n *       'John F. Kennedy' -> 'John Kennedy'\n *            ^\n *\n *   - Backward deletion of whitespace will remove the previous section:\n *\n *       'John F. Kennedy' -> 'F. Kennedy'\n *            ^\n */\nvar DraftEntitySegments = {\n  getRemovalRange: function getRemovalRange(selectionStart, selectionEnd, text, entityStart, direction) {\n    var segments = text.split(' ');\n    segments = segments.map(function ( /*string*/segment, /*number*/ii) {\n      if (direction === 'forward') {\n        if (ii > 0) {\n          return ' ' + segment;\n        }\n      } else if (ii < segments.length - 1) {\n        return segment + ' ';\n      }\n      return segment;\n    });\n    var segmentStart = entityStart;\n    var segmentEnd;\n    var segment;\n    var removalStart = null;\n    var removalEnd = null;\n    for (var jj = 0; jj < segments.length; jj++) {\n      segment = segments[jj];\n      segmentEnd = segmentStart + segment.length;\n\n      // Our selection overlaps this segment.\n      if (selectionStart < segmentEnd && segmentStart < selectionEnd) {\n        if (removalStart !== null) {\n          removalEnd = segmentEnd;\n        } else {\n          removalStart = segmentStart;\n          removalEnd = segmentEnd;\n        }\n      } else if (removalStart !== null) {\n        break;\n      }\n      segmentStart = segmentEnd;\n    }\n    var entityEnd = entityStart + text.length;\n    var atStart = removalStart === entityStart;\n    var atEnd = removalEnd === entityEnd;\n    if (!atStart && atEnd || atStart && !atEnd) {\n      if (direction === 'forward') {\n        if (removalEnd !== entityEnd) {\n          removalEnd++;\n        }\n      } else if (removalStart !== entityStart) {\n        removalStart--;\n      }\n    }\n    return {\n      start: removalStart,\n      end: removalEnd\n    };\n  }\n};\nmodule.exports = DraftEntitySegments;","map":{"version":3,"names":["DraftEntitySegments","getRemovalRange","selectionStart","selectionEnd","text","entityStart","direction","segments","split","map","segment","ii","length","segmentStart","segmentEnd","removalStart","removalEnd","jj","entityEnd","atStart","atEnd","start","end","module","exports"],"sources":["/Users/zhangqiang/Documents/GitHub/frontEnd-all-knowledge/examples/react/a08antd带编辑的表格/node_modules/rc-editor-core/node_modules/draft-js/lib/DraftEntitySegments.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DraftEntitySegments\n * @format\n * \n */\n\n'use strict';\n\n/**\n * Identify the range to delete from a segmented entity.\n *\n * Rules:\n *\n *  Example: 'John F. Kennedy'\n *\n *   - Deletion from within any non-whitespace (i.e. ['John', 'F.', 'Kennedy'])\n *     will return the range of that text.\n *\n *       'John F. Kennedy' -> 'John F.'\n *                  ^\n *\n *   - Forward deletion of whitespace will remove the following section:\n *\n *       'John F. Kennedy' -> 'John Kennedy'\n *            ^\n *\n *   - Backward deletion of whitespace will remove the previous section:\n *\n *       'John F. Kennedy' -> 'F. Kennedy'\n *            ^\n */\nvar DraftEntitySegments = {\n  getRemovalRange: function getRemovalRange(selectionStart, selectionEnd, text, entityStart, direction) {\n    var segments = text.split(' ');\n    segments = segments.map(function ( /*string*/segment, /*number*/ii) {\n      if (direction === 'forward') {\n        if (ii > 0) {\n          return ' ' + segment;\n        }\n      } else if (ii < segments.length - 1) {\n        return segment + ' ';\n      }\n      return segment;\n    });\n\n    var segmentStart = entityStart;\n    var segmentEnd;\n    var segment;\n    var removalStart = null;\n    var removalEnd = null;\n\n    for (var jj = 0; jj < segments.length; jj++) {\n      segment = segments[jj];\n      segmentEnd = segmentStart + segment.length;\n\n      // Our selection overlaps this segment.\n      if (selectionStart < segmentEnd && segmentStart < selectionEnd) {\n        if (removalStart !== null) {\n          removalEnd = segmentEnd;\n        } else {\n          removalStart = segmentStart;\n          removalEnd = segmentEnd;\n        }\n      } else if (removalStart !== null) {\n        break;\n      }\n\n      segmentStart = segmentEnd;\n    }\n\n    var entityEnd = entityStart + text.length;\n    var atStart = removalStart === entityStart;\n    var atEnd = removalEnd === entityEnd;\n\n    if (!atStart && atEnd || atStart && !atEnd) {\n      if (direction === 'forward') {\n        if (removalEnd !== entityEnd) {\n          removalEnd++;\n        }\n      } else if (removalStart !== entityStart) {\n        removalStart--;\n      }\n    }\n\n    return {\n      start: removalStart,\n      end: removalEnd\n    };\n  }\n};\n\nmodule.exports = DraftEntitySegments;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,mBAAmB,GAAG;EACxBC,eAAe,EAAE,SAASA,eAAeA,CAACC,cAAc,EAAEC,YAAY,EAAEC,IAAI,EAAEC,WAAW,EAAEC,SAAS,EAAE;IACpG,IAAIC,QAAQ,GAAGH,IAAI,CAACI,KAAK,CAAC,GAAG,CAAC;IAC9BD,QAAQ,GAAGA,QAAQ,CAACE,GAAG,CAAC,WAAW,UAAUC,OAAO,EAAE,UAAUC,EAAE,EAAE;MAClE,IAAIL,SAAS,KAAK,SAAS,EAAE;QAC3B,IAAIK,EAAE,GAAG,CAAC,EAAE;UACV,OAAO,GAAG,GAAGD,OAAO;QACtB;MACF,CAAC,MAAM,IAAIC,EAAE,GAAGJ,QAAQ,CAACK,MAAM,GAAG,CAAC,EAAE;QACnC,OAAOF,OAAO,GAAG,GAAG;MACtB;MACA,OAAOA,OAAO;IAChB,CAAC,CAAC;IAEF,IAAIG,YAAY,GAAGR,WAAW;IAC9B,IAAIS,UAAU;IACd,IAAIJ,OAAO;IACX,IAAIK,YAAY,GAAG,IAAI;IACvB,IAAIC,UAAU,GAAG,IAAI;IAErB,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGV,QAAQ,CAACK,MAAM,EAAEK,EAAE,EAAE,EAAE;MAC3CP,OAAO,GAAGH,QAAQ,CAACU,EAAE,CAAC;MACtBH,UAAU,GAAGD,YAAY,GAAGH,OAAO,CAACE,MAAM;;MAE1C;MACA,IAAIV,cAAc,GAAGY,UAAU,IAAID,YAAY,GAAGV,YAAY,EAAE;QAC9D,IAAIY,YAAY,KAAK,IAAI,EAAE;UACzBC,UAAU,GAAGF,UAAU;QACzB,CAAC,MAAM;UACLC,YAAY,GAAGF,YAAY;UAC3BG,UAAU,GAAGF,UAAU;QACzB;MACF,CAAC,MAAM,IAAIC,YAAY,KAAK,IAAI,EAAE;QAChC;MACF;MAEAF,YAAY,GAAGC,UAAU;IAC3B;IAEA,IAAII,SAAS,GAAGb,WAAW,GAAGD,IAAI,CAACQ,MAAM;IACzC,IAAIO,OAAO,GAAGJ,YAAY,KAAKV,WAAW;IAC1C,IAAIe,KAAK,GAAGJ,UAAU,KAAKE,SAAS;IAEpC,IAAI,CAACC,OAAO,IAAIC,KAAK,IAAID,OAAO,IAAI,CAACC,KAAK,EAAE;MAC1C,IAAId,SAAS,KAAK,SAAS,EAAE;QAC3B,IAAIU,UAAU,KAAKE,SAAS,EAAE;UAC5BF,UAAU,EAAE;QACd;MACF,CAAC,MAAM,IAAID,YAAY,KAAKV,WAAW,EAAE;QACvCU,YAAY,EAAE;MAChB;IACF;IAEA,OAAO;MACLM,KAAK,EAAEN,YAAY;MACnBO,GAAG,EAAEN;IACP,CAAC;EACH;AACF,CAAC;AAEDO,MAAM,CAACC,OAAO,GAAGxB,mBAAmB"},"metadata":{},"sourceType":"script","externalDependencies":[]}