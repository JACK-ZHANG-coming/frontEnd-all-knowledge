{"ast":null,"code":"/**\n * Module dependencies.\n */\n\ntry {\n  var index = require('indexof');\n} catch (err) {\n  var index = require('component-indexof');\n}\n\n/**\n * Whitespace regexp.\n */\n\nvar re = /\\s+/;\n\n/**\n * toString reference.\n */\n\nvar toString = Object.prototype.toString;\n\n/**\n * Wrap `el` in a `ClassList`.\n *\n * @param {Element} el\n * @return {ClassList}\n * @api public\n */\n\nmodule.exports = function (el) {\n  return new ClassList(el);\n};\n\n/**\n * Initialize a new ClassList for `el`.\n *\n * @param {Element} el\n * @api private\n */\n\nfunction ClassList(el) {\n  if (!el || !el.nodeType) {\n    throw new Error('A DOM element reference is required');\n  }\n  this.el = el;\n  this.list = el.classList;\n}\n\n/**\n * Add class `name` if not already present.\n *\n * @param {String} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.add = function (name) {\n  // classList\n  if (this.list) {\n    this.list.add(name);\n    return this;\n  }\n\n  // fallback\n  var arr = this.array();\n  var i = index(arr, name);\n  if (!~i) arr.push(name);\n  this.el.className = arr.join(' ');\n  return this;\n};\n\n/**\n * Remove class `name` when present, or\n * pass a regular expression to remove\n * any which match.\n *\n * @param {String|RegExp} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.remove = function (name) {\n  if ('[object RegExp]' == toString.call(name)) {\n    return this.removeMatching(name);\n  }\n\n  // classList\n  if (this.list) {\n    this.list.remove(name);\n    return this;\n  }\n\n  // fallback\n  var arr = this.array();\n  var i = index(arr, name);\n  if (~i) arr.splice(i, 1);\n  this.el.className = arr.join(' ');\n  return this;\n};\n\n/**\n * Remove all classes matching `re`.\n *\n * @param {RegExp} re\n * @return {ClassList}\n * @api private\n */\n\nClassList.prototype.removeMatching = function (re) {\n  var arr = this.array();\n  for (var i = 0; i < arr.length; i++) {\n    if (re.test(arr[i])) {\n      this.remove(arr[i]);\n    }\n  }\n  return this;\n};\n\n/**\n * Toggle class `name`, can force state via `force`.\n *\n * For browsers that support classList, but do not support `force` yet,\n * the mistake will be detected and corrected.\n *\n * @param {String} name\n * @param {Boolean} force\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.toggle = function (name, force) {\n  // classList\n  if (this.list) {\n    if (\"undefined\" !== typeof force) {\n      if (force !== this.list.toggle(name, force)) {\n        this.list.toggle(name); // toggle again to correct\n      }\n    } else {\n      this.list.toggle(name);\n    }\n    return this;\n  }\n\n  // fallback\n  if (\"undefined\" !== typeof force) {\n    if (!force) {\n      this.remove(name);\n    } else {\n      this.add(name);\n    }\n  } else {\n    if (this.has(name)) {\n      this.remove(name);\n    } else {\n      this.add(name);\n    }\n  }\n  return this;\n};\n\n/**\n * Return an array of classes.\n *\n * @return {Array}\n * @api public\n */\n\nClassList.prototype.array = function () {\n  var className = this.el.getAttribute('class') || '';\n  var str = className.replace(/^\\s+|\\s+$/g, '');\n  var arr = str.split(re);\n  if ('' === arr[0]) arr.shift();\n  return arr;\n};\n\n/**\n * Check if class `name` is present.\n *\n * @param {String} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.has = ClassList.prototype.contains = function (name) {\n  return this.list ? this.list.contains(name) : !!~index(this.array(), name);\n};","map":{"version":3,"names":["index","require","err","re","toString","Object","prototype","module","exports","el","ClassList","nodeType","Error","list","classList","add","name","arr","array","i","push","className","join","remove","call","removeMatching","splice","length","test","toggle","force","has","getAttribute","str","replace","split","shift","contains"],"sources":["/Users/zhangqiang/Documents/GitHub/frontEnd-all-knowledge/examples/react/a08antd带编辑的表格/node_modules/component-classes/index.js"],"sourcesContent":["/**\n * Module dependencies.\n */\n\ntry {\n  var index = require('indexof');\n} catch (err) {\n  var index = require('component-indexof');\n}\n\n/**\n * Whitespace regexp.\n */\n\nvar re = /\\s+/;\n\n/**\n * toString reference.\n */\n\nvar toString = Object.prototype.toString;\n\n/**\n * Wrap `el` in a `ClassList`.\n *\n * @param {Element} el\n * @return {ClassList}\n * @api public\n */\n\nmodule.exports = function(el){\n  return new ClassList(el);\n};\n\n/**\n * Initialize a new ClassList for `el`.\n *\n * @param {Element} el\n * @api private\n */\n\nfunction ClassList(el) {\n  if (!el || !el.nodeType) {\n    throw new Error('A DOM element reference is required');\n  }\n  this.el = el;\n  this.list = el.classList;\n}\n\n/**\n * Add class `name` if not already present.\n *\n * @param {String} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.add = function(name){\n  // classList\n  if (this.list) {\n    this.list.add(name);\n    return this;\n  }\n\n  // fallback\n  var arr = this.array();\n  var i = index(arr, name);\n  if (!~i) arr.push(name);\n  this.el.className = arr.join(' ');\n  return this;\n};\n\n/**\n * Remove class `name` when present, or\n * pass a regular expression to remove\n * any which match.\n *\n * @param {String|RegExp} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.remove = function(name){\n  if ('[object RegExp]' == toString.call(name)) {\n    return this.removeMatching(name);\n  }\n\n  // classList\n  if (this.list) {\n    this.list.remove(name);\n    return this;\n  }\n\n  // fallback\n  var arr = this.array();\n  var i = index(arr, name);\n  if (~i) arr.splice(i, 1);\n  this.el.className = arr.join(' ');\n  return this;\n};\n\n/**\n * Remove all classes matching `re`.\n *\n * @param {RegExp} re\n * @return {ClassList}\n * @api private\n */\n\nClassList.prototype.removeMatching = function(re){\n  var arr = this.array();\n  for (var i = 0; i < arr.length; i++) {\n    if (re.test(arr[i])) {\n      this.remove(arr[i]);\n    }\n  }\n  return this;\n};\n\n/**\n * Toggle class `name`, can force state via `force`.\n *\n * For browsers that support classList, but do not support `force` yet,\n * the mistake will be detected and corrected.\n *\n * @param {String} name\n * @param {Boolean} force\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.toggle = function(name, force){\n  // classList\n  if (this.list) {\n    if (\"undefined\" !== typeof force) {\n      if (force !== this.list.toggle(name, force)) {\n        this.list.toggle(name); // toggle again to correct\n      }\n    } else {\n      this.list.toggle(name);\n    }\n    return this;\n  }\n\n  // fallback\n  if (\"undefined\" !== typeof force) {\n    if (!force) {\n      this.remove(name);\n    } else {\n      this.add(name);\n    }\n  } else {\n    if (this.has(name)) {\n      this.remove(name);\n    } else {\n      this.add(name);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return an array of classes.\n *\n * @return {Array}\n * @api public\n */\n\nClassList.prototype.array = function(){\n  var className = this.el.getAttribute('class') || '';\n  var str = className.replace(/^\\s+|\\s+$/g, '');\n  var arr = str.split(re);\n  if ('' === arr[0]) arr.shift();\n  return arr;\n};\n\n/**\n * Check if class `name` is present.\n *\n * @param {String} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.has =\nClassList.prototype.contains = function(name){\n  return this.list\n    ? this.list.contains(name)\n    : !! ~index(this.array(), name);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}