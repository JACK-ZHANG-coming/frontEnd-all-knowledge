{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule convertFromHTMLToContentBlocks\n * @format\n * \n */\n\n'use strict';\n\nvar _extends = _assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _knownListItemDepthCl,\n  _assign = require('object-assign');\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar CharacterMetadata = require('./CharacterMetadata');\nvar ContentBlock = require('./ContentBlock');\nvar ContentBlockNode = require('./ContentBlockNode');\nvar DefaultDraftBlockRenderMap = require('./DefaultDraftBlockRenderMap');\nvar DraftEntity = require('./DraftEntity');\nvar DraftFeatureFlags = require('./DraftFeatureFlags');\nvar Immutable = require('immutable');\nvar _require = require('immutable'),\n  Set = _require.Set;\nvar URI = require('fbjs/lib/URI');\nvar cx = require('fbjs/lib/cx');\nvar generateRandomKey = require('./generateRandomKey');\nvar getSafeBodyFromHTML = require('./getSafeBodyFromHTML');\nvar invariant = require('fbjs/lib/invariant');\nvar sanitizeDraftText = require('./sanitizeDraftText');\nvar experimentalTreeDataSupport = DraftFeatureFlags.draft_tree_data_support;\nvar List = Immutable.List,\n  OrderedSet = Immutable.OrderedSet;\nvar NBSP = '&nbsp;';\nvar SPACE = ' ';\n\n// Arbitrary max indent\nvar MAX_DEPTH = 4;\n\n// used for replacing characters in HTML\nvar REGEX_CR = new RegExp('\\r', 'g');\nvar REGEX_LF = new RegExp('\\n', 'g');\nvar REGEX_NBSP = new RegExp(NBSP, 'g');\nvar REGEX_CARRIAGE = new RegExp('&#13;?', 'g');\nvar REGEX_ZWS = new RegExp('&#8203;?', 'g');\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight\nvar boldValues = ['bold', 'bolder', '500', '600', '700', '800', '900'];\nvar notBoldValues = ['light', 'lighter', '100', '200', '300', '400'];\n\n// Block tag flow is different because LIs do not have\n// a deterministic style ;_;\nvar inlineTags = {\n  b: 'BOLD',\n  code: 'CODE',\n  del: 'STRIKETHROUGH',\n  em: 'ITALIC',\n  i: 'ITALIC',\n  s: 'STRIKETHROUGH',\n  strike: 'STRIKETHROUGH',\n  strong: 'BOLD',\n  u: 'UNDERLINE'\n};\nvar knownListItemDepthClasses = (_knownListItemDepthCl = {}, _defineProperty(_knownListItemDepthCl, cx('public/DraftStyleDefault/depth0'), 0), _defineProperty(_knownListItemDepthCl, cx('public/DraftStyleDefault/depth1'), 1), _defineProperty(_knownListItemDepthCl, cx('public/DraftStyleDefault/depth2'), 2), _defineProperty(_knownListItemDepthCl, cx('public/DraftStyleDefault/depth3'), 3), _defineProperty(_knownListItemDepthCl, cx('public/DraftStyleDefault/depth4'), 4), _knownListItemDepthCl);\nvar anchorAttr = ['className', 'href', 'rel', 'target', 'title'];\nvar imgAttr = ['alt', 'className', 'height', 'src', 'width'];\nvar lastBlock = void 0;\nvar EMPTY_CHUNK = {\n  text: '',\n  inlines: [],\n  entities: [],\n  blocks: []\n};\nvar EMPTY_BLOCK = {\n  children: List(),\n  depth: 0,\n  key: '',\n  type: ''\n};\nvar getListBlockType = function getListBlockType(tag, lastList) {\n  if (tag === 'li') {\n    return lastList === 'ol' ? 'ordered-list-item' : 'unordered-list-item';\n  }\n  return null;\n};\nvar getBlockMapSupportedTags = function getBlockMapSupportedTags(blockRenderMap) {\n  var unstyledElement = blockRenderMap.get('unstyled').element;\n  var tags = Set([]);\n  blockRenderMap.forEach(function (draftBlock) {\n    if (draftBlock.aliasedElements) {\n      draftBlock.aliasedElements.forEach(function (tag) {\n        tags = tags.add(tag);\n      });\n    }\n    tags = tags.add(draftBlock.element);\n  });\n  return tags.filter(function (tag) {\n    return tag && tag !== unstyledElement;\n  }).toArray().sort();\n};\n\n// custom element conversions\nvar getMultiMatchedType = function getMultiMatchedType(tag, lastList, multiMatchExtractor) {\n  for (var ii = 0; ii < multiMatchExtractor.length; ii++) {\n    var matchType = multiMatchExtractor[ii](tag, lastList);\n    if (matchType) {\n      return matchType;\n    }\n  }\n  return null;\n};\nvar getBlockTypeForTag = function getBlockTypeForTag(tag, lastList, blockRenderMap) {\n  var matchedTypes = blockRenderMap.filter(function (draftBlock) {\n    return draftBlock.element === tag || draftBlock.wrapper === tag || draftBlock.aliasedElements && draftBlock.aliasedElements.some(function (alias) {\n      return alias === tag;\n    });\n  }).keySeq().toSet().toArray().sort();\n\n  // if we dont have any matched type, return unstyled\n  // if we have one matched type return it\n  // if we have multi matched types use the multi-match function to gather type\n  switch (matchedTypes.length) {\n    case 0:\n      return 'unstyled';\n    case 1:\n      return matchedTypes[0];\n    default:\n      return getMultiMatchedType(tag, lastList, [getListBlockType]) || 'unstyled';\n  }\n};\nvar processInlineTag = function processInlineTag(tag, node, currentStyle) {\n  var styleToCheck = inlineTags[tag];\n  if (styleToCheck) {\n    currentStyle = currentStyle.add(styleToCheck).toOrderedSet();\n  } else if (node instanceof HTMLElement) {\n    var htmlElement = node;\n    currentStyle = currentStyle.withMutations(function (style) {\n      var fontWeight = htmlElement.style.fontWeight;\n      var fontStyle = htmlElement.style.fontStyle;\n      var textDecoration = htmlElement.style.textDecoration;\n      if (boldValues.indexOf(fontWeight) >= 0) {\n        style.add('BOLD');\n      } else if (notBoldValues.indexOf(fontWeight) >= 0) {\n        style.remove('BOLD');\n      }\n      if (fontStyle === 'italic') {\n        style.add('ITALIC');\n      } else if (fontStyle === 'normal') {\n        style.remove('ITALIC');\n      }\n      if (textDecoration === 'underline') {\n        style.add('UNDERLINE');\n      }\n      if (textDecoration === 'line-through') {\n        style.add('STRIKETHROUGH');\n      }\n      if (textDecoration === 'none') {\n        style.remove('UNDERLINE');\n        style.remove('STRIKETHROUGH');\n      }\n    }).toOrderedSet();\n  }\n  return currentStyle;\n};\nvar joinChunks = function joinChunks(A, B, experimentalHasNestedBlocks) {\n  // Sometimes two blocks will touch in the DOM and we need to strip the\n  // extra delimiter to preserve niceness.\n  var lastInA = A.text.slice(-1);\n  var firstInB = B.text.slice(0, 1);\n  if (lastInA === '\\r' && firstInB === '\\r' && !experimentalHasNestedBlocks) {\n    A.text = A.text.slice(0, -1);\n    A.inlines.pop();\n    A.entities.pop();\n    A.blocks.pop();\n  }\n\n  // Kill whitespace after blocks\n  if (lastInA === '\\r') {\n    if (B.text === SPACE || B.text === '\\n') {\n      return A;\n    } else if (firstInB === SPACE || firstInB === '\\n') {\n      B.text = B.text.slice(1);\n      B.inlines.shift();\n      B.entities.shift();\n    }\n  }\n  return {\n    text: A.text + B.text,\n    inlines: A.inlines.concat(B.inlines),\n    entities: A.entities.concat(B.entities),\n    blocks: A.blocks.concat(B.blocks)\n  };\n};\n\n/**\n * Check to see if we have anything like <p> <blockquote> <h1>... to create\n * block tags from. If we do, we can use those and ignore <div> tags. If we\n * don't, we can treat <div> tags as meaningful (unstyled) blocks.\n */\nvar containsSemanticBlockMarkup = function containsSemanticBlockMarkup(html, blockTags) {\n  return blockTags.some(function (tag) {\n    return html.indexOf('<' + tag) !== -1;\n  });\n};\nvar hasValidLinkText = function hasValidLinkText(link) {\n  !(link instanceof HTMLAnchorElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Link must be an HTMLAnchorElement.') : invariant(false) : void 0;\n  var protocol = link.protocol;\n  return protocol === 'http:' || protocol === 'https:' || protocol === 'mailto:';\n};\nvar getWhitespaceChunk = function getWhitespaceChunk(inEntity) {\n  var entities = new Array(1);\n  if (inEntity) {\n    entities[0] = inEntity;\n  }\n  return _extends({}, EMPTY_CHUNK, {\n    text: SPACE,\n    inlines: [OrderedSet()],\n    entities: entities\n  });\n};\nvar getSoftNewlineChunk = function getSoftNewlineChunk() {\n  return _extends({}, EMPTY_CHUNK, {\n    text: '\\n',\n    inlines: [OrderedSet()],\n    entities: new Array(1)\n  });\n};\nvar getChunkedBlock = function getChunkedBlock() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return _extends({}, EMPTY_BLOCK, props);\n};\nvar getBlockDividerChunk = function getBlockDividerChunk(block, depth) {\n  var parentKey = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  return {\n    text: '\\r',\n    inlines: [OrderedSet()],\n    entities: new Array(1),\n    blocks: [getChunkedBlock({\n      parent: parentKey,\n      key: generateRandomKey(),\n      type: block,\n      depth: Math.max(0, Math.min(MAX_DEPTH, depth))\n    })]\n  };\n};\n\n/**\n *  If we're pasting from one DraftEditor to another we can check to see if\n *  existing list item depth classes are being used and preserve this style\n */\nvar getListItemDepth = function getListItemDepth(node) {\n  var depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  Object.keys(knownListItemDepthClasses).some(function (depthClass) {\n    if (node.classList.contains(depthClass)) {\n      depth = knownListItemDepthClasses[depthClass];\n    }\n  });\n  return depth;\n};\nvar genFragment = function genFragment(entityMap, node, inlineStyle, lastList, inBlock, blockTags, depth, blockRenderMap, inEntity, parentKey) {\n  var lastLastBlock = lastBlock;\n  var nodeName = node.nodeName.toLowerCase();\n  var newEntityMap = entityMap;\n  var nextBlockType = 'unstyled';\n  var newBlock = false;\n  var inBlockType = inBlock && getBlockTypeForTag(inBlock, lastList, blockRenderMap);\n  var chunk = _extends({}, EMPTY_CHUNK);\n  var newChunk = null;\n  var blockKey = void 0;\n\n  // Base Case\n  if (nodeName === '#text') {\n    var _text = node.textContent;\n    var nodeTextContent = _text.trim();\n\n    // We should not create blocks for leading spaces that are\n    // existing around ol/ul and their children list items\n    if (lastList && nodeTextContent === '' && node.parentElement) {\n      var parentNodeName = node.parentElement.nodeName.toLowerCase();\n      if (parentNodeName === 'ol' || parentNodeName === 'ul') {\n        return {\n          chunk: _extends({}, EMPTY_CHUNK),\n          entityMap: entityMap\n        };\n      }\n    }\n    if (nodeTextContent === '' && inBlock !== 'pre') {\n      return {\n        chunk: getWhitespaceChunk(inEntity),\n        entityMap: entityMap\n      };\n    }\n    if (inBlock !== 'pre') {\n      // Can't use empty string because MSWord\n      _text = _text.replace(REGEX_LF, SPACE);\n    }\n\n    // save the last block so we can use it later\n    lastBlock = nodeName;\n    return {\n      chunk: {\n        text: _text,\n        inlines: Array(_text.length).fill(inlineStyle),\n        entities: Array(_text.length).fill(inEntity),\n        blocks: []\n      },\n      entityMap: entityMap\n    };\n  }\n\n  // save the last block so we can use it later\n  lastBlock = nodeName;\n\n  // BR tags\n  if (nodeName === 'br') {\n    if (lastLastBlock === 'br' && (!inBlock || inBlockType === 'unstyled')) {\n      return {\n        chunk: getBlockDividerChunk('unstyled', depth, parentKey),\n        entityMap: entityMap\n      };\n    }\n    return {\n      chunk: getSoftNewlineChunk(),\n      entityMap: entityMap\n    };\n  }\n\n  // IMG tags\n  if (nodeName === 'img' && node instanceof HTMLImageElement && node.attributes.getNamedItem('src') && node.attributes.getNamedItem('src').value) {\n    var image = node;\n    var entityConfig = {};\n    imgAttr.forEach(function (attr) {\n      var imageAttribute = image.getAttribute(attr);\n      if (imageAttribute) {\n        entityConfig[attr] = imageAttribute;\n      }\n    });\n    // Forcing this node to have children because otherwise no entity will be\n    // created for this node.\n    // The child text node cannot just have a space or return as content -\n    // we strip those out.\n    // See https://github.com/facebook/draft-js/issues/231 for some context.\n    node.textContent = '\\uD83D\\uDCF7';\n\n    // TODO: update this when we remove DraftEntity entirely\n    inEntity = DraftEntity.__create('IMAGE', 'MUTABLE', entityConfig || {});\n  }\n\n  // Inline tags\n  inlineStyle = processInlineTag(nodeName, node, inlineStyle);\n\n  // Handle lists\n  if (nodeName === 'ul' || nodeName === 'ol') {\n    if (lastList) {\n      depth += 1;\n    }\n    lastList = nodeName;\n  }\n  if (!experimentalTreeDataSupport && nodeName === 'li' && node instanceof HTMLElement) {\n    depth = getListItemDepth(node, depth);\n  }\n  var blockType = getBlockTypeForTag(nodeName, lastList, blockRenderMap);\n  var inListBlock = lastList && inBlock === 'li' && nodeName === 'li';\n  var inBlockOrHasNestedBlocks = (!inBlock || experimentalTreeDataSupport) && blockTags.indexOf(nodeName) !== -1;\n\n  // Block Tags\n  if (inListBlock || inBlockOrHasNestedBlocks) {\n    chunk = getBlockDividerChunk(blockType, depth, parentKey);\n    blockKey = chunk.blocks[0].key;\n    inBlock = nodeName;\n    newBlock = !experimentalTreeDataSupport;\n  }\n\n  // this is required so that we can handle 'ul' and 'ol'\n  if (inListBlock) {\n    nextBlockType = lastList === 'ul' ? 'unordered-list-item' : 'ordered-list-item';\n  }\n\n  // Recurse through children\n  var child = node.firstChild;\n  if (child != null) {\n    nodeName = child.nodeName.toLowerCase();\n  }\n  var entityId = null;\n  while (child) {\n    if (child instanceof HTMLAnchorElement && child.href && hasValidLinkText(child)) {\n      (function () {\n        var anchor = child;\n        var entityConfig = {};\n        anchorAttr.forEach(function (attr) {\n          var anchorAttribute = anchor.getAttribute(attr);\n          if (anchorAttribute) {\n            entityConfig[attr] = anchorAttribute;\n          }\n        });\n        entityConfig.url = new URI(anchor.href).toString();\n        // TODO: update this when we remove DraftEntity completely\n        entityId = DraftEntity.__create('LINK', 'MUTABLE', entityConfig || {});\n      })();\n    } else {\n      entityId = undefined;\n    }\n    var _genFragment = genFragment(newEntityMap, child, inlineStyle, lastList, inBlock, blockTags, depth, blockRenderMap, entityId || inEntity, experimentalTreeDataSupport ? blockKey : null),\n      generatedChunk = _genFragment.chunk,\n      maybeUpdatedEntityMap = _genFragment.entityMap;\n    newChunk = generatedChunk;\n    newEntityMap = maybeUpdatedEntityMap;\n    chunk = joinChunks(chunk, newChunk, experimentalTreeDataSupport);\n    var sibling = child.nextSibling;\n\n    // Put in a newline to break up blocks inside blocks\n    if (!parentKey && sibling && blockTags.indexOf(nodeName) >= 0 && inBlock) {\n      chunk = joinChunks(chunk, getSoftNewlineChunk());\n    }\n    if (sibling) {\n      nodeName = sibling.nodeName.toLowerCase();\n    }\n    child = sibling;\n  }\n  if (newBlock) {\n    chunk = joinChunks(chunk, getBlockDividerChunk(nextBlockType, depth, parentKey));\n  }\n  return {\n    chunk: chunk,\n    entityMap: newEntityMap\n  };\n};\nvar getChunkForHTML = function getChunkForHTML(html, DOMBuilder, blockRenderMap, entityMap) {\n  html = html.trim().replace(REGEX_CR, '').replace(REGEX_NBSP, SPACE).replace(REGEX_CARRIAGE, '').replace(REGEX_ZWS, '');\n  var supportedBlockTags = getBlockMapSupportedTags(blockRenderMap);\n  var safeBody = DOMBuilder(html);\n  if (!safeBody) {\n    return null;\n  }\n  lastBlock = null;\n\n  // Sometimes we aren't dealing with content that contains nice semantic\n  // tags. In this case, use divs to separate everything out into paragraphs\n  // and hope for the best.\n  var workingBlocks = containsSemanticBlockMarkup(html, supportedBlockTags) ? supportedBlockTags : ['div'];\n\n  // Start with -1 block depth to offset the fact that we are passing in a fake\n  // UL block to start with.\n  var fragment = genFragment(entityMap, safeBody, OrderedSet(), 'ul', null, workingBlocks, -1, blockRenderMap);\n  var chunk = fragment.chunk;\n  var newEntityMap = fragment.entityMap;\n\n  // join with previous block to prevent weirdness on paste\n  if (chunk.text.indexOf('\\r') === 0) {\n    chunk = {\n      text: chunk.text.slice(1),\n      inlines: chunk.inlines.slice(1),\n      entities: chunk.entities.slice(1),\n      blocks: chunk.blocks\n    };\n  }\n\n  // Kill block delimiter at the end\n  if (chunk.text.slice(-1) === '\\r') {\n    chunk.text = chunk.text.slice(0, -1);\n    chunk.inlines = chunk.inlines.slice(0, -1);\n    chunk.entities = chunk.entities.slice(0, -1);\n    chunk.blocks.pop();\n  }\n\n  // If we saw no block tags, put an unstyled one in\n  if (chunk.blocks.length === 0) {\n    chunk.blocks.push(_extends({}, EMPTY_CHUNK, {\n      type: 'unstyled',\n      depth: 0\n    }));\n  }\n\n  // Sometimes we start with text that isn't in a block, which is then\n  // followed by blocks. Need to fix up the blocks to add in\n  // an unstyled block for this content\n  if (chunk.text.split('\\r').length === chunk.blocks.length + 1) {\n    chunk.blocks.unshift({\n      type: 'unstyled',\n      depth: 0\n    });\n  }\n  return {\n    chunk: chunk,\n    entityMap: newEntityMap\n  };\n};\nvar convertChunkToContentBlocks = function convertChunkToContentBlocks(chunk) {\n  if (!chunk || !chunk.text || !Array.isArray(chunk.blocks)) {\n    return null;\n  }\n  var initialState = {\n    cacheRef: {},\n    contentBlocks: []\n  };\n  var start = 0;\n  var rawBlocks = chunk.blocks,\n    rawInlines = chunk.inlines,\n    rawEntities = chunk.entities;\n  var BlockNodeRecord = experimentalTreeDataSupport ? ContentBlockNode : ContentBlock;\n  return chunk.text.split('\\r').reduce(function (acc, textBlock, index) {\n    // Make absolutely certain that our text is acceptable.\n    textBlock = sanitizeDraftText(textBlock);\n    var block = rawBlocks[index];\n    var end = start + textBlock.length;\n    var inlines = rawInlines.slice(start, end);\n    var entities = rawEntities.slice(start, end);\n    var characterList = List(inlines.map(function (style, index) {\n      var data = {\n        style: style,\n        entity: null\n      };\n      if (entities[index]) {\n        data.entity = entities[index];\n      }\n      return CharacterMetadata.create(data);\n    }));\n    start = end + 1;\n    var depth = block.depth,\n      type = block.type,\n      parent = block.parent;\n    var key = block.key || generateRandomKey();\n    var parentTextNodeKey = null; // will be used to store container text nodes\n\n    // childrens add themselves to their parents since we are iterating in order\n    if (parent) {\n      var parentIndex = acc.cacheRef[parent];\n      var parentRecord = acc.contentBlocks[parentIndex];\n\n      // if parent has text we need to split it into a separate unstyled element\n      if (parentRecord.getChildKeys().isEmpty() && parentRecord.getText()) {\n        var parentCharacterList = parentRecord.getCharacterList();\n        var parentText = parentRecord.getText();\n        parentTextNodeKey = generateRandomKey();\n        var textNode = new ContentBlockNode({\n          key: parentTextNodeKey,\n          text: parentText,\n          characterList: parentCharacterList,\n          parent: parent,\n          nextSibling: key\n        });\n        acc.contentBlocks.push(textNode);\n        parentRecord = parentRecord.withMutations(function (block) {\n          block.set('characterList', List()).set('text', '').set('children', parentRecord.children.push(textNode.getKey()));\n        });\n      }\n      acc.contentBlocks[parentIndex] = parentRecord.set('children', parentRecord.children.push(key));\n    }\n    var blockNode = new BlockNodeRecord({\n      key: key,\n      parent: parent,\n      type: type,\n      depth: depth,\n      text: textBlock,\n      characterList: characterList,\n      prevSibling: parentTextNodeKey || (index === 0 || rawBlocks[index - 1].parent !== parent ? null : rawBlocks[index - 1].key),\n      nextSibling: index === rawBlocks.length - 1 || rawBlocks[index + 1].parent !== parent ? null : rawBlocks[index + 1].key\n    });\n\n    // insert node\n    acc.contentBlocks.push(blockNode);\n\n    // cache ref for building links\n    acc.cacheRef[blockNode.key] = index;\n    return acc;\n  }, initialState).contentBlocks;\n};\nvar convertFromHTMLtoContentBlocks = function convertFromHTMLtoContentBlocks(html) {\n  var DOMBuilder = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getSafeBodyFromHTML;\n  var blockRenderMap = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DefaultDraftBlockRenderMap;\n\n  // Be ABSOLUTELY SURE that the dom builder you pass here won't execute\n  // arbitrary code in whatever environment you're running this in. For an\n  // example of how we try to do this in-browser, see getSafeBodyFromHTML.\n\n  // TODO: replace DraftEntity with an OrderedMap here\n  var chunkData = getChunkForHTML(html, DOMBuilder, blockRenderMap, DraftEntity);\n  if (chunkData == null) {\n    return null;\n  }\n  var chunk = chunkData.chunk,\n    entityMap = chunkData.entityMap;\n  var contentBlocks = convertChunkToContentBlocks(chunk);\n  return {\n    contentBlocks: contentBlocks,\n    entityMap: entityMap\n  };\n};\nmodule.exports = convertFromHTMLtoContentBlocks;","map":{"version":3,"names":["_extends","_assign","target","i","arguments","length","source","key","Object","prototype","hasOwnProperty","call","_knownListItemDepthCl","require","_defineProperty","obj","value","defineProperty","enumerable","configurable","writable","CharacterMetadata","ContentBlock","ContentBlockNode","DefaultDraftBlockRenderMap","DraftEntity","DraftFeatureFlags","Immutable","_require","Set","URI","cx","generateRandomKey","getSafeBodyFromHTML","invariant","sanitizeDraftText","experimentalTreeDataSupport","draft_tree_data_support","List","OrderedSet","NBSP","SPACE","MAX_DEPTH","REGEX_CR","RegExp","REGEX_LF","REGEX_NBSP","REGEX_CARRIAGE","REGEX_ZWS","boldValues","notBoldValues","inlineTags","b","code","del","em","s","strike","strong","u","knownListItemDepthClasses","anchorAttr","imgAttr","lastBlock","EMPTY_CHUNK","text","inlines","entities","blocks","EMPTY_BLOCK","children","depth","type","getListBlockType","tag","lastList","getBlockMapSupportedTags","blockRenderMap","unstyledElement","get","element","tags","forEach","draftBlock","aliasedElements","add","filter","toArray","sort","getMultiMatchedType","multiMatchExtractor","ii","matchType","getBlockTypeForTag","matchedTypes","wrapper","some","alias","keySeq","toSet","processInlineTag","node","currentStyle","styleToCheck","toOrderedSet","HTMLElement","htmlElement","withMutations","style","fontWeight","fontStyle","textDecoration","indexOf","remove","joinChunks","A","B","experimentalHasNestedBlocks","lastInA","slice","firstInB","pop","shift","concat","containsSemanticBlockMarkup","html","blockTags","hasValidLinkText","link","HTMLAnchorElement","process","env","NODE_ENV","protocol","getWhitespaceChunk","inEntity","Array","getSoftNewlineChunk","getChunkedBlock","props","undefined","getBlockDividerChunk","block","parentKey","parent","Math","max","min","getListItemDepth","keys","depthClass","classList","contains","genFragment","entityMap","inlineStyle","inBlock","lastLastBlock","nodeName","toLowerCase","newEntityMap","nextBlockType","newBlock","inBlockType","chunk","newChunk","blockKey","_text","textContent","nodeTextContent","trim","parentElement","parentNodeName","replace","fill","HTMLImageElement","attributes","getNamedItem","image","entityConfig","attr","imageAttribute","getAttribute","__create","blockType","inListBlock","inBlockOrHasNestedBlocks","child","firstChild","entityId","href","anchor","anchorAttribute","url","toString","_genFragment","generatedChunk","maybeUpdatedEntityMap","sibling","nextSibling","getChunkForHTML","DOMBuilder","supportedBlockTags","safeBody","workingBlocks","fragment","push","split","unshift","convertChunkToContentBlocks","isArray","initialState","cacheRef","contentBlocks","start","rawBlocks","rawInlines","rawEntities","BlockNodeRecord","reduce","acc","textBlock","index","end","characterList","map","data","entity","create","parentTextNodeKey","parentIndex","parentRecord","getChildKeys","isEmpty","getText","parentCharacterList","getCharacterList","parentText","textNode","set","getKey","blockNode","prevSibling","convertFromHTMLtoContentBlocks","chunkData","module","exports"],"sources":["/Users/zhangqiang/Documents/GitHub/frontEnd-all-knowledge/examples/react/a08antd带编辑的表格/node_modules/rc-editor-core/node_modules/draft-js/lib/convertFromHTMLToContentBlocks.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule convertFromHTMLToContentBlocks\n * @format\n * \n */\n\n'use strict';\n\nvar _extends = _assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _knownListItemDepthCl,\n    _assign = require('object-assign');\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar CharacterMetadata = require('./CharacterMetadata');\nvar ContentBlock = require('./ContentBlock');\nvar ContentBlockNode = require('./ContentBlockNode');\nvar DefaultDraftBlockRenderMap = require('./DefaultDraftBlockRenderMap');\nvar DraftEntity = require('./DraftEntity');\nvar DraftFeatureFlags = require('./DraftFeatureFlags');\nvar Immutable = require('immutable');\n\nvar _require = require('immutable'),\n    Set = _require.Set;\n\nvar URI = require('fbjs/lib/URI');\n\nvar cx = require('fbjs/lib/cx');\nvar generateRandomKey = require('./generateRandomKey');\nvar getSafeBodyFromHTML = require('./getSafeBodyFromHTML');\nvar invariant = require('fbjs/lib/invariant');\nvar sanitizeDraftText = require('./sanitizeDraftText');\n\nvar experimentalTreeDataSupport = DraftFeatureFlags.draft_tree_data_support;\n\nvar List = Immutable.List,\n    OrderedSet = Immutable.OrderedSet;\n\n\nvar NBSP = '&nbsp;';\nvar SPACE = ' ';\n\n// Arbitrary max indent\nvar MAX_DEPTH = 4;\n\n// used for replacing characters in HTML\nvar REGEX_CR = new RegExp('\\r', 'g');\nvar REGEX_LF = new RegExp('\\n', 'g');\nvar REGEX_NBSP = new RegExp(NBSP, 'g');\nvar REGEX_CARRIAGE = new RegExp('&#13;?', 'g');\nvar REGEX_ZWS = new RegExp('&#8203;?', 'g');\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight\nvar boldValues = ['bold', 'bolder', '500', '600', '700', '800', '900'];\nvar notBoldValues = ['light', 'lighter', '100', '200', '300', '400'];\n\n// Block tag flow is different because LIs do not have\n// a deterministic style ;_;\nvar inlineTags = {\n  b: 'BOLD',\n  code: 'CODE',\n  del: 'STRIKETHROUGH',\n  em: 'ITALIC',\n  i: 'ITALIC',\n  s: 'STRIKETHROUGH',\n  strike: 'STRIKETHROUGH',\n  strong: 'BOLD',\n  u: 'UNDERLINE'\n};\n\nvar knownListItemDepthClasses = (_knownListItemDepthCl = {}, _defineProperty(_knownListItemDepthCl, cx('public/DraftStyleDefault/depth0'), 0), _defineProperty(_knownListItemDepthCl, cx('public/DraftStyleDefault/depth1'), 1), _defineProperty(_knownListItemDepthCl, cx('public/DraftStyleDefault/depth2'), 2), _defineProperty(_knownListItemDepthCl, cx('public/DraftStyleDefault/depth3'), 3), _defineProperty(_knownListItemDepthCl, cx('public/DraftStyleDefault/depth4'), 4), _knownListItemDepthCl);\n\nvar anchorAttr = ['className', 'href', 'rel', 'target', 'title'];\n\nvar imgAttr = ['alt', 'className', 'height', 'src', 'width'];\n\nvar lastBlock = void 0;\n\nvar EMPTY_CHUNK = {\n  text: '',\n  inlines: [],\n  entities: [],\n  blocks: []\n};\n\nvar EMPTY_BLOCK = {\n  children: List(),\n  depth: 0,\n  key: '',\n  type: ''\n};\n\nvar getListBlockType = function getListBlockType(tag, lastList) {\n  if (tag === 'li') {\n    return lastList === 'ol' ? 'ordered-list-item' : 'unordered-list-item';\n  }\n  return null;\n};\n\nvar getBlockMapSupportedTags = function getBlockMapSupportedTags(blockRenderMap) {\n  var unstyledElement = blockRenderMap.get('unstyled').element;\n  var tags = Set([]);\n\n  blockRenderMap.forEach(function (draftBlock) {\n    if (draftBlock.aliasedElements) {\n      draftBlock.aliasedElements.forEach(function (tag) {\n        tags = tags.add(tag);\n      });\n    }\n\n    tags = tags.add(draftBlock.element);\n  });\n\n  return tags.filter(function (tag) {\n    return tag && tag !== unstyledElement;\n  }).toArray().sort();\n};\n\n// custom element conversions\nvar getMultiMatchedType = function getMultiMatchedType(tag, lastList, multiMatchExtractor) {\n  for (var ii = 0; ii < multiMatchExtractor.length; ii++) {\n    var matchType = multiMatchExtractor[ii](tag, lastList);\n    if (matchType) {\n      return matchType;\n    }\n  }\n  return null;\n};\n\nvar getBlockTypeForTag = function getBlockTypeForTag(tag, lastList, blockRenderMap) {\n  var matchedTypes = blockRenderMap.filter(function (draftBlock) {\n    return draftBlock.element === tag || draftBlock.wrapper === tag || draftBlock.aliasedElements && draftBlock.aliasedElements.some(function (alias) {\n      return alias === tag;\n    });\n  }).keySeq().toSet().toArray().sort();\n\n  // if we dont have any matched type, return unstyled\n  // if we have one matched type return it\n  // if we have multi matched types use the multi-match function to gather type\n  switch (matchedTypes.length) {\n    case 0:\n      return 'unstyled';\n    case 1:\n      return matchedTypes[0];\n    default:\n      return getMultiMatchedType(tag, lastList, [getListBlockType]) || 'unstyled';\n  }\n};\n\nvar processInlineTag = function processInlineTag(tag, node, currentStyle) {\n  var styleToCheck = inlineTags[tag];\n  if (styleToCheck) {\n    currentStyle = currentStyle.add(styleToCheck).toOrderedSet();\n  } else if (node instanceof HTMLElement) {\n    var htmlElement = node;\n    currentStyle = currentStyle.withMutations(function (style) {\n      var fontWeight = htmlElement.style.fontWeight;\n      var fontStyle = htmlElement.style.fontStyle;\n      var textDecoration = htmlElement.style.textDecoration;\n\n      if (boldValues.indexOf(fontWeight) >= 0) {\n        style.add('BOLD');\n      } else if (notBoldValues.indexOf(fontWeight) >= 0) {\n        style.remove('BOLD');\n      }\n\n      if (fontStyle === 'italic') {\n        style.add('ITALIC');\n      } else if (fontStyle === 'normal') {\n        style.remove('ITALIC');\n      }\n\n      if (textDecoration === 'underline') {\n        style.add('UNDERLINE');\n      }\n      if (textDecoration === 'line-through') {\n        style.add('STRIKETHROUGH');\n      }\n      if (textDecoration === 'none') {\n        style.remove('UNDERLINE');\n        style.remove('STRIKETHROUGH');\n      }\n    }).toOrderedSet();\n  }\n  return currentStyle;\n};\n\nvar joinChunks = function joinChunks(A, B, experimentalHasNestedBlocks) {\n  // Sometimes two blocks will touch in the DOM and we need to strip the\n  // extra delimiter to preserve niceness.\n  var lastInA = A.text.slice(-1);\n  var firstInB = B.text.slice(0, 1);\n\n  if (lastInA === '\\r' && firstInB === '\\r' && !experimentalHasNestedBlocks) {\n    A.text = A.text.slice(0, -1);\n    A.inlines.pop();\n    A.entities.pop();\n    A.blocks.pop();\n  }\n\n  // Kill whitespace after blocks\n  if (lastInA === '\\r') {\n    if (B.text === SPACE || B.text === '\\n') {\n      return A;\n    } else if (firstInB === SPACE || firstInB === '\\n') {\n      B.text = B.text.slice(1);\n      B.inlines.shift();\n      B.entities.shift();\n    }\n  }\n\n  return {\n    text: A.text + B.text,\n    inlines: A.inlines.concat(B.inlines),\n    entities: A.entities.concat(B.entities),\n    blocks: A.blocks.concat(B.blocks)\n  };\n};\n\n/**\n * Check to see if we have anything like <p> <blockquote> <h1>... to create\n * block tags from. If we do, we can use those and ignore <div> tags. If we\n * don't, we can treat <div> tags as meaningful (unstyled) blocks.\n */\nvar containsSemanticBlockMarkup = function containsSemanticBlockMarkup(html, blockTags) {\n  return blockTags.some(function (tag) {\n    return html.indexOf('<' + tag) !== -1;\n  });\n};\n\nvar hasValidLinkText = function hasValidLinkText(link) {\n  !(link instanceof HTMLAnchorElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Link must be an HTMLAnchorElement.') : invariant(false) : void 0;\n  var protocol = link.protocol;\n  return protocol === 'http:' || protocol === 'https:' || protocol === 'mailto:';\n};\n\nvar getWhitespaceChunk = function getWhitespaceChunk(inEntity) {\n  var entities = new Array(1);\n  if (inEntity) {\n    entities[0] = inEntity;\n  }\n  return _extends({}, EMPTY_CHUNK, {\n    text: SPACE,\n    inlines: [OrderedSet()],\n    entities: entities\n  });\n};\n\nvar getSoftNewlineChunk = function getSoftNewlineChunk() {\n  return _extends({}, EMPTY_CHUNK, {\n    text: '\\n',\n    inlines: [OrderedSet()],\n    entities: new Array(1)\n  });\n};\n\nvar getChunkedBlock = function getChunkedBlock() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  return _extends({}, EMPTY_BLOCK, props);\n};\n\nvar getBlockDividerChunk = function getBlockDividerChunk(block, depth) {\n  var parentKey = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  return {\n    text: '\\r',\n    inlines: [OrderedSet()],\n    entities: new Array(1),\n    blocks: [getChunkedBlock({\n      parent: parentKey,\n      key: generateRandomKey(),\n      type: block,\n      depth: Math.max(0, Math.min(MAX_DEPTH, depth))\n    })]\n  };\n};\n\n/**\n *  If we're pasting from one DraftEditor to another we can check to see if\n *  existing list item depth classes are being used and preserve this style\n */\nvar getListItemDepth = function getListItemDepth(node) {\n  var depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n  Object.keys(knownListItemDepthClasses).some(function (depthClass) {\n    if (node.classList.contains(depthClass)) {\n      depth = knownListItemDepthClasses[depthClass];\n    }\n  });\n  return depth;\n};\n\nvar genFragment = function genFragment(entityMap, node, inlineStyle, lastList, inBlock, blockTags, depth, blockRenderMap, inEntity, parentKey) {\n  var lastLastBlock = lastBlock;\n  var nodeName = node.nodeName.toLowerCase();\n  var newEntityMap = entityMap;\n  var nextBlockType = 'unstyled';\n  var newBlock = false;\n  var inBlockType = inBlock && getBlockTypeForTag(inBlock, lastList, blockRenderMap);\n  var chunk = _extends({}, EMPTY_CHUNK);\n  var newChunk = null;\n  var blockKey = void 0;\n\n  // Base Case\n  if (nodeName === '#text') {\n    var _text = node.textContent;\n    var nodeTextContent = _text.trim();\n\n    // We should not create blocks for leading spaces that are\n    // existing around ol/ul and their children list items\n    if (lastList && nodeTextContent === '' && node.parentElement) {\n      var parentNodeName = node.parentElement.nodeName.toLowerCase();\n      if (parentNodeName === 'ol' || parentNodeName === 'ul') {\n        return { chunk: _extends({}, EMPTY_CHUNK), entityMap: entityMap };\n      }\n    }\n\n    if (nodeTextContent === '' && inBlock !== 'pre') {\n      return { chunk: getWhitespaceChunk(inEntity), entityMap: entityMap };\n    }\n    if (inBlock !== 'pre') {\n      // Can't use empty string because MSWord\n      _text = _text.replace(REGEX_LF, SPACE);\n    }\n\n    // save the last block so we can use it later\n    lastBlock = nodeName;\n\n    return {\n      chunk: {\n        text: _text,\n        inlines: Array(_text.length).fill(inlineStyle),\n        entities: Array(_text.length).fill(inEntity),\n        blocks: []\n      },\n      entityMap: entityMap\n    };\n  }\n\n  // save the last block so we can use it later\n  lastBlock = nodeName;\n\n  // BR tags\n  if (nodeName === 'br') {\n    if (lastLastBlock === 'br' && (!inBlock || inBlockType === 'unstyled')) {\n      return {\n        chunk: getBlockDividerChunk('unstyled', depth, parentKey),\n        entityMap: entityMap\n      };\n    }\n    return { chunk: getSoftNewlineChunk(), entityMap: entityMap };\n  }\n\n  // IMG tags\n  if (nodeName === 'img' && node instanceof HTMLImageElement && node.attributes.getNamedItem('src') && node.attributes.getNamedItem('src').value) {\n    var image = node;\n    var entityConfig = {};\n\n    imgAttr.forEach(function (attr) {\n      var imageAttribute = image.getAttribute(attr);\n      if (imageAttribute) {\n        entityConfig[attr] = imageAttribute;\n      }\n    });\n    // Forcing this node to have children because otherwise no entity will be\n    // created for this node.\n    // The child text node cannot just have a space or return as content -\n    // we strip those out.\n    // See https://github.com/facebook/draft-js/issues/231 for some context.\n    node.textContent = '\\uD83D\\uDCF7';\n\n    // TODO: update this when we remove DraftEntity entirely\n    inEntity = DraftEntity.__create('IMAGE', 'MUTABLE', entityConfig || {});\n  }\n\n  // Inline tags\n  inlineStyle = processInlineTag(nodeName, node, inlineStyle);\n\n  // Handle lists\n  if (nodeName === 'ul' || nodeName === 'ol') {\n    if (lastList) {\n      depth += 1;\n    }\n    lastList = nodeName;\n  }\n\n  if (!experimentalTreeDataSupport && nodeName === 'li' && node instanceof HTMLElement) {\n    depth = getListItemDepth(node, depth);\n  }\n\n  var blockType = getBlockTypeForTag(nodeName, lastList, blockRenderMap);\n  var inListBlock = lastList && inBlock === 'li' && nodeName === 'li';\n  var inBlockOrHasNestedBlocks = (!inBlock || experimentalTreeDataSupport) && blockTags.indexOf(nodeName) !== -1;\n\n  // Block Tags\n  if (inListBlock || inBlockOrHasNestedBlocks) {\n    chunk = getBlockDividerChunk(blockType, depth, parentKey);\n    blockKey = chunk.blocks[0].key;\n    inBlock = nodeName;\n    newBlock = !experimentalTreeDataSupport;\n  }\n\n  // this is required so that we can handle 'ul' and 'ol'\n  if (inListBlock) {\n    nextBlockType = lastList === 'ul' ? 'unordered-list-item' : 'ordered-list-item';\n  }\n\n  // Recurse through children\n  var child = node.firstChild;\n  if (child != null) {\n    nodeName = child.nodeName.toLowerCase();\n  }\n\n  var entityId = null;\n\n  while (child) {\n    if (child instanceof HTMLAnchorElement && child.href && hasValidLinkText(child)) {\n      (function () {\n        var anchor = child;\n        var entityConfig = {};\n\n        anchorAttr.forEach(function (attr) {\n          var anchorAttribute = anchor.getAttribute(attr);\n          if (anchorAttribute) {\n            entityConfig[attr] = anchorAttribute;\n          }\n        });\n\n        entityConfig.url = new URI(anchor.href).toString();\n        // TODO: update this when we remove DraftEntity completely\n        entityId = DraftEntity.__create('LINK', 'MUTABLE', entityConfig || {});\n      })();\n    } else {\n      entityId = undefined;\n    }\n\n    var _genFragment = genFragment(newEntityMap, child, inlineStyle, lastList, inBlock, blockTags, depth, blockRenderMap, entityId || inEntity, experimentalTreeDataSupport ? blockKey : null),\n        generatedChunk = _genFragment.chunk,\n        maybeUpdatedEntityMap = _genFragment.entityMap;\n\n    newChunk = generatedChunk;\n    newEntityMap = maybeUpdatedEntityMap;\n\n    chunk = joinChunks(chunk, newChunk, experimentalTreeDataSupport);\n    var sibling = child.nextSibling;\n\n    // Put in a newline to break up blocks inside blocks\n    if (!parentKey && sibling && blockTags.indexOf(nodeName) >= 0 && inBlock) {\n      chunk = joinChunks(chunk, getSoftNewlineChunk());\n    }\n    if (sibling) {\n      nodeName = sibling.nodeName.toLowerCase();\n    }\n    child = sibling;\n  }\n\n  if (newBlock) {\n    chunk = joinChunks(chunk, getBlockDividerChunk(nextBlockType, depth, parentKey));\n  }\n\n  return { chunk: chunk, entityMap: newEntityMap };\n};\n\nvar getChunkForHTML = function getChunkForHTML(html, DOMBuilder, blockRenderMap, entityMap) {\n  html = html.trim().replace(REGEX_CR, '').replace(REGEX_NBSP, SPACE).replace(REGEX_CARRIAGE, '').replace(REGEX_ZWS, '');\n\n  var supportedBlockTags = getBlockMapSupportedTags(blockRenderMap);\n\n  var safeBody = DOMBuilder(html);\n  if (!safeBody) {\n    return null;\n  }\n  lastBlock = null;\n\n  // Sometimes we aren't dealing with content that contains nice semantic\n  // tags. In this case, use divs to separate everything out into paragraphs\n  // and hope for the best.\n  var workingBlocks = containsSemanticBlockMarkup(html, supportedBlockTags) ? supportedBlockTags : ['div'];\n\n  // Start with -1 block depth to offset the fact that we are passing in a fake\n  // UL block to start with.\n  var fragment = genFragment(entityMap, safeBody, OrderedSet(), 'ul', null, workingBlocks, -1, blockRenderMap);\n\n  var chunk = fragment.chunk;\n  var newEntityMap = fragment.entityMap;\n\n  // join with previous block to prevent weirdness on paste\n  if (chunk.text.indexOf('\\r') === 0) {\n    chunk = {\n      text: chunk.text.slice(1),\n      inlines: chunk.inlines.slice(1),\n      entities: chunk.entities.slice(1),\n      blocks: chunk.blocks\n    };\n  }\n\n  // Kill block delimiter at the end\n  if (chunk.text.slice(-1) === '\\r') {\n    chunk.text = chunk.text.slice(0, -1);\n    chunk.inlines = chunk.inlines.slice(0, -1);\n    chunk.entities = chunk.entities.slice(0, -1);\n    chunk.blocks.pop();\n  }\n\n  // If we saw no block tags, put an unstyled one in\n  if (chunk.blocks.length === 0) {\n    chunk.blocks.push(_extends({}, EMPTY_CHUNK, {\n      type: 'unstyled',\n      depth: 0\n    }));\n  }\n\n  // Sometimes we start with text that isn't in a block, which is then\n  // followed by blocks. Need to fix up the blocks to add in\n  // an unstyled block for this content\n  if (chunk.text.split('\\r').length === chunk.blocks.length + 1) {\n    chunk.blocks.unshift({ type: 'unstyled', depth: 0 });\n  }\n\n  return { chunk: chunk, entityMap: newEntityMap };\n};\n\nvar convertChunkToContentBlocks = function convertChunkToContentBlocks(chunk) {\n  if (!chunk || !chunk.text || !Array.isArray(chunk.blocks)) {\n    return null;\n  }\n\n  var initialState = {\n    cacheRef: {},\n    contentBlocks: []\n  };\n\n  var start = 0;\n\n  var rawBlocks = chunk.blocks,\n      rawInlines = chunk.inlines,\n      rawEntities = chunk.entities;\n\n\n  var BlockNodeRecord = experimentalTreeDataSupport ? ContentBlockNode : ContentBlock;\n\n  return chunk.text.split('\\r').reduce(function (acc, textBlock, index) {\n    // Make absolutely certain that our text is acceptable.\n    textBlock = sanitizeDraftText(textBlock);\n\n    var block = rawBlocks[index];\n    var end = start + textBlock.length;\n    var inlines = rawInlines.slice(start, end);\n    var entities = rawEntities.slice(start, end);\n    var characterList = List(inlines.map(function (style, index) {\n      var data = { style: style, entity: null };\n      if (entities[index]) {\n        data.entity = entities[index];\n      }\n      return CharacterMetadata.create(data);\n    }));\n    start = end + 1;\n\n    var depth = block.depth,\n        type = block.type,\n        parent = block.parent;\n\n\n    var key = block.key || generateRandomKey();\n    var parentTextNodeKey = null; // will be used to store container text nodes\n\n    // childrens add themselves to their parents since we are iterating in order\n    if (parent) {\n      var parentIndex = acc.cacheRef[parent];\n      var parentRecord = acc.contentBlocks[parentIndex];\n\n      // if parent has text we need to split it into a separate unstyled element\n      if (parentRecord.getChildKeys().isEmpty() && parentRecord.getText()) {\n        var parentCharacterList = parentRecord.getCharacterList();\n        var parentText = parentRecord.getText();\n        parentTextNodeKey = generateRandomKey();\n\n        var textNode = new ContentBlockNode({\n          key: parentTextNodeKey,\n          text: parentText,\n          characterList: parentCharacterList,\n          parent: parent,\n          nextSibling: key\n        });\n\n        acc.contentBlocks.push(textNode);\n\n        parentRecord = parentRecord.withMutations(function (block) {\n          block.set('characterList', List()).set('text', '').set('children', parentRecord.children.push(textNode.getKey()));\n        });\n      }\n\n      acc.contentBlocks[parentIndex] = parentRecord.set('children', parentRecord.children.push(key));\n    }\n\n    var blockNode = new BlockNodeRecord({\n      key: key,\n      parent: parent,\n      type: type,\n      depth: depth,\n      text: textBlock,\n      characterList: characterList,\n      prevSibling: parentTextNodeKey || (index === 0 || rawBlocks[index - 1].parent !== parent ? null : rawBlocks[index - 1].key),\n      nextSibling: index === rawBlocks.length - 1 || rawBlocks[index + 1].parent !== parent ? null : rawBlocks[index + 1].key\n    });\n\n    // insert node\n    acc.contentBlocks.push(blockNode);\n\n    // cache ref for building links\n    acc.cacheRef[blockNode.key] = index;\n\n    return acc;\n  }, initialState).contentBlocks;\n};\n\nvar convertFromHTMLtoContentBlocks = function convertFromHTMLtoContentBlocks(html) {\n  var DOMBuilder = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getSafeBodyFromHTML;\n  var blockRenderMap = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DefaultDraftBlockRenderMap;\n\n  // Be ABSOLUTELY SURE that the dom builder you pass here won't execute\n  // arbitrary code in whatever environment you're running this in. For an\n  // example of how we try to do this in-browser, see getSafeBodyFromHTML.\n\n  // TODO: replace DraftEntity with an OrderedMap here\n  var chunkData = getChunkForHTML(html, DOMBuilder, blockRenderMap, DraftEntity);\n\n  if (chunkData == null) {\n    return null;\n  }\n\n  var chunk = chunkData.chunk,\n      entityMap = chunkData.entityMap;\n\n  var contentBlocks = convertChunkToContentBlocks(chunk);\n\n  return {\n    contentBlocks: contentBlocks,\n    entityMap: entityMap\n  };\n};\n\nmodule.exports = convertFromHTMLtoContentBlocks;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}