{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport warning from 'warning';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport { polyfill } from 'react-lifecycles-compat';\nimport { TreeContext } from './contextTypes';\nimport { convertTreeToEntities, convertDataToTree, getDataAndAria, getPosition, getDragNodesKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr, mapChildren, conductCheck, warnOnlyTreeNode } from './util';\nvar Tree = /*#__PURE__*/function (_React$Component) {\n  _inherits(Tree, _React$Component);\n  var _super = _createSuper(Tree);\n  function Tree() {\n    var _this;\n    _classCallCheck(this, Tree);\n    _this = _super.apply(this, arguments);\n    /** Internal usage for `rc-tree-select`, we don't promise it will not change. */\n\n    _this.domTreeNodes = {};\n    _this.state = {\n      keyEntities: {},\n      selectedKeys: [],\n      checkedKeys: [],\n      halfCheckedKeys: [],\n      loadedKeys: [],\n      loadingKeys: [],\n      expandedKeys: [],\n      dragNodesKeys: [],\n      dragOverNodeKey: null,\n      dropPosition: null,\n      treeNode: [],\n      prevProps: null\n    };\n    _this.onNodeDragStart = function (event, node) {\n      var expandedKeys = _this.state.expandedKeys;\n      var onDragStart = _this.props.onDragStart;\n      var _node$props = node.props,\n        eventKey = _node$props.eventKey,\n        children = _node$props.children;\n      _this.dragNode = node;\n      _this.setState({\n        dragNodesKeys: getDragNodesKeys(children, node),\n        expandedKeys: arrDel(expandedKeys, eventKey)\n      });\n      if (onDragStart) {\n        onDragStart({\n          event: event,\n          node: node\n        });\n      }\n    };\n    /**\n     * [Legacy] Select handler is less small than node,\n     * so that this will trigger when drag enter node or select handler.\n     * This is a little tricky if customize css without padding.\n     * Better for use mouse move event to refresh drag state.\n     * But let's just keep it to avoid event trigger logic change.\n     */\n\n    _this.onNodeDragEnter = function (event, node) {\n      var _this$state = _this.state,\n        expandedKeys = _this$state.expandedKeys,\n        dragNodesKeys = _this$state.dragNodesKeys;\n      var onDragEnter = _this.props.onDragEnter;\n      var _node$props2 = node.props,\n        pos = _node$props2.pos,\n        eventKey = _node$props2.eventKey;\n      if (!_this.dragNode || dragNodesKeys.indexOf(eventKey) !== -1) return;\n      var dropPosition = calcDropPosition(event, node); // Skip if drag node is self\n\n      if (_this.dragNode.props.eventKey === eventKey && dropPosition === 0) {\n        _this.setState({\n          dragOverNodeKey: '',\n          dropPosition: null\n        });\n        return;\n      } // Ref: https://github.com/react-component/tree/issues/132\n      // Add timeout to let onDragLevel fire before onDragEnter,\n      // so that we can clean drag props for onDragLeave node.\n      // Macro task for this:\n      // https://html.spec.whatwg.org/multipage/webappapis.html#clean-up-after-running-script\n\n      setTimeout(function () {\n        // Update drag over node\n        _this.setState({\n          dragOverNodeKey: eventKey,\n          dropPosition: dropPosition\n        }); // Side effect for delay drag\n\n        if (!_this.delayedDragEnterLogic) {\n          _this.delayedDragEnterLogic = {};\n        }\n        Object.keys(_this.delayedDragEnterLogic).forEach(function (key) {\n          clearTimeout(_this.delayedDragEnterLogic[key]);\n        });\n        _this.delayedDragEnterLogic[pos] = window.setTimeout(function () {\n          var newExpandedKeys = arrAdd(expandedKeys, eventKey);\n          if (!('expandedKeys' in _this.props)) {\n            _this.setState({\n              expandedKeys: newExpandedKeys\n            });\n          }\n          if (onDragEnter) {\n            onDragEnter({\n              event: event,\n              node: node,\n              expandedKeys: newExpandedKeys\n            });\n          }\n        }, 400);\n      }, 0);\n    };\n    _this.onNodeDragOver = function (event, node) {\n      var dragNodesKeys = _this.state.dragNodesKeys;\n      var onDragOver = _this.props.onDragOver;\n      var eventKey = node.props.eventKey;\n      if (dragNodesKeys.indexOf(eventKey) !== -1) {\n        return;\n      } // Update drag position\n\n      if (_this.dragNode && eventKey === _this.state.dragOverNodeKey) {\n        var dropPosition = calcDropPosition(event, node);\n        if (dropPosition === _this.state.dropPosition) return;\n        _this.setState({\n          dropPosition: dropPosition\n        });\n      }\n      if (onDragOver) {\n        onDragOver({\n          event: event,\n          node: node\n        });\n      }\n    };\n    _this.onNodeDragLeave = function (event, node) {\n      var onDragLeave = _this.props.onDragLeave;\n      _this.setState({\n        dragOverNodeKey: ''\n      });\n      if (onDragLeave) {\n        onDragLeave({\n          event: event,\n          node: node\n        });\n      }\n    };\n    _this.onNodeDragEnd = function (event, node) {\n      var onDragEnd = _this.props.onDragEnd;\n      _this.setState({\n        dragOverNodeKey: ''\n      });\n      if (onDragEnd) {\n        onDragEnd({\n          event: event,\n          node: node\n        });\n      }\n      _this.dragNode = null;\n    };\n    _this.onNodeDrop = function (event, node) {\n      var _this$state2 = _this.state,\n        _this$state2$dragNode = _this$state2.dragNodesKeys,\n        dragNodesKeys = _this$state2$dragNode === void 0 ? [] : _this$state2$dragNode,\n        dropPosition = _this$state2.dropPosition;\n      var onDrop = _this.props.onDrop;\n      var _node$props3 = node.props,\n        eventKey = _node$props3.eventKey,\n        pos = _node$props3.pos;\n      _this.setState({\n        dragOverNodeKey: ''\n      });\n      if (dragNodesKeys.indexOf(eventKey) !== -1) {\n        warning(false, \"Can not drop to dragNode(include it's children node)\");\n        return;\n      }\n      var posArr = posToArr(pos);\n      var dropResult = {\n        event: event,\n        node: node,\n        dragNode: _this.dragNode,\n        dragNodesKeys: dragNodesKeys.slice(),\n        dropPosition: dropPosition + Number(posArr[posArr.length - 1]),\n        dropToGap: false\n      };\n      if (dropPosition !== 0) {\n        dropResult.dropToGap = true;\n      }\n      if (onDrop) {\n        onDrop(dropResult);\n      }\n      _this.dragNode = null;\n    };\n    _this.onNodeClick = function (e, treeNode) {\n      var onClick = _this.props.onClick;\n      if (onClick) {\n        onClick(e, treeNode);\n      }\n    };\n    _this.onNodeDoubleClick = function (e, treeNode) {\n      var onDoubleClick = _this.props.onDoubleClick;\n      if (onDoubleClick) {\n        onDoubleClick(e, treeNode);\n      }\n    };\n    _this.onNodeSelect = function (e, treeNode) {\n      var selectedKeys = _this.state.selectedKeys;\n      var keyEntities = _this.state.keyEntities;\n      var _this$props = _this.props,\n        onSelect = _this$props.onSelect,\n        multiple = _this$props.multiple;\n      var _treeNode$props = treeNode.props,\n        selected = _treeNode$props.selected,\n        eventKey = _treeNode$props.eventKey;\n      var targetSelected = !selected; // Update selected keys\n\n      if (!targetSelected) {\n        selectedKeys = arrDel(selectedKeys, eventKey);\n      } else if (!multiple) {\n        selectedKeys = [eventKey];\n      } else {\n        selectedKeys = arrAdd(selectedKeys, eventKey);\n      } // [Legacy] Not found related usage in doc or upper libs\n\n      var selectedNodes = selectedKeys.map(function (key) {\n        var entity = keyEntities[key];\n        if (!entity) return null;\n        return entity.node;\n      }).filter(function (node) {\n        return node;\n      });\n      _this.setUncontrolledState({\n        selectedKeys: selectedKeys\n      });\n      if (onSelect) {\n        onSelect(selectedKeys, {\n          event: 'select',\n          selected: targetSelected,\n          node: treeNode,\n          selectedNodes: selectedNodes,\n          nativeEvent: e.nativeEvent\n        });\n      }\n    };\n    _this.onNodeCheck = function (e, treeNode, checked) {\n      var _this$state3 = _this.state,\n        keyEntities = _this$state3.keyEntities,\n        oriCheckedKeys = _this$state3.checkedKeys,\n        oriHalfCheckedKeys = _this$state3.halfCheckedKeys;\n      var _this$props2 = _this.props,\n        checkStrictly = _this$props2.checkStrictly,\n        onCheck = _this$props2.onCheck;\n      var eventKey = treeNode.props.eventKey; // Prepare trigger arguments\n\n      var checkedObj;\n      var eventObj = {\n        event: 'check',\n        node: treeNode,\n        checked: checked,\n        nativeEvent: e.nativeEvent\n      };\n      if (checkStrictly) {\n        var checkedKeys = checked ? arrAdd(oriCheckedKeys, eventKey) : arrDel(oriCheckedKeys, eventKey);\n        var halfCheckedKeys = arrDel(oriHalfCheckedKeys, eventKey);\n        checkedObj = {\n          checked: checkedKeys,\n          halfChecked: halfCheckedKeys\n        };\n        eventObj.checkedNodes = checkedKeys.map(function (key) {\n          return keyEntities[key];\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (entity) {\n          return entity.node;\n        });\n        _this.setUncontrolledState({\n          checkedKeys: checkedKeys\n        });\n      } else {\n        var _conductCheck = conductCheck([eventKey], checked, keyEntities, {\n            checkedKeys: oriCheckedKeys,\n            halfCheckedKeys: oriHalfCheckedKeys\n          }),\n          _checkedKeys = _conductCheck.checkedKeys,\n          _halfCheckedKeys = _conductCheck.halfCheckedKeys;\n        checkedObj = _checkedKeys; // [Legacy] This is used for `rc-tree-select`\n\n        eventObj.checkedNodes = [];\n        eventObj.checkedNodesPositions = [];\n        eventObj.halfCheckedKeys = _halfCheckedKeys;\n        _checkedKeys.forEach(function (key) {\n          var entity = keyEntities[key];\n          if (!entity) return;\n          var node = entity.node,\n            pos = entity.pos;\n          eventObj.checkedNodes.push(node);\n          eventObj.checkedNodesPositions.push({\n            node: node,\n            pos: pos\n          });\n        });\n        _this.setUncontrolledState({\n          checkedKeys: _checkedKeys,\n          halfCheckedKeys: _halfCheckedKeys\n        });\n      }\n      if (onCheck) {\n        onCheck(checkedObj, eventObj);\n      }\n    };\n    _this.onNodeLoad = function (treeNode) {\n      return new Promise(function (resolve) {\n        // We need to get the latest state of loading/loaded keys\n        _this.setState(function (_ref) {\n          var _ref$loadedKeys = _ref.loadedKeys,\n            loadedKeys = _ref$loadedKeys === void 0 ? [] : _ref$loadedKeys,\n            _ref$loadingKeys = _ref.loadingKeys,\n            loadingKeys = _ref$loadingKeys === void 0 ? [] : _ref$loadingKeys;\n          var _this$props3 = _this.props,\n            loadData = _this$props3.loadData,\n            onLoad = _this$props3.onLoad;\n          var eventKey = treeNode.props.eventKey;\n          if (!loadData || loadedKeys.indexOf(eventKey) !== -1 || loadingKeys.indexOf(eventKey) !== -1) {\n            // react 15 will warn if return null\n            return {};\n          } // Process load data\n\n          var promise = loadData(treeNode);\n          promise.then(function () {\n            var _this$state4 = _this.state,\n              currentLoadedKeys = _this$state4.loadedKeys,\n              currentLoadingKeys = _this$state4.loadingKeys;\n            var newLoadedKeys = arrAdd(currentLoadedKeys, eventKey);\n            var newLoadingKeys = arrDel(currentLoadingKeys, eventKey); // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n            // https://github.com/ant-design/ant-design/issues/12464\n\n            if (onLoad) {\n              onLoad(newLoadedKeys, {\n                event: 'load',\n                node: treeNode\n              });\n            }\n            _this.setUncontrolledState({\n              loadedKeys: newLoadedKeys\n            });\n            _this.setState({\n              loadingKeys: newLoadingKeys\n            });\n            resolve();\n          });\n          return {\n            loadingKeys: arrAdd(loadingKeys, eventKey)\n          };\n        });\n      });\n    };\n    _this.onNodeExpand = function (e, treeNode) {\n      var expandedKeys = _this.state.expandedKeys;\n      var _this$props4 = _this.props,\n        onExpand = _this$props4.onExpand,\n        loadData = _this$props4.loadData;\n      var _treeNode$props2 = treeNode.props,\n        eventKey = _treeNode$props2.eventKey,\n        expanded = _treeNode$props2.expanded; // Update selected keys\n\n      var index = expandedKeys.indexOf(eventKey);\n      var targetExpanded = !expanded;\n      warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n      if (targetExpanded) {\n        expandedKeys = arrAdd(expandedKeys, eventKey);\n      } else {\n        expandedKeys = arrDel(expandedKeys, eventKey);\n      }\n      _this.setUncontrolledState({\n        expandedKeys: expandedKeys\n      });\n      if (onExpand) {\n        onExpand(expandedKeys, {\n          node: treeNode,\n          expanded: targetExpanded,\n          nativeEvent: e.nativeEvent\n        });\n      } // Async Load data\n\n      if (targetExpanded && loadData) {\n        var loadPromise = _this.onNodeLoad(treeNode);\n        return loadPromise ? loadPromise.then(function () {\n          // [Legacy] Refresh logic\n          _this.setUncontrolledState({\n            expandedKeys: expandedKeys\n          });\n        }) : null;\n      }\n      return null;\n    };\n    _this.onNodeMouseEnter = function (event, node) {\n      var onMouseEnter = _this.props.onMouseEnter;\n      if (onMouseEnter) {\n        onMouseEnter({\n          event: event,\n          node: node\n        });\n      }\n    };\n    _this.onNodeMouseLeave = function (event, node) {\n      var onMouseLeave = _this.props.onMouseLeave;\n      if (onMouseLeave) {\n        onMouseLeave({\n          event: event,\n          node: node\n        });\n      }\n    };\n    _this.onNodeContextMenu = function (event, node) {\n      var onRightClick = _this.props.onRightClick;\n      if (onRightClick) {\n        event.preventDefault();\n        onRightClick({\n          event: event,\n          node: node\n        });\n      }\n    };\n    /**\n     * Only update the value which is not in props\n     */\n\n    _this.setUncontrolledState = function (state) {\n      var needSync = false;\n      var newState = {};\n      Object.keys(state).forEach(function (name) {\n        if (name in _this.props) return;\n        needSync = true;\n        newState[name] = state[name];\n      });\n      if (needSync) {\n        _this.setState(newState);\n      }\n    };\n    _this.registerTreeNode = function (key, node) {\n      if (node) {\n        _this.domTreeNodes[key] = node;\n      } else {\n        delete _this.domTreeNodes[key];\n      }\n    };\n    _this.isKeyChecked = function (key) {\n      var _this$state$checkedKe = _this.state.checkedKeys,\n        checkedKeys = _this$state$checkedKe === void 0 ? [] : _this$state$checkedKe;\n      return checkedKeys.indexOf(key) !== -1;\n    };\n    /**\n     * [Legacy] Original logic use `key` as tracking clue.\n     * We have to use `cloneElement` to pass `key`.\n     */\n\n    _this.renderTreeNode = function (child, index) {\n      var level = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var _this$state5 = _this.state,\n        keyEntities = _this$state5.keyEntities,\n        _this$state5$expanded = _this$state5.expandedKeys,\n        expandedKeys = _this$state5$expanded === void 0 ? [] : _this$state5$expanded,\n        _this$state5$selected = _this$state5.selectedKeys,\n        selectedKeys = _this$state5$selected === void 0 ? [] : _this$state5$selected,\n        _this$state5$halfChec = _this$state5.halfCheckedKeys,\n        halfCheckedKeys = _this$state5$halfChec === void 0 ? [] : _this$state5$halfChec,\n        _this$state5$loadedKe = _this$state5.loadedKeys,\n        loadedKeys = _this$state5$loadedKe === void 0 ? [] : _this$state5$loadedKe,\n        _this$state5$loadingK = _this$state5.loadingKeys,\n        loadingKeys = _this$state5$loadingK === void 0 ? [] : _this$state5$loadingK,\n        dragOverNodeKey = _this$state5.dragOverNodeKey,\n        dropPosition = _this$state5.dropPosition;\n      var pos = getPosition(level, index);\n      var key = child.key || pos;\n      if (!keyEntities[key]) {\n        warnOnlyTreeNode();\n        return null;\n      }\n      return React.cloneElement(child, {\n        key: key,\n        eventKey: key,\n        expanded: expandedKeys.indexOf(key) !== -1,\n        selected: selectedKeys.indexOf(key) !== -1,\n        loaded: loadedKeys.indexOf(key) !== -1,\n        loading: loadingKeys.indexOf(key) !== -1,\n        checked: _this.isKeyChecked(key),\n        halfChecked: halfCheckedKeys.indexOf(key) !== -1,\n        pos: pos,\n        // [Legacy] Drag props\n        dragOver: dragOverNodeKey === key && dropPosition === 0,\n        dragOverGapTop: dragOverNodeKey === key && dropPosition === -1,\n        dragOverGapBottom: dragOverNodeKey === key && dropPosition === 1\n      });\n    };\n    return _this;\n  }\n  _createClass(Tree, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var treeNode = this.state.treeNode;\n      var _this$props5 = this.props,\n        prefixCls = _this$props5.prefixCls,\n        className = _this$props5.className,\n        focusable = _this$props5.focusable,\n        style = _this$props5.style,\n        showLine = _this$props5.showLine,\n        _this$props5$tabIndex = _this$props5.tabIndex,\n        tabIndex = _this$props5$tabIndex === void 0 ? 0 : _this$props5$tabIndex,\n        selectable = _this$props5.selectable,\n        showIcon = _this$props5.showIcon,\n        icon = _this$props5.icon,\n        switcherIcon = _this$props5.switcherIcon,\n        draggable = _this$props5.draggable,\n        checkable = _this$props5.checkable,\n        checkStrictly = _this$props5.checkStrictly,\n        disabled = _this$props5.disabled,\n        motion = _this$props5.motion,\n        loadData = _this$props5.loadData,\n        filterTreeNode = _this$props5.filterTreeNode;\n      var domProps = getDataAndAria(this.props);\n      if (focusable) {\n        domProps.tabIndex = tabIndex;\n      }\n      return React.createElement(TreeContext.Provider, {\n        value: {\n          prefixCls: prefixCls,\n          selectable: selectable,\n          showIcon: showIcon,\n          icon: icon,\n          switcherIcon: switcherIcon,\n          draggable: draggable,\n          checkable: checkable,\n          checkStrictly: checkStrictly,\n          disabled: disabled,\n          motion: motion,\n          loadData: loadData,\n          filterTreeNode: filterTreeNode,\n          renderTreeNode: this.renderTreeNode,\n          isKeyChecked: this.isKeyChecked,\n          onNodeClick: this.onNodeClick,\n          onNodeDoubleClick: this.onNodeDoubleClick,\n          onNodeExpand: this.onNodeExpand,\n          onNodeSelect: this.onNodeSelect,\n          onNodeCheck: this.onNodeCheck,\n          onNodeLoad: this.onNodeLoad,\n          onNodeMouseEnter: this.onNodeMouseEnter,\n          onNodeMouseLeave: this.onNodeMouseLeave,\n          onNodeContextMenu: this.onNodeContextMenu,\n          onNodeDragStart: this.onNodeDragStart,\n          onNodeDragEnter: this.onNodeDragEnter,\n          onNodeDragOver: this.onNodeDragOver,\n          onNodeDragLeave: this.onNodeDragLeave,\n          onNodeDragEnd: this.onNodeDragEnd,\n          onNodeDrop: this.onNodeDrop,\n          registerTreeNode: this.registerTreeNode\n        }\n      }, React.createElement(\"ul\", Object.assign({}, domProps, {\n        className: classNames(prefixCls, className, _defineProperty({}, \"\".concat(prefixCls, \"-show-line\"), showLine)),\n        style: style,\n        role: \"tree\",\n        unselectable: \"on\"\n      }), mapChildren(treeNode, function (node, index) {\n        return _this2.renderTreeNode(node, index);\n      })));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, prevState) {\n      var prevProps = prevState.prevProps;\n      var newState = {\n        prevProps: props\n      };\n      function needSync(name) {\n        return !prevProps && name in props || prevProps && prevProps[name] !== props[name];\n      } // ================== Tree Node ==================\n\n      var treeNode = null; // Check if `treeData` or `children` changed and save into the state.\n\n      if (needSync('treeData')) {\n        treeNode = convertDataToTree(props.treeData);\n      } else if (needSync('children')) {\n        treeNode = toArray(props.children);\n      } // Tree support filter function which will break the tree structure in the vdm.\n      // We cache the treeNodes in state so that we can return the treeNode in event trigger.\n\n      if (treeNode) {\n        newState.treeNode = treeNode; // Calculate the entities data for quick match\n\n        var entitiesMap = convertTreeToEntities(treeNode);\n        newState.keyEntities = entitiesMap.keyEntities;\n      }\n      var keyEntities = newState.keyEntities || prevState.keyEntities; // ================ expandedKeys =================\n\n      if (needSync('expandedKeys') || prevProps && needSync('autoExpandParent')) {\n        newState.expandedKeys = props.autoExpandParent || !prevProps && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities) : props.expandedKeys;\n      } else if (!prevProps && props.defaultExpandAll) {\n        newState.expandedKeys = Object.keys(keyEntities);\n      } else if (!prevProps && props.defaultExpandedKeys) {\n        newState.expandedKeys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities) : props.defaultExpandedKeys;\n      } // ================ selectedKeys =================\n\n      if (props.selectable) {\n        if (needSync('selectedKeys')) {\n          newState.selectedKeys = calcSelectedKeys(props.selectedKeys, props);\n        } else if (!prevProps && props.defaultSelectedKeys) {\n          newState.selectedKeys = calcSelectedKeys(props.defaultSelectedKeys, props);\n        }\n      } // ================= checkedKeys =================\n\n      if (props.checkable) {\n        var checkedKeyEntity;\n        if (needSync('checkedKeys')) {\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n        } else if (!prevProps && props.defaultCheckedKeys) {\n          checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n        } else if (treeNode) {\n          // If treeNode changed, we also need check it\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n            checkedKeys: prevState.checkedKeys,\n            halfCheckedKeys: prevState.halfCheckedKeys\n          };\n        }\n        if (checkedKeyEntity) {\n          var _checkedKeyEntity = checkedKeyEntity,\n            _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n            checkedKeys = _checkedKeyEntity$che === void 0 ? [] : _checkedKeyEntity$che,\n            _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n            halfCheckedKeys = _checkedKeyEntity$hal === void 0 ? [] : _checkedKeyEntity$hal;\n          if (!props.checkStrictly) {\n            var conductKeys = conductCheck(checkedKeys, true, keyEntities);\n            checkedKeys = conductKeys.checkedKeys;\n            halfCheckedKeys = conductKeys.halfCheckedKeys;\n          }\n          newState.checkedKeys = checkedKeys;\n          newState.halfCheckedKeys = halfCheckedKeys;\n        }\n      } // ================= loadedKeys ==================\n\n      if (needSync('loadedKeys')) {\n        newState.loadedKeys = props.loadedKeys;\n      }\n      return newState;\n    }\n  }]);\n  return Tree;\n}(React.Component);\nTree.propTypes = {\n  prefixCls: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  tabIndex: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  children: PropTypes.any,\n  treeData: PropTypes.array,\n  showLine: PropTypes.bool,\n  showIcon: PropTypes.bool,\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  focusable: PropTypes.bool,\n  selectable: PropTypes.bool,\n  disabled: PropTypes.bool,\n  multiple: PropTypes.bool,\n  checkable: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  checkStrictly: PropTypes.bool,\n  draggable: PropTypes.bool,\n  defaultExpandParent: PropTypes.bool,\n  autoExpandParent: PropTypes.bool,\n  defaultExpandAll: PropTypes.bool,\n  defaultExpandedKeys: PropTypes.arrayOf(PropTypes.string),\n  expandedKeys: PropTypes.arrayOf(PropTypes.string),\n  defaultCheckedKeys: PropTypes.arrayOf(PropTypes.string),\n  checkedKeys: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])), PropTypes.object]),\n  defaultSelectedKeys: PropTypes.arrayOf(PropTypes.string),\n  selectedKeys: PropTypes.arrayOf(PropTypes.string),\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onExpand: PropTypes.func,\n  onCheck: PropTypes.func,\n  onSelect: PropTypes.func,\n  onLoad: PropTypes.func,\n  loadData: PropTypes.func,\n  loadedKeys: PropTypes.arrayOf(PropTypes.string),\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onRightClick: PropTypes.func,\n  onDragStart: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onDragLeave: PropTypes.func,\n  onDragEnd: PropTypes.func,\n  onDrop: PropTypes.func,\n  filterTreeNode: PropTypes.func,\n  motion: PropTypes.object,\n  switcherIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func])\n};\nTree.defaultProps = {\n  prefixCls: 'rc-tree',\n  showLine: false,\n  showIcon: true,\n  selectable: true,\n  multiple: false,\n  checkable: false,\n  disabled: false,\n  checkStrictly: false,\n  draggable: false,\n  defaultExpandParent: true,\n  autoExpandParent: false,\n  defaultExpandAll: false,\n  defaultExpandedKeys: [],\n  defaultCheckedKeys: [],\n  defaultSelectedKeys: []\n};\npolyfill(Tree);\nexport default Tree;","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_defineProperty","key","value","Object","defineProperty","enumerable","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","Super","_getPrototypeOf","result","_isNativeReflectConstruct","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","sham","Proxy","Date","toString","e","getPrototypeOf","React","PropTypes","classNames","warning","toArray","polyfill","TreeContext","convertTreeToEntities","convertDataToTree","getDataAndAria","getPosition","getDragNodesKeys","parseCheckedKeys","conductExpandParent","calcSelectedKeys","calcDropPosition","arrAdd","arrDel","posToArr","mapChildren","conductCheck","warnOnlyTreeNode","Tree","_React$Component","_super","_this","domTreeNodes","state","keyEntities","selectedKeys","checkedKeys","halfCheckedKeys","loadedKeys","loadingKeys","expandedKeys","dragNodesKeys","dragOverNodeKey","dropPosition","treeNode","prevProps","onNodeDragStart","event","node","onDragStart","_node$props","eventKey","children","dragNode","setState","onNodeDragEnter","_this$state","onDragEnter","_node$props2","pos","indexOf","setTimeout","delayedDragEnterLogic","keys","forEach","clearTimeout","window","newExpandedKeys","onNodeDragOver","onDragOver","onNodeDragLeave","onDragLeave","onNodeDragEnd","onDragEnd","onNodeDrop","_this$state2","_this$state2$dragNode","onDrop","_node$props3","posArr","dropResult","slice","Number","dropToGap","onNodeClick","onClick","onNodeDoubleClick","onDoubleClick","onNodeSelect","_this$props","onSelect","multiple","_treeNode$props","selected","targetSelected","selectedNodes","map","entity","filter","setUncontrolledState","nativeEvent","onNodeCheck","checked","_this$state3","oriCheckedKeys","oriHalfCheckedKeys","_this$props2","checkStrictly","onCheck","checkedObj","eventObj","halfChecked","checkedNodes","_conductCheck","_checkedKeys","_halfCheckedKeys","checkedNodesPositions","push","onNodeLoad","Promise","resolve","_ref","_ref$loadedKeys","_ref$loadingKeys","_this$props3","loadData","onLoad","promise","then","_this$state4","currentLoadedKeys","currentLoadingKeys","newLoadedKeys","newLoadingKeys","onNodeExpand","_this$props4","onExpand","_treeNode$props2","expanded","index","targetExpanded","loadPromise","onNodeMouseEnter","onMouseEnter","onNodeMouseLeave","onMouseLeave","onNodeContextMenu","onRightClick","preventDefault","needSync","newState","name","registerTreeNode","isKeyChecked","_this$state$checkedKe","renderTreeNode","child","level","undefined","_this$state5","_this$state5$expanded","_this$state5$selected","_this$state5$halfChec","_this$state5$loadedKe","_this$state5$loadingK","cloneElement","loaded","loading","dragOver","dragOverGapTop","dragOverGapBottom","render","_this2","_this$props5","prefixCls","className","focusable","style","showLine","_this$props5$tabIndex","tabIndex","selectable","showIcon","icon","switcherIcon","draggable","checkable","disabled","motion","filterTreeNode","domProps","createElement","Provider","assign","concat","role","unselectable","getDerivedStateFromProps","prevState","treeData","entitiesMap","autoExpandParent","defaultExpandParent","defaultExpandAll","defaultExpandedKeys","defaultSelectedKeys","checkedKeyEntity","defaultCheckedKeys","_checkedKeyEntity","_checkedKeyEntity$che","_checkedKeyEntity$hal","conductKeys","Component","propTypes","string","object","oneOfType","number","any","array","bool","func","arrayOf","defaultProps"],"sources":["/Users/zhangqiang/Documents/GitHub/frontEnd-all-knowledge/examples/react/a08antd带编辑的表格/node_modules/rc-tree/es/Tree.js"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport warning from 'warning';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport { polyfill } from 'react-lifecycles-compat';\nimport { TreeContext } from './contextTypes';\nimport { convertTreeToEntities, convertDataToTree, getDataAndAria, getPosition, getDragNodesKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr, mapChildren, conductCheck, warnOnlyTreeNode } from './util';\n\nvar Tree = /*#__PURE__*/function (_React$Component) {\n  _inherits(Tree, _React$Component);\n\n  var _super = _createSuper(Tree);\n\n  function Tree() {\n    var _this;\n\n    _classCallCheck(this, Tree);\n\n    _this = _super.apply(this, arguments);\n    /** Internal usage for `rc-tree-select`, we don't promise it will not change. */\n\n    _this.domTreeNodes = {};\n    _this.state = {\n      keyEntities: {},\n      selectedKeys: [],\n      checkedKeys: [],\n      halfCheckedKeys: [],\n      loadedKeys: [],\n      loadingKeys: [],\n      expandedKeys: [],\n      dragNodesKeys: [],\n      dragOverNodeKey: null,\n      dropPosition: null,\n      treeNode: [],\n      prevProps: null\n    };\n\n    _this.onNodeDragStart = function (event, node) {\n      var expandedKeys = _this.state.expandedKeys;\n      var onDragStart = _this.props.onDragStart;\n      var _node$props = node.props,\n          eventKey = _node$props.eventKey,\n          children = _node$props.children;\n      _this.dragNode = node;\n\n      _this.setState({\n        dragNodesKeys: getDragNodesKeys(children, node),\n        expandedKeys: arrDel(expandedKeys, eventKey)\n      });\n\n      if (onDragStart) {\n        onDragStart({\n          event: event,\n          node: node\n        });\n      }\n    };\n    /**\n     * [Legacy] Select handler is less small than node,\n     * so that this will trigger when drag enter node or select handler.\n     * This is a little tricky if customize css without padding.\n     * Better for use mouse move event to refresh drag state.\n     * But let's just keep it to avoid event trigger logic change.\n     */\n\n\n    _this.onNodeDragEnter = function (event, node) {\n      var _this$state = _this.state,\n          expandedKeys = _this$state.expandedKeys,\n          dragNodesKeys = _this$state.dragNodesKeys;\n      var onDragEnter = _this.props.onDragEnter;\n      var _node$props2 = node.props,\n          pos = _node$props2.pos,\n          eventKey = _node$props2.eventKey;\n      if (!_this.dragNode || dragNodesKeys.indexOf(eventKey) !== -1) return;\n      var dropPosition = calcDropPosition(event, node); // Skip if drag node is self\n\n      if (_this.dragNode.props.eventKey === eventKey && dropPosition === 0) {\n        _this.setState({\n          dragOverNodeKey: '',\n          dropPosition: null\n        });\n\n        return;\n      } // Ref: https://github.com/react-component/tree/issues/132\n      // Add timeout to let onDragLevel fire before onDragEnter,\n      // so that we can clean drag props for onDragLeave node.\n      // Macro task for this:\n      // https://html.spec.whatwg.org/multipage/webappapis.html#clean-up-after-running-script\n\n\n      setTimeout(function () {\n        // Update drag over node\n        _this.setState({\n          dragOverNodeKey: eventKey,\n          dropPosition: dropPosition\n        }); // Side effect for delay drag\n\n\n        if (!_this.delayedDragEnterLogic) {\n          _this.delayedDragEnterLogic = {};\n        }\n\n        Object.keys(_this.delayedDragEnterLogic).forEach(function (key) {\n          clearTimeout(_this.delayedDragEnterLogic[key]);\n        });\n        _this.delayedDragEnterLogic[pos] = window.setTimeout(function () {\n          var newExpandedKeys = arrAdd(expandedKeys, eventKey);\n\n          if (!('expandedKeys' in _this.props)) {\n            _this.setState({\n              expandedKeys: newExpandedKeys\n            });\n          }\n\n          if (onDragEnter) {\n            onDragEnter({\n              event: event,\n              node: node,\n              expandedKeys: newExpandedKeys\n            });\n          }\n        }, 400);\n      }, 0);\n    };\n\n    _this.onNodeDragOver = function (event, node) {\n      var dragNodesKeys = _this.state.dragNodesKeys;\n      var onDragOver = _this.props.onDragOver;\n      var eventKey = node.props.eventKey;\n\n      if (dragNodesKeys.indexOf(eventKey) !== -1) {\n        return;\n      } // Update drag position\n\n\n      if (_this.dragNode && eventKey === _this.state.dragOverNodeKey) {\n        var dropPosition = calcDropPosition(event, node);\n        if (dropPosition === _this.state.dropPosition) return;\n\n        _this.setState({\n          dropPosition: dropPosition\n        });\n      }\n\n      if (onDragOver) {\n        onDragOver({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onNodeDragLeave = function (event, node) {\n      var onDragLeave = _this.props.onDragLeave;\n\n      _this.setState({\n        dragOverNodeKey: ''\n      });\n\n      if (onDragLeave) {\n        onDragLeave({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onNodeDragEnd = function (event, node) {\n      var onDragEnd = _this.props.onDragEnd;\n\n      _this.setState({\n        dragOverNodeKey: ''\n      });\n\n      if (onDragEnd) {\n        onDragEnd({\n          event: event,\n          node: node\n        });\n      }\n\n      _this.dragNode = null;\n    };\n\n    _this.onNodeDrop = function (event, node) {\n      var _this$state2 = _this.state,\n          _this$state2$dragNode = _this$state2.dragNodesKeys,\n          dragNodesKeys = _this$state2$dragNode === void 0 ? [] : _this$state2$dragNode,\n          dropPosition = _this$state2.dropPosition;\n      var onDrop = _this.props.onDrop;\n      var _node$props3 = node.props,\n          eventKey = _node$props3.eventKey,\n          pos = _node$props3.pos;\n\n      _this.setState({\n        dragOverNodeKey: ''\n      });\n\n      if (dragNodesKeys.indexOf(eventKey) !== -1) {\n        warning(false, \"Can not drop to dragNode(include it's children node)\");\n        return;\n      }\n\n      var posArr = posToArr(pos);\n      var dropResult = {\n        event: event,\n        node: node,\n        dragNode: _this.dragNode,\n        dragNodesKeys: dragNodesKeys.slice(),\n        dropPosition: dropPosition + Number(posArr[posArr.length - 1]),\n        dropToGap: false\n      };\n\n      if (dropPosition !== 0) {\n        dropResult.dropToGap = true;\n      }\n\n      if (onDrop) {\n        onDrop(dropResult);\n      }\n\n      _this.dragNode = null;\n    };\n\n    _this.onNodeClick = function (e, treeNode) {\n      var onClick = _this.props.onClick;\n\n      if (onClick) {\n        onClick(e, treeNode);\n      }\n    };\n\n    _this.onNodeDoubleClick = function (e, treeNode) {\n      var onDoubleClick = _this.props.onDoubleClick;\n\n      if (onDoubleClick) {\n        onDoubleClick(e, treeNode);\n      }\n    };\n\n    _this.onNodeSelect = function (e, treeNode) {\n      var selectedKeys = _this.state.selectedKeys;\n      var keyEntities = _this.state.keyEntities;\n      var _this$props = _this.props,\n          onSelect = _this$props.onSelect,\n          multiple = _this$props.multiple;\n      var _treeNode$props = treeNode.props,\n          selected = _treeNode$props.selected,\n          eventKey = _treeNode$props.eventKey;\n      var targetSelected = !selected; // Update selected keys\n\n      if (!targetSelected) {\n        selectedKeys = arrDel(selectedKeys, eventKey);\n      } else if (!multiple) {\n        selectedKeys = [eventKey];\n      } else {\n        selectedKeys = arrAdd(selectedKeys, eventKey);\n      } // [Legacy] Not found related usage in doc or upper libs\n\n\n      var selectedNodes = selectedKeys.map(function (key) {\n        var entity = keyEntities[key];\n        if (!entity) return null;\n        return entity.node;\n      }).filter(function (node) {\n        return node;\n      });\n\n      _this.setUncontrolledState({\n        selectedKeys: selectedKeys\n      });\n\n      if (onSelect) {\n        onSelect(selectedKeys, {\n          event: 'select',\n          selected: targetSelected,\n          node: treeNode,\n          selectedNodes: selectedNodes,\n          nativeEvent: e.nativeEvent\n        });\n      }\n    };\n\n    _this.onNodeCheck = function (e, treeNode, checked) {\n      var _this$state3 = _this.state,\n          keyEntities = _this$state3.keyEntities,\n          oriCheckedKeys = _this$state3.checkedKeys,\n          oriHalfCheckedKeys = _this$state3.halfCheckedKeys;\n      var _this$props2 = _this.props,\n          checkStrictly = _this$props2.checkStrictly,\n          onCheck = _this$props2.onCheck;\n      var eventKey = treeNode.props.eventKey; // Prepare trigger arguments\n\n      var checkedObj;\n      var eventObj = {\n        event: 'check',\n        node: treeNode,\n        checked: checked,\n        nativeEvent: e.nativeEvent\n      };\n\n      if (checkStrictly) {\n        var checkedKeys = checked ? arrAdd(oriCheckedKeys, eventKey) : arrDel(oriCheckedKeys, eventKey);\n        var halfCheckedKeys = arrDel(oriHalfCheckedKeys, eventKey);\n        checkedObj = {\n          checked: checkedKeys,\n          halfChecked: halfCheckedKeys\n        };\n        eventObj.checkedNodes = checkedKeys.map(function (key) {\n          return keyEntities[key];\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (entity) {\n          return entity.node;\n        });\n\n        _this.setUncontrolledState({\n          checkedKeys: checkedKeys\n        });\n      } else {\n        var _conductCheck = conductCheck([eventKey], checked, keyEntities, {\n          checkedKeys: oriCheckedKeys,\n          halfCheckedKeys: oriHalfCheckedKeys\n        }),\n            _checkedKeys = _conductCheck.checkedKeys,\n            _halfCheckedKeys = _conductCheck.halfCheckedKeys;\n\n        checkedObj = _checkedKeys; // [Legacy] This is used for `rc-tree-select`\n\n        eventObj.checkedNodes = [];\n        eventObj.checkedNodesPositions = [];\n        eventObj.halfCheckedKeys = _halfCheckedKeys;\n\n        _checkedKeys.forEach(function (key) {\n          var entity = keyEntities[key];\n          if (!entity) return;\n          var node = entity.node,\n              pos = entity.pos;\n          eventObj.checkedNodes.push(node);\n          eventObj.checkedNodesPositions.push({\n            node: node,\n            pos: pos\n          });\n        });\n\n        _this.setUncontrolledState({\n          checkedKeys: _checkedKeys,\n          halfCheckedKeys: _halfCheckedKeys\n        });\n      }\n\n      if (onCheck) {\n        onCheck(checkedObj, eventObj);\n      }\n    };\n\n    _this.onNodeLoad = function (treeNode) {\n      return new Promise(function (resolve) {\n        // We need to get the latest state of loading/loaded keys\n        _this.setState(function (_ref) {\n          var _ref$loadedKeys = _ref.loadedKeys,\n              loadedKeys = _ref$loadedKeys === void 0 ? [] : _ref$loadedKeys,\n              _ref$loadingKeys = _ref.loadingKeys,\n              loadingKeys = _ref$loadingKeys === void 0 ? [] : _ref$loadingKeys;\n          var _this$props3 = _this.props,\n              loadData = _this$props3.loadData,\n              onLoad = _this$props3.onLoad;\n          var eventKey = treeNode.props.eventKey;\n\n          if (!loadData || loadedKeys.indexOf(eventKey) !== -1 || loadingKeys.indexOf(eventKey) !== -1) {\n            // react 15 will warn if return null\n            return {};\n          } // Process load data\n\n\n          var promise = loadData(treeNode);\n          promise.then(function () {\n            var _this$state4 = _this.state,\n                currentLoadedKeys = _this$state4.loadedKeys,\n                currentLoadingKeys = _this$state4.loadingKeys;\n            var newLoadedKeys = arrAdd(currentLoadedKeys, eventKey);\n            var newLoadingKeys = arrDel(currentLoadingKeys, eventKey); // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n            // https://github.com/ant-design/ant-design/issues/12464\n\n            if (onLoad) {\n              onLoad(newLoadedKeys, {\n                event: 'load',\n                node: treeNode\n              });\n            }\n\n            _this.setUncontrolledState({\n              loadedKeys: newLoadedKeys\n            });\n\n            _this.setState({\n              loadingKeys: newLoadingKeys\n            });\n\n            resolve();\n          });\n          return {\n            loadingKeys: arrAdd(loadingKeys, eventKey)\n          };\n        });\n      });\n    };\n\n    _this.onNodeExpand = function (e, treeNode) {\n      var expandedKeys = _this.state.expandedKeys;\n      var _this$props4 = _this.props,\n          onExpand = _this$props4.onExpand,\n          loadData = _this$props4.loadData;\n      var _treeNode$props2 = treeNode.props,\n          eventKey = _treeNode$props2.eventKey,\n          expanded = _treeNode$props2.expanded; // Update selected keys\n\n      var index = expandedKeys.indexOf(eventKey);\n      var targetExpanded = !expanded;\n      warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n\n      if (targetExpanded) {\n        expandedKeys = arrAdd(expandedKeys, eventKey);\n      } else {\n        expandedKeys = arrDel(expandedKeys, eventKey);\n      }\n\n      _this.setUncontrolledState({\n        expandedKeys: expandedKeys\n      });\n\n      if (onExpand) {\n        onExpand(expandedKeys, {\n          node: treeNode,\n          expanded: targetExpanded,\n          nativeEvent: e.nativeEvent\n        });\n      } // Async Load data\n\n\n      if (targetExpanded && loadData) {\n        var loadPromise = _this.onNodeLoad(treeNode);\n\n        return loadPromise ? loadPromise.then(function () {\n          // [Legacy] Refresh logic\n          _this.setUncontrolledState({\n            expandedKeys: expandedKeys\n          });\n        }) : null;\n      }\n\n      return null;\n    };\n\n    _this.onNodeMouseEnter = function (event, node) {\n      var onMouseEnter = _this.props.onMouseEnter;\n\n      if (onMouseEnter) {\n        onMouseEnter({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onNodeMouseLeave = function (event, node) {\n      var onMouseLeave = _this.props.onMouseLeave;\n\n      if (onMouseLeave) {\n        onMouseLeave({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onNodeContextMenu = function (event, node) {\n      var onRightClick = _this.props.onRightClick;\n\n      if (onRightClick) {\n        event.preventDefault();\n        onRightClick({\n          event: event,\n          node: node\n        });\n      }\n    };\n    /**\n     * Only update the value which is not in props\n     */\n\n\n    _this.setUncontrolledState = function (state) {\n      var needSync = false;\n      var newState = {};\n      Object.keys(state).forEach(function (name) {\n        if (name in _this.props) return;\n        needSync = true;\n        newState[name] = state[name];\n      });\n\n      if (needSync) {\n        _this.setState(newState);\n      }\n    };\n\n    _this.registerTreeNode = function (key, node) {\n      if (node) {\n        _this.domTreeNodes[key] = node;\n      } else {\n        delete _this.domTreeNodes[key];\n      }\n    };\n\n    _this.isKeyChecked = function (key) {\n      var _this$state$checkedKe = _this.state.checkedKeys,\n          checkedKeys = _this$state$checkedKe === void 0 ? [] : _this$state$checkedKe;\n      return checkedKeys.indexOf(key) !== -1;\n    };\n    /**\n     * [Legacy] Original logic use `key` as tracking clue.\n     * We have to use `cloneElement` to pass `key`.\n     */\n\n\n    _this.renderTreeNode = function (child, index) {\n      var level = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var _this$state5 = _this.state,\n          keyEntities = _this$state5.keyEntities,\n          _this$state5$expanded = _this$state5.expandedKeys,\n          expandedKeys = _this$state5$expanded === void 0 ? [] : _this$state5$expanded,\n          _this$state5$selected = _this$state5.selectedKeys,\n          selectedKeys = _this$state5$selected === void 0 ? [] : _this$state5$selected,\n          _this$state5$halfChec = _this$state5.halfCheckedKeys,\n          halfCheckedKeys = _this$state5$halfChec === void 0 ? [] : _this$state5$halfChec,\n          _this$state5$loadedKe = _this$state5.loadedKeys,\n          loadedKeys = _this$state5$loadedKe === void 0 ? [] : _this$state5$loadedKe,\n          _this$state5$loadingK = _this$state5.loadingKeys,\n          loadingKeys = _this$state5$loadingK === void 0 ? [] : _this$state5$loadingK,\n          dragOverNodeKey = _this$state5.dragOverNodeKey,\n          dropPosition = _this$state5.dropPosition;\n      var pos = getPosition(level, index);\n      var key = child.key || pos;\n\n      if (!keyEntities[key]) {\n        warnOnlyTreeNode();\n        return null;\n      }\n\n      return React.cloneElement(child, {\n        key: key,\n        eventKey: key,\n        expanded: expandedKeys.indexOf(key) !== -1,\n        selected: selectedKeys.indexOf(key) !== -1,\n        loaded: loadedKeys.indexOf(key) !== -1,\n        loading: loadingKeys.indexOf(key) !== -1,\n        checked: _this.isKeyChecked(key),\n        halfChecked: halfCheckedKeys.indexOf(key) !== -1,\n        pos: pos,\n        // [Legacy] Drag props\n        dragOver: dragOverNodeKey === key && dropPosition === 0,\n        dragOverGapTop: dragOverNodeKey === key && dropPosition === -1,\n        dragOverGapBottom: dragOverNodeKey === key && dropPosition === 1\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Tree, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var treeNode = this.state.treeNode;\n      var _this$props5 = this.props,\n          prefixCls = _this$props5.prefixCls,\n          className = _this$props5.className,\n          focusable = _this$props5.focusable,\n          style = _this$props5.style,\n          showLine = _this$props5.showLine,\n          _this$props5$tabIndex = _this$props5.tabIndex,\n          tabIndex = _this$props5$tabIndex === void 0 ? 0 : _this$props5$tabIndex,\n          selectable = _this$props5.selectable,\n          showIcon = _this$props5.showIcon,\n          icon = _this$props5.icon,\n          switcherIcon = _this$props5.switcherIcon,\n          draggable = _this$props5.draggable,\n          checkable = _this$props5.checkable,\n          checkStrictly = _this$props5.checkStrictly,\n          disabled = _this$props5.disabled,\n          motion = _this$props5.motion,\n          loadData = _this$props5.loadData,\n          filterTreeNode = _this$props5.filterTreeNode;\n      var domProps = getDataAndAria(this.props);\n\n      if (focusable) {\n        domProps.tabIndex = tabIndex;\n      }\n\n      return React.createElement(TreeContext.Provider, {\n        value: {\n          prefixCls: prefixCls,\n          selectable: selectable,\n          showIcon: showIcon,\n          icon: icon,\n          switcherIcon: switcherIcon,\n          draggable: draggable,\n          checkable: checkable,\n          checkStrictly: checkStrictly,\n          disabled: disabled,\n          motion: motion,\n          loadData: loadData,\n          filterTreeNode: filterTreeNode,\n          renderTreeNode: this.renderTreeNode,\n          isKeyChecked: this.isKeyChecked,\n          onNodeClick: this.onNodeClick,\n          onNodeDoubleClick: this.onNodeDoubleClick,\n          onNodeExpand: this.onNodeExpand,\n          onNodeSelect: this.onNodeSelect,\n          onNodeCheck: this.onNodeCheck,\n          onNodeLoad: this.onNodeLoad,\n          onNodeMouseEnter: this.onNodeMouseEnter,\n          onNodeMouseLeave: this.onNodeMouseLeave,\n          onNodeContextMenu: this.onNodeContextMenu,\n          onNodeDragStart: this.onNodeDragStart,\n          onNodeDragEnter: this.onNodeDragEnter,\n          onNodeDragOver: this.onNodeDragOver,\n          onNodeDragLeave: this.onNodeDragLeave,\n          onNodeDragEnd: this.onNodeDragEnd,\n          onNodeDrop: this.onNodeDrop,\n          registerTreeNode: this.registerTreeNode\n        }\n      }, React.createElement(\"ul\", Object.assign({}, domProps, {\n        className: classNames(prefixCls, className, _defineProperty({}, \"\".concat(prefixCls, \"-show-line\"), showLine)),\n        style: style,\n        role: \"tree\",\n        unselectable: \"on\"\n      }), mapChildren(treeNode, function (node, index) {\n        return _this2.renderTreeNode(node, index);\n      })));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, prevState) {\n      var prevProps = prevState.prevProps;\n      var newState = {\n        prevProps: props\n      };\n\n      function needSync(name) {\n        return !prevProps && name in props || prevProps && prevProps[name] !== props[name];\n      } // ================== Tree Node ==================\n\n\n      var treeNode = null; // Check if `treeData` or `children` changed and save into the state.\n\n      if (needSync('treeData')) {\n        treeNode = convertDataToTree(props.treeData);\n      } else if (needSync('children')) {\n        treeNode = toArray(props.children);\n      } // Tree support filter function which will break the tree structure in the vdm.\n      // We cache the treeNodes in state so that we can return the treeNode in event trigger.\n\n\n      if (treeNode) {\n        newState.treeNode = treeNode; // Calculate the entities data for quick match\n\n        var entitiesMap = convertTreeToEntities(treeNode);\n        newState.keyEntities = entitiesMap.keyEntities;\n      }\n\n      var keyEntities = newState.keyEntities || prevState.keyEntities; // ================ expandedKeys =================\n\n      if (needSync('expandedKeys') || prevProps && needSync('autoExpandParent')) {\n        newState.expandedKeys = props.autoExpandParent || !prevProps && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities) : props.expandedKeys;\n      } else if (!prevProps && props.defaultExpandAll) {\n        newState.expandedKeys = Object.keys(keyEntities);\n      } else if (!prevProps && props.defaultExpandedKeys) {\n        newState.expandedKeys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities) : props.defaultExpandedKeys;\n      } // ================ selectedKeys =================\n\n\n      if (props.selectable) {\n        if (needSync('selectedKeys')) {\n          newState.selectedKeys = calcSelectedKeys(props.selectedKeys, props);\n        } else if (!prevProps && props.defaultSelectedKeys) {\n          newState.selectedKeys = calcSelectedKeys(props.defaultSelectedKeys, props);\n        }\n      } // ================= checkedKeys =================\n\n\n      if (props.checkable) {\n        var checkedKeyEntity;\n\n        if (needSync('checkedKeys')) {\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n        } else if (!prevProps && props.defaultCheckedKeys) {\n          checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n        } else if (treeNode) {\n          // If treeNode changed, we also need check it\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n            checkedKeys: prevState.checkedKeys,\n            halfCheckedKeys: prevState.halfCheckedKeys\n          };\n        }\n\n        if (checkedKeyEntity) {\n          var _checkedKeyEntity = checkedKeyEntity,\n              _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n              checkedKeys = _checkedKeyEntity$che === void 0 ? [] : _checkedKeyEntity$che,\n              _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n              halfCheckedKeys = _checkedKeyEntity$hal === void 0 ? [] : _checkedKeyEntity$hal;\n\n          if (!props.checkStrictly) {\n            var conductKeys = conductCheck(checkedKeys, true, keyEntities);\n            checkedKeys = conductKeys.checkedKeys;\n            halfCheckedKeys = conductKeys.halfCheckedKeys;\n          }\n\n          newState.checkedKeys = checkedKeys;\n          newState.halfCheckedKeys = halfCheckedKeys;\n        }\n      } // ================= loadedKeys ==================\n\n\n      if (needSync('loadedKeys')) {\n        newState.loadedKeys = props.loadedKeys;\n      }\n\n      return newState;\n    }\n  }]);\n\n  return Tree;\n}(React.Component);\n\nTree.propTypes = {\n  prefixCls: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  tabIndex: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  children: PropTypes.any,\n  treeData: PropTypes.array,\n  showLine: PropTypes.bool,\n  showIcon: PropTypes.bool,\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  focusable: PropTypes.bool,\n  selectable: PropTypes.bool,\n  disabled: PropTypes.bool,\n  multiple: PropTypes.bool,\n  checkable: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  checkStrictly: PropTypes.bool,\n  draggable: PropTypes.bool,\n  defaultExpandParent: PropTypes.bool,\n  autoExpandParent: PropTypes.bool,\n  defaultExpandAll: PropTypes.bool,\n  defaultExpandedKeys: PropTypes.arrayOf(PropTypes.string),\n  expandedKeys: PropTypes.arrayOf(PropTypes.string),\n  defaultCheckedKeys: PropTypes.arrayOf(PropTypes.string),\n  checkedKeys: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])), PropTypes.object]),\n  defaultSelectedKeys: PropTypes.arrayOf(PropTypes.string),\n  selectedKeys: PropTypes.arrayOf(PropTypes.string),\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onExpand: PropTypes.func,\n  onCheck: PropTypes.func,\n  onSelect: PropTypes.func,\n  onLoad: PropTypes.func,\n  loadData: PropTypes.func,\n  loadedKeys: PropTypes.arrayOf(PropTypes.string),\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onRightClick: PropTypes.func,\n  onDragStart: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onDragLeave: PropTypes.func,\n  onDragEnd: PropTypes.func,\n  onDrop: PropTypes.func,\n  filterTreeNode: PropTypes.func,\n  motion: PropTypes.object,\n  switcherIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func])\n};\nTree.defaultProps = {\n  prefixCls: 'rc-tree',\n  showLine: false,\n  showIcon: true,\n  selectable: true,\n  multiple: false,\n  checkable: false,\n  disabled: false,\n  checkStrictly: false,\n  draggable: false,\n  defaultExpandParent: true,\n  autoExpandParent: false,\n  defaultExpandAll: false,\n  defaultExpandedKeys: [],\n  defaultCheckedKeys: [],\n  defaultSelectedKeys: []\n};\npolyfill(Tree);\nexport default Tree;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}