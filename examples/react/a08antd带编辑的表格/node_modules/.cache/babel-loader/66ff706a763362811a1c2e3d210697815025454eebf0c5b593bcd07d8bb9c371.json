{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule RichTextEditorUtil\n * @format\n * \n */\n\n'use strict';\n\nvar DraftModifier = require('./DraftModifier');\nvar EditorState = require('./EditorState');\nvar SelectionState = require('./SelectionState');\nvar adjustBlockDepthForContentState = require('./adjustBlockDepthForContentState');\nvar nullthrows = require('fbjs/lib/nullthrows');\nvar RichTextEditorUtil = {\n  currentBlockContainsLink: function currentBlockContainsLink(editorState) {\n    var selection = editorState.getSelection();\n    var contentState = editorState.getCurrentContent();\n    var entityMap = contentState.getEntityMap();\n    return contentState.getBlockForKey(selection.getAnchorKey()).getCharacterList().slice(selection.getStartOffset(), selection.getEndOffset()).some(function (v) {\n      var entity = v.getEntity();\n      return !!entity && entityMap.__get(entity).getType() === 'LINK';\n    });\n  },\n  getCurrentBlockType: function getCurrentBlockType(editorState) {\n    var selection = editorState.getSelection();\n    return editorState.getCurrentContent().getBlockForKey(selection.getStartKey()).getType();\n  },\n  getDataObjectForLinkURL: function getDataObjectForLinkURL(uri) {\n    return {\n      url: uri.toString()\n    };\n  },\n  handleKeyCommand: function handleKeyCommand(editorState, command) {\n    switch (command) {\n      case 'bold':\n        return RichTextEditorUtil.toggleInlineStyle(editorState, 'BOLD');\n      case 'italic':\n        return RichTextEditorUtil.toggleInlineStyle(editorState, 'ITALIC');\n      case 'underline':\n        return RichTextEditorUtil.toggleInlineStyle(editorState, 'UNDERLINE');\n      case 'code':\n        return RichTextEditorUtil.toggleCode(editorState);\n      case 'backspace':\n      case 'backspace-word':\n      case 'backspace-to-start-of-line':\n        return RichTextEditorUtil.onBackspace(editorState);\n      case 'delete':\n      case 'delete-word':\n      case 'delete-to-end-of-block':\n        return RichTextEditorUtil.onDelete(editorState);\n      default:\n        // they may have custom editor commands; ignore those\n        return null;\n    }\n  },\n  insertSoftNewline: function insertSoftNewline(editorState) {\n    var contentState = DraftModifier.insertText(editorState.getCurrentContent(), editorState.getSelection(), '\\n', editorState.getCurrentInlineStyle(), null);\n    var newEditorState = EditorState.push(editorState, contentState, 'insert-characters');\n    return EditorState.forceSelection(newEditorState, contentState.getSelectionAfter());\n  },\n  /**\n   * For collapsed selections at the start of styled blocks, backspace should\n   * just remove the existing style.\n   */\n  onBackspace: function onBackspace(editorState) {\n    var selection = editorState.getSelection();\n    if (!selection.isCollapsed() || selection.getAnchorOffset() || selection.getFocusOffset()) {\n      return null;\n    }\n\n    // First, try to remove a preceding atomic block.\n    var content = editorState.getCurrentContent();\n    var startKey = selection.getStartKey();\n    var blockBefore = content.getBlockBefore(startKey);\n    if (blockBefore && blockBefore.getType() === 'atomic') {\n      var blockMap = content.getBlockMap()['delete'](blockBefore.getKey());\n      var withoutAtomicBlock = content.merge({\n        blockMap: blockMap,\n        selectionAfter: selection\n      });\n      if (withoutAtomicBlock !== content) {\n        return EditorState.push(editorState, withoutAtomicBlock, 'remove-range');\n      }\n    }\n\n    // If that doesn't succeed, try to remove the current block style.\n    var withoutBlockStyle = RichTextEditorUtil.tryToRemoveBlockStyle(editorState);\n    if (withoutBlockStyle) {\n      return EditorState.push(editorState, withoutBlockStyle, 'change-block-type');\n    }\n    return null;\n  },\n  onDelete: function onDelete(editorState) {\n    var selection = editorState.getSelection();\n    if (!selection.isCollapsed()) {\n      return null;\n    }\n    var content = editorState.getCurrentContent();\n    var startKey = selection.getStartKey();\n    var block = content.getBlockForKey(startKey);\n    var length = block.getLength();\n\n    // The cursor is somewhere within the text. Behave normally.\n    if (selection.getStartOffset() < length) {\n      return null;\n    }\n    var blockAfter = content.getBlockAfter(startKey);\n    if (!blockAfter || blockAfter.getType() !== 'atomic') {\n      return null;\n    }\n    var atomicBlockTarget = selection.merge({\n      focusKey: blockAfter.getKey(),\n      focusOffset: blockAfter.getLength()\n    });\n    var withoutAtomicBlock = DraftModifier.removeRange(content, atomicBlockTarget, 'forward');\n    if (withoutAtomicBlock !== content) {\n      return EditorState.push(editorState, withoutAtomicBlock, 'remove-range');\n    }\n    return null;\n  },\n  onTab: function onTab(event, editorState, maxDepth) {\n    var selection = editorState.getSelection();\n    var key = selection.getAnchorKey();\n    if (key !== selection.getFocusKey()) {\n      return editorState;\n    }\n    var content = editorState.getCurrentContent();\n    var block = content.getBlockForKey(key);\n    var type = block.getType();\n    if (type !== 'unordered-list-item' && type !== 'ordered-list-item') {\n      return editorState;\n    }\n    event.preventDefault();\n\n    // Only allow indenting one level beyond the block above, and only if\n    // the block above is a list item as well.\n    var blockAbove = content.getBlockBefore(key);\n    if (!blockAbove) {\n      return editorState;\n    }\n    var typeAbove = blockAbove.getType();\n    if (typeAbove !== 'unordered-list-item' && typeAbove !== 'ordered-list-item') {\n      return editorState;\n    }\n    var depth = block.getDepth();\n    if (!event.shiftKey && depth === maxDepth) {\n      return editorState;\n    }\n    maxDepth = Math.min(blockAbove.getDepth() + 1, maxDepth);\n    var withAdjustment = adjustBlockDepthForContentState(content, selection, event.shiftKey ? -1 : 1, maxDepth);\n    return EditorState.push(editorState, withAdjustment, 'adjust-depth');\n  },\n  toggleBlockType: function toggleBlockType(editorState, blockType) {\n    var selection = editorState.getSelection();\n    var startKey = selection.getStartKey();\n    var endKey = selection.getEndKey();\n    var content = editorState.getCurrentContent();\n    var target = selection;\n\n    // Triple-click can lead to a selection that includes offset 0 of the\n    // following block. The `SelectionState` for this case is accurate, but\n    // we should avoid toggling block type for the trailing block because it\n    // is a confusing interaction.\n    if (startKey !== endKey && selection.getEndOffset() === 0) {\n      var blockBefore = nullthrows(content.getBlockBefore(endKey));\n      endKey = blockBefore.getKey();\n      target = target.merge({\n        anchorKey: startKey,\n        anchorOffset: selection.getStartOffset(),\n        focusKey: endKey,\n        focusOffset: blockBefore.getLength(),\n        isBackward: false\n      });\n    }\n    var hasAtomicBlock = content.getBlockMap().skipWhile(function (_, k) {\n      return k !== startKey;\n    }).reverse().skipWhile(function (_, k) {\n      return k !== endKey;\n    }).some(function (v) {\n      return v.getType() === 'atomic';\n    });\n    if (hasAtomicBlock) {\n      return editorState;\n    }\n    var typeToSet = content.getBlockForKey(startKey).getType() === blockType ? 'unstyled' : blockType;\n    return EditorState.push(editorState, DraftModifier.setBlockType(content, target, typeToSet), 'change-block-type');\n  },\n  toggleCode: function toggleCode(editorState) {\n    var selection = editorState.getSelection();\n    var anchorKey = selection.getAnchorKey();\n    var focusKey = selection.getFocusKey();\n    if (selection.isCollapsed() || anchorKey !== focusKey) {\n      return RichTextEditorUtil.toggleBlockType(editorState, 'code-block');\n    }\n    return RichTextEditorUtil.toggleInlineStyle(editorState, 'CODE');\n  },\n  /**\n   * Toggle the specified inline style for the selection. If the\n   * user's selection is collapsed, apply or remove the style for the\n   * internal state. If it is not collapsed, apply the change directly\n   * to the document state.\n   */\n  toggleInlineStyle: function toggleInlineStyle(editorState, inlineStyle) {\n    var selection = editorState.getSelection();\n    var currentStyle = editorState.getCurrentInlineStyle();\n\n    // If the selection is collapsed, toggle the specified style on or off and\n    // set the result as the new inline style override. This will then be\n    // used as the inline style for the next character to be inserted.\n    if (selection.isCollapsed()) {\n      return EditorState.setInlineStyleOverride(editorState, currentStyle.has(inlineStyle) ? currentStyle.remove(inlineStyle) : currentStyle.add(inlineStyle));\n    }\n\n    // If characters are selected, immediately apply or remove the\n    // inline style on the document state itself.\n    var content = editorState.getCurrentContent();\n    var newContent;\n\n    // If the style is already present for the selection range, remove it.\n    // Otherwise, apply it.\n    if (currentStyle.has(inlineStyle)) {\n      newContent = DraftModifier.removeInlineStyle(content, selection, inlineStyle);\n    } else {\n      newContent = DraftModifier.applyInlineStyle(content, selection, inlineStyle);\n    }\n    return EditorState.push(editorState, newContent, 'change-inline-style');\n  },\n  toggleLink: function toggleLink(editorState, targetSelection, entityKey) {\n    var withoutLink = DraftModifier.applyEntity(editorState.getCurrentContent(), targetSelection, entityKey);\n    return EditorState.push(editorState, withoutLink, 'apply-entity');\n  },\n  /**\n   * When a collapsed cursor is at the start of the first styled block, or\n   * an empty styled block, changes block to 'unstyled'. Returns null if\n   * block or selection does not meet that criteria.\n   */\n  tryToRemoveBlockStyle: function tryToRemoveBlockStyle(editorState) {\n    var selection = editorState.getSelection();\n    var offset = selection.getAnchorOffset();\n    if (selection.isCollapsed() && offset === 0) {\n      var key = selection.getAnchorKey();\n      var content = editorState.getCurrentContent();\n      var block = content.getBlockForKey(key);\n      var firstBlock = content.getFirstBlock();\n      if (block.getLength() > 0 && block !== firstBlock) {\n        return null;\n      }\n      var type = block.getType();\n      var blockBefore = content.getBlockBefore(key);\n      if (type === 'code-block' && blockBefore && blockBefore.getType() === 'code-block' && blockBefore.getLength() !== 0) {\n        return null;\n      }\n      if (type !== 'unstyled') {\n        return DraftModifier.setBlockType(content, selection, 'unstyled');\n      }\n    }\n    return null;\n  }\n};\nmodule.exports = RichTextEditorUtil;","map":{"version":3,"names":["DraftModifier","require","EditorState","SelectionState","adjustBlockDepthForContentState","nullthrows","RichTextEditorUtil","currentBlockContainsLink","editorState","selection","getSelection","contentState","getCurrentContent","entityMap","getEntityMap","getBlockForKey","getAnchorKey","getCharacterList","slice","getStartOffset","getEndOffset","some","v","entity","getEntity","__get","getType","getCurrentBlockType","getStartKey","getDataObjectForLinkURL","uri","url","toString","handleKeyCommand","command","toggleInlineStyle","toggleCode","onBackspace","onDelete","insertSoftNewline","insertText","getCurrentInlineStyle","newEditorState","push","forceSelection","getSelectionAfter","isCollapsed","getAnchorOffset","getFocusOffset","content","startKey","blockBefore","getBlockBefore","blockMap","getBlockMap","getKey","withoutAtomicBlock","merge","selectionAfter","withoutBlockStyle","tryToRemoveBlockStyle","block","length","getLength","blockAfter","getBlockAfter","atomicBlockTarget","focusKey","focusOffset","removeRange","onTab","event","maxDepth","key","getFocusKey","type","preventDefault","blockAbove","typeAbove","depth","getDepth","shiftKey","Math","min","withAdjustment","toggleBlockType","blockType","endKey","getEndKey","target","anchorKey","anchorOffset","isBackward","hasAtomicBlock","skipWhile","_","k","reverse","typeToSet","setBlockType","inlineStyle","currentStyle","setInlineStyleOverride","has","remove","add","newContent","removeInlineStyle","applyInlineStyle","toggleLink","targetSelection","entityKey","withoutLink","applyEntity","offset","firstBlock","getFirstBlock","module","exports"],"sources":["/Users/zhangqiang/Documents/GitHub/frontEnd-all-knowledge/examples/react/a08antd带编辑的表格/node_modules/rc-editor-core/node_modules/draft-js/lib/RichTextEditorUtil.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule RichTextEditorUtil\n * @format\n * \n */\n\n'use strict';\n\nvar DraftModifier = require('./DraftModifier');\nvar EditorState = require('./EditorState');\nvar SelectionState = require('./SelectionState');\n\nvar adjustBlockDepthForContentState = require('./adjustBlockDepthForContentState');\nvar nullthrows = require('fbjs/lib/nullthrows');\n\nvar RichTextEditorUtil = {\n  currentBlockContainsLink: function currentBlockContainsLink(editorState) {\n    var selection = editorState.getSelection();\n    var contentState = editorState.getCurrentContent();\n    var entityMap = contentState.getEntityMap();\n    return contentState.getBlockForKey(selection.getAnchorKey()).getCharacterList().slice(selection.getStartOffset(), selection.getEndOffset()).some(function (v) {\n      var entity = v.getEntity();\n      return !!entity && entityMap.__get(entity).getType() === 'LINK';\n    });\n  },\n\n  getCurrentBlockType: function getCurrentBlockType(editorState) {\n    var selection = editorState.getSelection();\n    return editorState.getCurrentContent().getBlockForKey(selection.getStartKey()).getType();\n  },\n\n  getDataObjectForLinkURL: function getDataObjectForLinkURL(uri) {\n    return { url: uri.toString() };\n  },\n\n  handleKeyCommand: function handleKeyCommand(editorState, command) {\n    switch (command) {\n      case 'bold':\n        return RichTextEditorUtil.toggleInlineStyle(editorState, 'BOLD');\n      case 'italic':\n        return RichTextEditorUtil.toggleInlineStyle(editorState, 'ITALIC');\n      case 'underline':\n        return RichTextEditorUtil.toggleInlineStyle(editorState, 'UNDERLINE');\n      case 'code':\n        return RichTextEditorUtil.toggleCode(editorState);\n      case 'backspace':\n      case 'backspace-word':\n      case 'backspace-to-start-of-line':\n        return RichTextEditorUtil.onBackspace(editorState);\n      case 'delete':\n      case 'delete-word':\n      case 'delete-to-end-of-block':\n        return RichTextEditorUtil.onDelete(editorState);\n      default:\n        // they may have custom editor commands; ignore those\n        return null;\n    }\n  },\n\n  insertSoftNewline: function insertSoftNewline(editorState) {\n    var contentState = DraftModifier.insertText(editorState.getCurrentContent(), editorState.getSelection(), '\\n', editorState.getCurrentInlineStyle(), null);\n\n    var newEditorState = EditorState.push(editorState, contentState, 'insert-characters');\n\n    return EditorState.forceSelection(newEditorState, contentState.getSelectionAfter());\n  },\n\n  /**\n   * For collapsed selections at the start of styled blocks, backspace should\n   * just remove the existing style.\n   */\n  onBackspace: function onBackspace(editorState) {\n    var selection = editorState.getSelection();\n    if (!selection.isCollapsed() || selection.getAnchorOffset() || selection.getFocusOffset()) {\n      return null;\n    }\n\n    // First, try to remove a preceding atomic block.\n    var content = editorState.getCurrentContent();\n    var startKey = selection.getStartKey();\n    var blockBefore = content.getBlockBefore(startKey);\n\n    if (blockBefore && blockBefore.getType() === 'atomic') {\n      var blockMap = content.getBlockMap()['delete'](blockBefore.getKey());\n      var withoutAtomicBlock = content.merge({\n        blockMap: blockMap,\n        selectionAfter: selection\n      });\n      if (withoutAtomicBlock !== content) {\n        return EditorState.push(editorState, withoutAtomicBlock, 'remove-range');\n      }\n    }\n\n    // If that doesn't succeed, try to remove the current block style.\n    var withoutBlockStyle = RichTextEditorUtil.tryToRemoveBlockStyle(editorState);\n\n    if (withoutBlockStyle) {\n      return EditorState.push(editorState, withoutBlockStyle, 'change-block-type');\n    }\n\n    return null;\n  },\n\n  onDelete: function onDelete(editorState) {\n    var selection = editorState.getSelection();\n    if (!selection.isCollapsed()) {\n      return null;\n    }\n\n    var content = editorState.getCurrentContent();\n    var startKey = selection.getStartKey();\n    var block = content.getBlockForKey(startKey);\n    var length = block.getLength();\n\n    // The cursor is somewhere within the text. Behave normally.\n    if (selection.getStartOffset() < length) {\n      return null;\n    }\n\n    var blockAfter = content.getBlockAfter(startKey);\n\n    if (!blockAfter || blockAfter.getType() !== 'atomic') {\n      return null;\n    }\n\n    var atomicBlockTarget = selection.merge({\n      focusKey: blockAfter.getKey(),\n      focusOffset: blockAfter.getLength()\n    });\n\n    var withoutAtomicBlock = DraftModifier.removeRange(content, atomicBlockTarget, 'forward');\n\n    if (withoutAtomicBlock !== content) {\n      return EditorState.push(editorState, withoutAtomicBlock, 'remove-range');\n    }\n\n    return null;\n  },\n\n  onTab: function onTab(event, editorState, maxDepth) {\n    var selection = editorState.getSelection();\n    var key = selection.getAnchorKey();\n    if (key !== selection.getFocusKey()) {\n      return editorState;\n    }\n\n    var content = editorState.getCurrentContent();\n    var block = content.getBlockForKey(key);\n    var type = block.getType();\n    if (type !== 'unordered-list-item' && type !== 'ordered-list-item') {\n      return editorState;\n    }\n\n    event.preventDefault();\n\n    // Only allow indenting one level beyond the block above, and only if\n    // the block above is a list item as well.\n    var blockAbove = content.getBlockBefore(key);\n    if (!blockAbove) {\n      return editorState;\n    }\n\n    var typeAbove = blockAbove.getType();\n    if (typeAbove !== 'unordered-list-item' && typeAbove !== 'ordered-list-item') {\n      return editorState;\n    }\n\n    var depth = block.getDepth();\n    if (!event.shiftKey && depth === maxDepth) {\n      return editorState;\n    }\n\n    maxDepth = Math.min(blockAbove.getDepth() + 1, maxDepth);\n\n    var withAdjustment = adjustBlockDepthForContentState(content, selection, event.shiftKey ? -1 : 1, maxDepth);\n\n    return EditorState.push(editorState, withAdjustment, 'adjust-depth');\n  },\n\n  toggleBlockType: function toggleBlockType(editorState, blockType) {\n    var selection = editorState.getSelection();\n    var startKey = selection.getStartKey();\n    var endKey = selection.getEndKey();\n    var content = editorState.getCurrentContent();\n    var target = selection;\n\n    // Triple-click can lead to a selection that includes offset 0 of the\n    // following block. The `SelectionState` for this case is accurate, but\n    // we should avoid toggling block type for the trailing block because it\n    // is a confusing interaction.\n    if (startKey !== endKey && selection.getEndOffset() === 0) {\n      var blockBefore = nullthrows(content.getBlockBefore(endKey));\n      endKey = blockBefore.getKey();\n      target = target.merge({\n        anchorKey: startKey,\n        anchorOffset: selection.getStartOffset(),\n        focusKey: endKey,\n        focusOffset: blockBefore.getLength(),\n        isBackward: false\n      });\n    }\n\n    var hasAtomicBlock = content.getBlockMap().skipWhile(function (_, k) {\n      return k !== startKey;\n    }).reverse().skipWhile(function (_, k) {\n      return k !== endKey;\n    }).some(function (v) {\n      return v.getType() === 'atomic';\n    });\n\n    if (hasAtomicBlock) {\n      return editorState;\n    }\n\n    var typeToSet = content.getBlockForKey(startKey).getType() === blockType ? 'unstyled' : blockType;\n\n    return EditorState.push(editorState, DraftModifier.setBlockType(content, target, typeToSet), 'change-block-type');\n  },\n\n  toggleCode: function toggleCode(editorState) {\n    var selection = editorState.getSelection();\n    var anchorKey = selection.getAnchorKey();\n    var focusKey = selection.getFocusKey();\n\n    if (selection.isCollapsed() || anchorKey !== focusKey) {\n      return RichTextEditorUtil.toggleBlockType(editorState, 'code-block');\n    }\n\n    return RichTextEditorUtil.toggleInlineStyle(editorState, 'CODE');\n  },\n\n  /**\n   * Toggle the specified inline style for the selection. If the\n   * user's selection is collapsed, apply or remove the style for the\n   * internal state. If it is not collapsed, apply the change directly\n   * to the document state.\n   */\n  toggleInlineStyle: function toggleInlineStyle(editorState, inlineStyle) {\n    var selection = editorState.getSelection();\n    var currentStyle = editorState.getCurrentInlineStyle();\n\n    // If the selection is collapsed, toggle the specified style on or off and\n    // set the result as the new inline style override. This will then be\n    // used as the inline style for the next character to be inserted.\n    if (selection.isCollapsed()) {\n      return EditorState.setInlineStyleOverride(editorState, currentStyle.has(inlineStyle) ? currentStyle.remove(inlineStyle) : currentStyle.add(inlineStyle));\n    }\n\n    // If characters are selected, immediately apply or remove the\n    // inline style on the document state itself.\n    var content = editorState.getCurrentContent();\n    var newContent;\n\n    // If the style is already present for the selection range, remove it.\n    // Otherwise, apply it.\n    if (currentStyle.has(inlineStyle)) {\n      newContent = DraftModifier.removeInlineStyle(content, selection, inlineStyle);\n    } else {\n      newContent = DraftModifier.applyInlineStyle(content, selection, inlineStyle);\n    }\n\n    return EditorState.push(editorState, newContent, 'change-inline-style');\n  },\n\n  toggleLink: function toggleLink(editorState, targetSelection, entityKey) {\n    var withoutLink = DraftModifier.applyEntity(editorState.getCurrentContent(), targetSelection, entityKey);\n\n    return EditorState.push(editorState, withoutLink, 'apply-entity');\n  },\n\n  /**\n   * When a collapsed cursor is at the start of the first styled block, or\n   * an empty styled block, changes block to 'unstyled'. Returns null if\n   * block or selection does not meet that criteria.\n   */\n  tryToRemoveBlockStyle: function tryToRemoveBlockStyle(editorState) {\n    var selection = editorState.getSelection();\n    var offset = selection.getAnchorOffset();\n    if (selection.isCollapsed() && offset === 0) {\n      var key = selection.getAnchorKey();\n      var content = editorState.getCurrentContent();\n      var block = content.getBlockForKey(key);\n\n      var firstBlock = content.getFirstBlock();\n      if (block.getLength() > 0 && block !== firstBlock) {\n        return null;\n      }\n\n      var type = block.getType();\n      var blockBefore = content.getBlockBefore(key);\n      if (type === 'code-block' && blockBefore && blockBefore.getType() === 'code-block' && blockBefore.getLength() !== 0) {\n        return null;\n      }\n\n      if (type !== 'unstyled') {\n        return DraftModifier.setBlockType(content, selection, 'unstyled');\n      }\n    }\n    return null;\n  }\n};\n\nmodule.exports = RichTextEditorUtil;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}