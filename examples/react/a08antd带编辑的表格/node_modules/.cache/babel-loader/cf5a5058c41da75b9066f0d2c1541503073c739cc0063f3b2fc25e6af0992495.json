{"ast":null,"code":"'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/**\n * This function is used to mark string literals representing CSS class names\n * so that they can be transformed statically. This allows for modularization\n * and minification of CSS class names.\n *\n * In static_upstream, this function is actually implemented, but it should\n * eventually be replaced with something more descriptive, and the transform\n * that is used in the main stack should be ported for use elsewhere.\n *\n * @param string|object className to modularize, or an object of key/values.\n *                      In the object case, the values are conditions that\n *                      determine if the className keys should be included.\n * @param [string ...]  Variable list of classNames in the string case.\n * @return string       Renderable space-separated CSS className.\n */\nfunction cx(classNames) {\n  if (typeof classNames == 'object') {\n    return Object.keys(classNames).filter(function (className) {\n      return classNames[className];\n    }).map(replace).join(' ');\n  }\n  return Array.prototype.map.call(arguments, replace).join(' ');\n}\nfunction replace(str) {\n  return str.replace(/\\//g, '-');\n}\nmodule.exports = cx;","map":{"version":3,"names":["cx","classNames","Object","keys","filter","className","map","replace","join","Array","prototype","call","arguments","str","module","exports"],"sources":["/Users/zhangqiang/Documents/GitHub/frontEnd-all-knowledge/examples/react/a08antd带编辑的表格/node_modules/fbjs/lib/cx.js"],"sourcesContent":["'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/**\n * This function is used to mark string literals representing CSS class names\n * so that they can be transformed statically. This allows for modularization\n * and minification of CSS class names.\n *\n * In static_upstream, this function is actually implemented, but it should\n * eventually be replaced with something more descriptive, and the transform\n * that is used in the main stack should be ported for use elsewhere.\n *\n * @param string|object className to modularize, or an object of key/values.\n *                      In the object case, the values are conditions that\n *                      determine if the className keys should be included.\n * @param [string ...]  Variable list of classNames in the string case.\n * @return string       Renderable space-separated CSS className.\n */\nfunction cx(classNames) {\n  if (typeof classNames == 'object') {\n    return Object.keys(classNames).filter(function (className) {\n      return classNames[className];\n    }).map(replace).join(' ');\n  }\n  return Array.prototype.map.call(arguments, replace).join(' ');\n}\n\nfunction replace(str) {\n  return str.replace(/\\//g, '-');\n}\n\nmodule.exports = cx;"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,EAAEA,CAACC,UAAU,EAAE;EACtB,IAAI,OAAOA,UAAU,IAAI,QAAQ,EAAE;IACjC,OAAOC,MAAM,CAACC,IAAI,CAACF,UAAU,CAAC,CAACG,MAAM,CAAC,UAAUC,SAAS,EAAE;MACzD,OAAOJ,UAAU,CAACI,SAAS,CAAC;IAC9B,CAAC,CAAC,CAACC,GAAG,CAACC,OAAO,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;EAC3B;EACA,OAAOC,KAAK,CAACC,SAAS,CAACJ,GAAG,CAACK,IAAI,CAACC,SAAS,EAAEL,OAAO,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;AAC/D;AAEA,SAASD,OAAOA,CAACM,GAAG,EAAE;EACpB,OAAOA,GAAG,CAACN,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;AAChC;AAEAO,MAAM,CAACC,OAAO,GAAGf,EAAE"},"metadata":{},"sourceType":"script","externalDependencies":[]}