{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ContentState\n * @format\n * \n */\n\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nvar BlockMapBuilder = require('./BlockMapBuilder');\nvar CharacterMetadata = require('./CharacterMetadata');\nvar ContentBlock = require('./ContentBlock');\nvar ContentBlockNode = require('./ContentBlockNode');\nvar DraftEntity = require('./DraftEntity');\nvar DraftFeatureFlags = require('./DraftFeatureFlags');\nvar Immutable = require('immutable');\nvar SelectionState = require('./SelectionState');\nvar generateRandomKey = require('./generateRandomKey');\nvar sanitizeDraftText = require('./sanitizeDraftText');\nvar List = Immutable.List,\n  Record = Immutable.Record,\n  Repeat = Immutable.Repeat;\nvar experimentalTreeDataSupport = DraftFeatureFlags.draft_tree_data_support;\nvar defaultRecord = {\n  entityMap: null,\n  blockMap: null,\n  selectionBefore: null,\n  selectionAfter: null\n};\nvar ContentBlockNodeRecord = experimentalTreeDataSupport ? ContentBlockNode : ContentBlock;\nvar ContentStateRecord = Record(defaultRecord);\nvar ContentState = function (_ContentStateRecord) {\n  _inherits(ContentState, _ContentStateRecord);\n  function ContentState() {\n    _classCallCheck(this, ContentState);\n    return _possibleConstructorReturn(this, _ContentStateRecord.apply(this, arguments));\n  }\n  ContentState.prototype.getEntityMap = function getEntityMap() {\n    // TODO: update this when we fully remove DraftEntity\n    return DraftEntity;\n  };\n  ContentState.prototype.getBlockMap = function getBlockMap() {\n    return this.get('blockMap');\n  };\n  ContentState.prototype.getSelectionBefore = function getSelectionBefore() {\n    return this.get('selectionBefore');\n  };\n  ContentState.prototype.getSelectionAfter = function getSelectionAfter() {\n    return this.get('selectionAfter');\n  };\n  ContentState.prototype.getBlockForKey = function getBlockForKey(key) {\n    var block = this.getBlockMap().get(key);\n    return block;\n  };\n  ContentState.prototype.getKeyBefore = function getKeyBefore(key) {\n    return this.getBlockMap().reverse().keySeq().skipUntil(function (v) {\n      return v === key;\n    }).skip(1).first();\n  };\n  ContentState.prototype.getKeyAfter = function getKeyAfter(key) {\n    return this.getBlockMap().keySeq().skipUntil(function (v) {\n      return v === key;\n    }).skip(1).first();\n  };\n  ContentState.prototype.getBlockAfter = function getBlockAfter(key) {\n    return this.getBlockMap().skipUntil(function (_, k) {\n      return k === key;\n    }).skip(1).first();\n  };\n  ContentState.prototype.getBlockBefore = function getBlockBefore(key) {\n    return this.getBlockMap().reverse().skipUntil(function (_, k) {\n      return k === key;\n    }).skip(1).first();\n  };\n  ContentState.prototype.getBlocksAsArray = function getBlocksAsArray() {\n    return this.getBlockMap().toArray();\n  };\n  ContentState.prototype.getFirstBlock = function getFirstBlock() {\n    return this.getBlockMap().first();\n  };\n  ContentState.prototype.getLastBlock = function getLastBlock() {\n    return this.getBlockMap().last();\n  };\n  ContentState.prototype.getPlainText = function getPlainText(delimiter) {\n    return this.getBlockMap().map(function (block) {\n      return block ? block.getText() : '';\n    }).join(delimiter || '\\n');\n  };\n  ContentState.prototype.getLastCreatedEntityKey = function getLastCreatedEntityKey() {\n    // TODO: update this when we fully remove DraftEntity\n    return DraftEntity.__getLastCreatedEntityKey();\n  };\n  ContentState.prototype.hasText = function hasText() {\n    var blockMap = this.getBlockMap();\n    return blockMap.size > 1 || blockMap.first().getLength() > 0;\n  };\n  ContentState.prototype.createEntity = function createEntity(type, mutability, data) {\n    // TODO: update this when we fully remove DraftEntity\n    DraftEntity.__create(type, mutability, data);\n    return this;\n  };\n  ContentState.prototype.mergeEntityData = function mergeEntityData(key, toMerge) {\n    // TODO: update this when we fully remove DraftEntity\n    DraftEntity.__mergeData(key, toMerge);\n    return this;\n  };\n  ContentState.prototype.replaceEntityData = function replaceEntityData(key, newData) {\n    // TODO: update this when we fully remove DraftEntity\n    DraftEntity.__replaceData(key, newData);\n    return this;\n  };\n  ContentState.prototype.addEntity = function addEntity(instance) {\n    // TODO: update this when we fully remove DraftEntity\n    DraftEntity.__add(instance);\n    return this;\n  };\n  ContentState.prototype.getEntity = function getEntity(key) {\n    // TODO: update this when we fully remove DraftEntity\n    return DraftEntity.__get(key);\n  };\n  ContentState.createFromBlockArray = function createFromBlockArray(\n  // TODO: update flow type when we completely deprecate the old entity API\n  blocks, entityMap) {\n    // TODO: remove this when we completely deprecate the old entity API\n    var theBlocks = Array.isArray(blocks) ? blocks : blocks.contentBlocks;\n    var blockMap = BlockMapBuilder.createFromArray(theBlocks);\n    var selectionState = blockMap.isEmpty() ? new SelectionState() : SelectionState.createEmpty(blockMap.first().getKey());\n    return new ContentState({\n      blockMap: blockMap,\n      entityMap: entityMap || DraftEntity,\n      selectionBefore: selectionState,\n      selectionAfter: selectionState\n    });\n  };\n  ContentState.createFromText = function createFromText(text) {\n    var delimiter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : /\\r\\n?|\\n/g;\n    var strings = text.split(delimiter);\n    var blocks = strings.map(function (block) {\n      block = sanitizeDraftText(block);\n      return new ContentBlockNodeRecord({\n        key: generateRandomKey(),\n        text: block,\n        type: 'unstyled',\n        characterList: List(Repeat(CharacterMetadata.EMPTY, block.length))\n      });\n    });\n    return ContentState.createFromBlockArray(blocks);\n  };\n  return ContentState;\n}(ContentStateRecord);\nmodule.exports = ContentState;","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","BlockMapBuilder","require","CharacterMetadata","ContentBlock","ContentBlockNode","DraftEntity","DraftFeatureFlags","Immutable","SelectionState","generateRandomKey","sanitizeDraftText","List","Record","Repeat","experimentalTreeDataSupport","draft_tree_data_support","defaultRecord","entityMap","blockMap","selectionBefore","selectionAfter","ContentBlockNodeRecord","ContentStateRecord","ContentState","_ContentStateRecord","apply","arguments","getEntityMap","getBlockMap","get","getSelectionBefore","getSelectionAfter","getBlockForKey","key","block","getKeyBefore","reverse","keySeq","skipUntil","v","skip","first","getKeyAfter","getBlockAfter","_","k","getBlockBefore","getBlocksAsArray","toArray","getFirstBlock","getLastBlock","last","getPlainText","delimiter","map","getText","join","getLastCreatedEntityKey","__getLastCreatedEntityKey","hasText","size","getLength","createEntity","type","mutability","data","__create","mergeEntityData","toMerge","__mergeData","replaceEntityData","newData","__replaceData","addEntity","__add","getEntity","__get","createFromBlockArray","blocks","theBlocks","Array","isArray","contentBlocks","createFromArray","selectionState","isEmpty","createEmpty","getKey","createFromText","text","length","undefined","strings","split","characterList","EMPTY","module","exports"],"sources":["/Users/zhangqiang/Documents/GitHub/frontEnd-all-knowledge/examples/react/a08antd带编辑的表格/node_modules/rc-editor-core/node_modules/draft-js/lib/ContentState.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ContentState\n * @format\n * \n */\n\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar BlockMapBuilder = require('./BlockMapBuilder');\nvar CharacterMetadata = require('./CharacterMetadata');\nvar ContentBlock = require('./ContentBlock');\nvar ContentBlockNode = require('./ContentBlockNode');\nvar DraftEntity = require('./DraftEntity');\nvar DraftFeatureFlags = require('./DraftFeatureFlags');\nvar Immutable = require('immutable');\nvar SelectionState = require('./SelectionState');\n\nvar generateRandomKey = require('./generateRandomKey');\nvar sanitizeDraftText = require('./sanitizeDraftText');\n\nvar List = Immutable.List,\n    Record = Immutable.Record,\n    Repeat = Immutable.Repeat;\n\n\nvar experimentalTreeDataSupport = DraftFeatureFlags.draft_tree_data_support;\n\nvar defaultRecord = {\n  entityMap: null,\n  blockMap: null,\n  selectionBefore: null,\n  selectionAfter: null\n};\n\nvar ContentBlockNodeRecord = experimentalTreeDataSupport ? ContentBlockNode : ContentBlock;\n\nvar ContentStateRecord = Record(defaultRecord);\n\nvar ContentState = function (_ContentStateRecord) {\n  _inherits(ContentState, _ContentStateRecord);\n\n  function ContentState() {\n    _classCallCheck(this, ContentState);\n\n    return _possibleConstructorReturn(this, _ContentStateRecord.apply(this, arguments));\n  }\n\n  ContentState.prototype.getEntityMap = function getEntityMap() {\n    // TODO: update this when we fully remove DraftEntity\n    return DraftEntity;\n  };\n\n  ContentState.prototype.getBlockMap = function getBlockMap() {\n    return this.get('blockMap');\n  };\n\n  ContentState.prototype.getSelectionBefore = function getSelectionBefore() {\n    return this.get('selectionBefore');\n  };\n\n  ContentState.prototype.getSelectionAfter = function getSelectionAfter() {\n    return this.get('selectionAfter');\n  };\n\n  ContentState.prototype.getBlockForKey = function getBlockForKey(key) {\n    var block = this.getBlockMap().get(key);\n    return block;\n  };\n\n  ContentState.prototype.getKeyBefore = function getKeyBefore(key) {\n    return this.getBlockMap().reverse().keySeq().skipUntil(function (v) {\n      return v === key;\n    }).skip(1).first();\n  };\n\n  ContentState.prototype.getKeyAfter = function getKeyAfter(key) {\n    return this.getBlockMap().keySeq().skipUntil(function (v) {\n      return v === key;\n    }).skip(1).first();\n  };\n\n  ContentState.prototype.getBlockAfter = function getBlockAfter(key) {\n    return this.getBlockMap().skipUntil(function (_, k) {\n      return k === key;\n    }).skip(1).first();\n  };\n\n  ContentState.prototype.getBlockBefore = function getBlockBefore(key) {\n    return this.getBlockMap().reverse().skipUntil(function (_, k) {\n      return k === key;\n    }).skip(1).first();\n  };\n\n  ContentState.prototype.getBlocksAsArray = function getBlocksAsArray() {\n    return this.getBlockMap().toArray();\n  };\n\n  ContentState.prototype.getFirstBlock = function getFirstBlock() {\n    return this.getBlockMap().first();\n  };\n\n  ContentState.prototype.getLastBlock = function getLastBlock() {\n    return this.getBlockMap().last();\n  };\n\n  ContentState.prototype.getPlainText = function getPlainText(delimiter) {\n    return this.getBlockMap().map(function (block) {\n      return block ? block.getText() : '';\n    }).join(delimiter || '\\n');\n  };\n\n  ContentState.prototype.getLastCreatedEntityKey = function getLastCreatedEntityKey() {\n    // TODO: update this when we fully remove DraftEntity\n    return DraftEntity.__getLastCreatedEntityKey();\n  };\n\n  ContentState.prototype.hasText = function hasText() {\n    var blockMap = this.getBlockMap();\n    return blockMap.size > 1 || blockMap.first().getLength() > 0;\n  };\n\n  ContentState.prototype.createEntity = function createEntity(type, mutability, data) {\n    // TODO: update this when we fully remove DraftEntity\n    DraftEntity.__create(type, mutability, data);\n    return this;\n  };\n\n  ContentState.prototype.mergeEntityData = function mergeEntityData(key, toMerge) {\n    // TODO: update this when we fully remove DraftEntity\n    DraftEntity.__mergeData(key, toMerge);\n    return this;\n  };\n\n  ContentState.prototype.replaceEntityData = function replaceEntityData(key, newData) {\n    // TODO: update this when we fully remove DraftEntity\n    DraftEntity.__replaceData(key, newData);\n    return this;\n  };\n\n  ContentState.prototype.addEntity = function addEntity(instance) {\n    // TODO: update this when we fully remove DraftEntity\n    DraftEntity.__add(instance);\n    return this;\n  };\n\n  ContentState.prototype.getEntity = function getEntity(key) {\n    // TODO: update this when we fully remove DraftEntity\n    return DraftEntity.__get(key);\n  };\n\n  ContentState.createFromBlockArray = function createFromBlockArray(\n  // TODO: update flow type when we completely deprecate the old entity API\n  blocks, entityMap) {\n    // TODO: remove this when we completely deprecate the old entity API\n    var theBlocks = Array.isArray(blocks) ? blocks : blocks.contentBlocks;\n    var blockMap = BlockMapBuilder.createFromArray(theBlocks);\n    var selectionState = blockMap.isEmpty() ? new SelectionState() : SelectionState.createEmpty(blockMap.first().getKey());\n    return new ContentState({\n      blockMap: blockMap,\n      entityMap: entityMap || DraftEntity,\n      selectionBefore: selectionState,\n      selectionAfter: selectionState\n    });\n  };\n\n  ContentState.createFromText = function createFromText(text) {\n    var delimiter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : /\\r\\n?|\\n/g;\n\n    var strings = text.split(delimiter);\n    var blocks = strings.map(function (block) {\n      block = sanitizeDraftText(block);\n      return new ContentBlockNodeRecord({\n        key: generateRandomKey(),\n        text: block,\n        type: 'unstyled',\n        characterList: List(Repeat(CharacterMetadata.EMPTY, block.length))\n      });\n    });\n    return ContentState.createFromBlockArray(blocks);\n  };\n\n  return ContentState;\n}(ContentStateRecord);\n\nmodule.exports = ContentState;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}