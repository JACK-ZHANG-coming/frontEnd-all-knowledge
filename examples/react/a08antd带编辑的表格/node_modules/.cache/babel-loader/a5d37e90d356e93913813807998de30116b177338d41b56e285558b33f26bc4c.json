{"ast":null,"code":"var _jsxFileName = \"/Users/zhangqiang/Documents/GitHub/frontEnd-all-knowledge/examples/react/a08antd\\u5E26\\u7F16\\u8F91\\u7684\\u8868\\u683C/src/App.tsx\";\n/**拖拽表格 */\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Table } from 'antd';\nimport { DndProvider, DragSource, DropTarget } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport update from 'immutability-helper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet dragingIndex = -1;\nclass BodyRow extends React.Component {\n  render() {\n    const {\n      isOver,\n      connectDragSource,\n      connectDropTarget,\n      moveRow,\n      ...restProps\n    } = this.props;\n    const style = {\n      ...restProps.style,\n      cursor: 'move'\n    };\n    let {\n      className\n    } = restProps;\n    if (isOver) {\n      if (restProps.index > dragingIndex) {\n        className += ' drop-over-downward';\n      }\n      if (restProps.index < dragingIndex) {\n        className += ' drop-over-upward';\n      }\n    }\n    return connectDragSource(connectDropTarget( /*#__PURE__*/_jsxDEV(\"tr\", {\n      ...restProps,\n      className: className,\n      style: style\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }, this)));\n  }\n}\nconst rowSource = {\n  beginDrag(props) {\n    dragingIndex = props.index;\n    return {\n      index: props.index\n    };\n  }\n};\nconst rowTarget = {\n  drop(props, monitor) {\n    const dragIndex = monitor.getItem().index;\n    const hoverIndex = props.index;\n\n    // Don't replace items with themselves\n    if (dragIndex === hoverIndex) {\n      return;\n    }\n\n    // Time to actually perform the action\n    props.moveRow(dragIndex, hoverIndex);\n\n    // Note: we're mutating the monitor item here!\n    // Generally it's better to avoid mutations,\n    // but it's good here for the sake of performance\n    // to avoid expensive index searches.\n    monitor.getItem().index = hoverIndex;\n  }\n};\n\n// const DragableBodyRow = DropTarget('row', rowTarget, (connect, monitor) => ({\n//   connectDropTarget: connect.dropTarget(),\n//   isOver: monitor.isOver(),\n// }))(\n//   DragSource('row', rowSource, connect => ({\n//     connectDragSource: connect.dragSource(),\n//   }))(BodyRow),\n// );\n\nconst DropTargetDecorator = DropTarget('row', rowTarget, (connect, monitor) => ({\n  connectDropTarget: connect.dropTarget(),\n  isOver: monitor.isOver()\n}));\nconst DragSourceDecorator = DragSource('row', rowSource, connect => ({\n  connectDragSource: connect.dragSource()\n}));\nconst DragableBodyRow = DropTargetDecorator(_c = DragSourceDecorator(BodyRow));\n_c2 = DragableBodyRow;\nconst a = () => {\n  console.log('a');\n};\na();\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name',\n  key: 'name'\n}, {\n  title: 'Age',\n  dataIndex: 'age',\n  key: 'age'\n}, {\n  title: 'Address',\n  dataIndex: 'address',\n  key: 'address'\n}];\nclass EditableTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.columns = void 0;\n    this.components = {\n      body: {\n        row: DragableBodyRow\n      }\n    };\n    this.moveRow = (dragIndex, hoverIndex) => {\n      const {\n        data\n      } = this.state;\n      const dragRow = data[dragIndex];\n      this.setState(update(this.state, {\n        data: {\n          $splice: [[dragIndex, 1], [hoverIndex, 0, dragRow]]\n        }\n      }));\n    };\n    this.state = {\n      data: [{\n        key: '1',\n        name: 'John Brown',\n        age: 32,\n        address: 'New York No. 1 Lake Park'\n      }, {\n        key: '2',\n        name: 'Jim Green',\n        age: 42,\n        address: 'London No. 1 Lake Park'\n      }, {\n        key: '3',\n        name: 'Joe Black',\n        age: 32,\n        address: 'Sidney No. 1 Lake Park'\n      }]\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(DndProvider, {\n      backend: HTML5Backend,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        dataSource: this.state.data,\n        components: this.components,\n        onRow: (record, index) => ({\n          index,\n          moveRow: this.moveRow\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default EditableTable;\nvar _c, _c2;\n$RefreshReg$(_c, \"DragableBodyRow$DropTargetDecorator\");\n$RefreshReg$(_c2, \"DragableBodyRow\");","map":{"version":3,"names":["React","Table","DndProvider","DragSource","DropTarget","HTML5Backend","update","jsxDEV","_jsxDEV","dragingIndex","BodyRow","Component","render","isOver","connectDragSource","connectDropTarget","moveRow","restProps","props","style","cursor","className","index","fileName","_jsxFileName","lineNumber","columnNumber","rowSource","beginDrag","rowTarget","drop","monitor","dragIndex","getItem","hoverIndex","DropTargetDecorator","connect","dropTarget","DragSourceDecorator","dragSource","DragableBodyRow","_c","_c2","a","console","log","columns","title","dataIndex","key","EditableTable","constructor","components","body","row","data","state","dragRow","setState","$splice","name","age","address","backend","children","dataSource","onRow","record","$RefreshReg$"],"sources":["/Users/zhangqiang/Documents/GitHub/frontEnd-all-knowledge/examples/react/a08antd带编辑的表格/src/App.tsx"],"sourcesContent":["/**拖拽表格 */\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Table, Input, InputNumber, Popconfirm } from 'antd';\nimport { DndProvider, DragSource, DropTarget } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport update from 'immutability-helper';\n\nlet dragingIndex = -1;\n\nclass BodyRow extends React.Component<any, any> {\n  render() {\n    const { isOver, connectDragSource, connectDropTarget, moveRow, ...restProps } = this.props;\n    const style = { ...restProps.style, cursor: 'move' };\n\n    let { className } = restProps;\n    if (isOver) {\n      if (restProps.index > dragingIndex) {\n        className += ' drop-over-downward';\n      }\n      if (restProps.index < dragingIndex) {\n        className += ' drop-over-upward';\n      }\n    }\n\n    return connectDragSource(\n      connectDropTarget(<tr {...restProps} className={className} style={style} />),\n    );\n  }\n}\n\nconst rowSource = {\n  beginDrag(props) {\n    dragingIndex = props.index;\n    return {\n      index: props.index,\n    };\n  },\n};\n\nconst rowTarget = {\n  drop(props, monitor) {\n    const dragIndex = monitor.getItem().index;\n    const hoverIndex = props.index;\n\n    // Don't replace items with themselves\n    if (dragIndex === hoverIndex) {\n      return;\n    }\n\n    // Time to actually perform the action\n    props.moveRow(dragIndex, hoverIndex);\n\n    // Note: we're mutating the monitor item here!\n    // Generally it's better to avoid mutations,\n    // but it's good here for the sake of performance\n    // to avoid expensive index searches.\n    monitor.getItem().index = hoverIndex;\n  },\n};\n\n// const DragableBodyRow = DropTarget('row', rowTarget, (connect, monitor) => ({\n//   connectDropTarget: connect.dropTarget(),\n//   isOver: monitor.isOver(),\n// }))(\n//   DragSource('row', rowSource, connect => ({\n//     connectDragSource: connect.dragSource(),\n//   }))(BodyRow),\n// );\n\nconst DropTargetDecorator = DropTarget('row', rowTarget, (connect, monitor) => ({\n  connectDropTarget: connect.dropTarget(),\n  isOver: monitor.isOver(),\n}));\n\nconst DragSourceDecorator = DragSource('row', rowSource, connect => ({\n  connectDragSource: connect.dragSource(),\n}));\n\nconst DragableBodyRow = DropTargetDecorator(DragSourceDecorator(BodyRow));\n\n\nconst a: any = () => {\n  console.log('a');\n}\na()\nconst columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age',\n    key: 'age',\n  },\n  {\n    title: 'Address',\n    dataIndex: 'address',\n    key: 'address',\n  },\n];\n\n\nexport interface CAFormOfTableProps {\n\n}\n\nexport interface CAFormOfTableState {\n\n}\n\n\nclass EditableTable extends React.Component<any, any>{\n  private columns;\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      data: [\n        {\n          key: '1',\n          name: 'John Brown',\n          age: 32,\n          address: 'New York No. 1 Lake Park',\n        },\n        {\n          key: '2',\n          name: 'Jim Green',\n          age: 42,\n          address: 'London No. 1 Lake Park',\n        },\n        {\n          key: '3',\n          name: 'Joe Black',\n          age: 32,\n          address: 'Sidney No. 1 Lake Park',\n        },\n      ],\n    };\n  }\n\n  components = {\n    body: {\n      row: DragableBodyRow,\n    },\n  };\n\n  moveRow = (dragIndex, hoverIndex) => {\n    const { data } = this.state;\n    const dragRow = data[dragIndex];\n\n    this.setState(\n      update(this.state, {\n        data: {\n          $splice: [[dragIndex, 1], [hoverIndex, 0, dragRow]],\n        },\n      }),\n    );\n  };\n\n\n  render() {\n    return (\n      <DndProvider backend={HTML5Backend}>\n        <Table\n          columns={columns}\n          dataSource={this.state.data}\n          components={this.components}\n          onRow={(record, index) => ({\n            index,\n            moveRow: this.moveRow,\n          })}\n        />\n      </DndProvider>\n    );\n  }\n}\n\nexport default EditableTable;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}