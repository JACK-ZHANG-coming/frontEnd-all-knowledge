{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule splitBlockInContentState\n * @format\n * \n */\n\n'use strict';\n\nvar ContentBlockNode = require('./ContentBlockNode');\nvar Immutable = require('immutable');\nvar generateRandomKey = require('./generateRandomKey');\nvar invariant = require('fbjs/lib/invariant');\nvar List = Immutable.List,\n  Map = Immutable.Map;\nvar transformBlock = function transformBlock(key, blockMap, func) {\n  if (!key) {\n    return;\n  }\n  var block = blockMap.get(key);\n  if (!block) {\n    return;\n  }\n  blockMap.set(key, func(block));\n};\nvar updateBlockMapLinks = function updateBlockMapLinks(blockMap, originalBlock, belowBlock) {\n  return blockMap.withMutations(function (blocks) {\n    var originalBlockKey = originalBlock.getKey();\n    var belowBlockKey = belowBlock.getKey();\n\n    // update block parent\n    transformBlock(originalBlock.getParentKey(), blocks, function (block) {\n      var parentChildrenList = block.getChildKeys();\n      var insertionIndex = parentChildrenList.indexOf(originalBlockKey) + 1;\n      var newChildrenArray = parentChildrenList.toArray();\n      newChildrenArray.splice(insertionIndex, 0, belowBlockKey);\n      return block.merge({\n        children: List(newChildrenArray)\n      });\n    });\n\n    // update original next block\n    transformBlock(originalBlock.getNextSiblingKey(), blocks, function (block) {\n      return block.merge({\n        prevSibling: belowBlockKey\n      });\n    });\n\n    // update original block\n    transformBlock(originalBlockKey, blocks, function (block) {\n      return block.merge({\n        nextSibling: belowBlockKey\n      });\n    });\n\n    // update below block\n    transformBlock(belowBlockKey, blocks, function (block) {\n      return block.merge({\n        prevSibling: originalBlockKey\n      });\n    });\n  });\n};\nvar splitBlockInContentState = function splitBlockInContentState(contentState, selectionState) {\n  !selectionState.isCollapsed() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Selection range must be collapsed.') : invariant(false) : void 0;\n  var key = selectionState.getAnchorKey();\n  var offset = selectionState.getAnchorOffset();\n  var blockMap = contentState.getBlockMap();\n  var blockToSplit = blockMap.get(key);\n  var text = blockToSplit.getText();\n  var chars = blockToSplit.getCharacterList();\n  var keyBelow = generateRandomKey();\n  var isExperimentalTreeBlock = blockToSplit instanceof ContentBlockNode;\n  var blockAbove = blockToSplit.merge({\n    text: text.slice(0, offset),\n    characterList: chars.slice(0, offset)\n  });\n  var blockBelow = blockAbove.merge({\n    key: keyBelow,\n    text: text.slice(offset),\n    characterList: chars.slice(offset),\n    data: Map()\n  });\n  var blocksBefore = blockMap.toSeq().takeUntil(function (v) {\n    return v === blockToSplit;\n  });\n  var blocksAfter = blockMap.toSeq().skipUntil(function (v) {\n    return v === blockToSplit;\n  }).rest();\n  var newBlocks = blocksBefore.concat([[key, blockAbove], [keyBelow, blockBelow]], blocksAfter).toOrderedMap();\n  if (isExperimentalTreeBlock) {\n    !blockToSplit.getChildKeys().isEmpty() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ContentBlockNode must not have children') : invariant(false) : void 0;\n    newBlocks = updateBlockMapLinks(newBlocks, blockAbove, blockBelow);\n  }\n  return contentState.merge({\n    blockMap: newBlocks,\n    selectionBefore: selectionState,\n    selectionAfter: selectionState.merge({\n      anchorKey: keyBelow,\n      anchorOffset: 0,\n      focusKey: keyBelow,\n      focusOffset: 0,\n      isBackward: false\n    })\n  });\n};\nmodule.exports = splitBlockInContentState;","map":{"version":3,"names":["ContentBlockNode","require","Immutable","generateRandomKey","invariant","List","Map","transformBlock","key","blockMap","func","block","get","set","updateBlockMapLinks","originalBlock","belowBlock","withMutations","blocks","originalBlockKey","getKey","belowBlockKey","getParentKey","parentChildrenList","getChildKeys","insertionIndex","indexOf","newChildrenArray","toArray","splice","merge","children","getNextSiblingKey","prevSibling","nextSibling","splitBlockInContentState","contentState","selectionState","isCollapsed","process","env","NODE_ENV","getAnchorKey","offset","getAnchorOffset","getBlockMap","blockToSplit","text","getText","chars","getCharacterList","keyBelow","isExperimentalTreeBlock","blockAbove","slice","characterList","blockBelow","data","blocksBefore","toSeq","takeUntil","v","blocksAfter","skipUntil","rest","newBlocks","concat","toOrderedMap","isEmpty","selectionBefore","selectionAfter","anchorKey","anchorOffset","focusKey","focusOffset","isBackward","module","exports"],"sources":["/Users/zhangqiang/Documents/GitHub/frontEnd-all-knowledge/examples/react/a08antd带编辑的表格/node_modules/rc-editor-core/node_modules/draft-js/lib/splitBlockInContentState.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule splitBlockInContentState\n * @format\n * \n */\n\n'use strict';\n\nvar ContentBlockNode = require('./ContentBlockNode');\nvar Immutable = require('immutable');\n\nvar generateRandomKey = require('./generateRandomKey');\nvar invariant = require('fbjs/lib/invariant');\n\nvar List = Immutable.List,\n    Map = Immutable.Map;\n\n\nvar transformBlock = function transformBlock(key, blockMap, func) {\n  if (!key) {\n    return;\n  }\n\n  var block = blockMap.get(key);\n\n  if (!block) {\n    return;\n  }\n\n  blockMap.set(key, func(block));\n};\n\nvar updateBlockMapLinks = function updateBlockMapLinks(blockMap, originalBlock, belowBlock) {\n  return blockMap.withMutations(function (blocks) {\n    var originalBlockKey = originalBlock.getKey();\n    var belowBlockKey = belowBlock.getKey();\n\n    // update block parent\n    transformBlock(originalBlock.getParentKey(), blocks, function (block) {\n      var parentChildrenList = block.getChildKeys();\n      var insertionIndex = parentChildrenList.indexOf(originalBlockKey) + 1;\n      var newChildrenArray = parentChildrenList.toArray();\n\n      newChildrenArray.splice(insertionIndex, 0, belowBlockKey);\n\n      return block.merge({\n        children: List(newChildrenArray)\n      });\n    });\n\n    // update original next block\n    transformBlock(originalBlock.getNextSiblingKey(), blocks, function (block) {\n      return block.merge({\n        prevSibling: belowBlockKey\n      });\n    });\n\n    // update original block\n    transformBlock(originalBlockKey, blocks, function (block) {\n      return block.merge({\n        nextSibling: belowBlockKey\n      });\n    });\n\n    // update below block\n    transformBlock(belowBlockKey, blocks, function (block) {\n      return block.merge({\n        prevSibling: originalBlockKey\n      });\n    });\n  });\n};\n\nvar splitBlockInContentState = function splitBlockInContentState(contentState, selectionState) {\n  !selectionState.isCollapsed() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Selection range must be collapsed.') : invariant(false) : void 0;\n\n  var key = selectionState.getAnchorKey();\n  var offset = selectionState.getAnchorOffset();\n  var blockMap = contentState.getBlockMap();\n  var blockToSplit = blockMap.get(key);\n  var text = blockToSplit.getText();\n  var chars = blockToSplit.getCharacterList();\n  var keyBelow = generateRandomKey();\n  var isExperimentalTreeBlock = blockToSplit instanceof ContentBlockNode;\n\n  var blockAbove = blockToSplit.merge({\n    text: text.slice(0, offset),\n    characterList: chars.slice(0, offset)\n  });\n  var blockBelow = blockAbove.merge({\n    key: keyBelow,\n    text: text.slice(offset),\n    characterList: chars.slice(offset),\n    data: Map()\n  });\n\n  var blocksBefore = blockMap.toSeq().takeUntil(function (v) {\n    return v === blockToSplit;\n  });\n  var blocksAfter = blockMap.toSeq().skipUntil(function (v) {\n    return v === blockToSplit;\n  }).rest();\n  var newBlocks = blocksBefore.concat([[key, blockAbove], [keyBelow, blockBelow]], blocksAfter).toOrderedMap();\n\n  if (isExperimentalTreeBlock) {\n    !blockToSplit.getChildKeys().isEmpty() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ContentBlockNode must not have children') : invariant(false) : void 0;\n\n    newBlocks = updateBlockMapLinks(newBlocks, blockAbove, blockBelow);\n  }\n\n  return contentState.merge({\n    blockMap: newBlocks,\n    selectionBefore: selectionState,\n    selectionAfter: selectionState.merge({\n      anchorKey: keyBelow,\n      anchorOffset: 0,\n      focusKey: keyBelow,\n      focusOffset: 0,\n      isBackward: false\n    })\n  });\n};\n\nmodule.exports = splitBlockInContentState;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}