{"ast":null,"code":"function getWord(text, position) {\n  var str = String(text);\n  /* eslint no-bitwise:0 */\n  var pos = Number(position) >>> 0;\n\n  // Search for the word's beginning and end.\n  var left = str.slice(0, pos + 1).search(/\\S+$/);\n  var right = str.slice(pos).search(/\\s/);\n  if (right < 0) {\n    return {\n      word: str.slice(left),\n      begin: left,\n      end: str.length\n    };\n  }\n\n  // Return the word, using the located bounds to extract it from the string.\n  return {\n    word: str.slice(left, right + pos),\n    begin: left,\n    end: right + pos\n  };\n}\nexport default function getSearchWord(editorState, selection) {\n  var anchorKey = selection.getAnchorKey();\n  var anchorOffset = selection.getAnchorOffset() - 1;\n  var currentContent = editorState.getCurrentContent();\n  var currentBlock = currentContent.getBlockForKey(anchorKey);\n  if (currentBlock) {\n    var blockText = currentBlock.getText();\n    return getWord(blockText, anchorOffset);\n  }\n  return '';\n}","map":{"version":3,"names":["getWord","text","position","str","String","pos","Number","left","slice","search","right","word","begin","end","length","getSearchWord","editorState","selection","anchorKey","getAnchorKey","anchorOffset","getAnchorOffset","currentContent","getCurrentContent","currentBlock","getBlockForKey","blockText","getText"],"sources":["/Users/zhangqiang/Documents/GitHub/frontEnd-all-knowledge/examples/react/a08antd带编辑的表格/node_modules/rc-editor-mention/es/utils/getSearchWord.js"],"sourcesContent":["function getWord(text, position) {\n  var str = String(text);\n  /* eslint no-bitwise:0 */\n  var pos = Number(position) >>> 0;\n\n  // Search for the word's beginning and end.\n  var left = str.slice(0, pos + 1).search(/\\S+$/);\n  var right = str.slice(pos).search(/\\s/);\n\n  if (right < 0) {\n    return {\n      word: str.slice(left),\n      begin: left,\n      end: str.length\n    };\n  }\n\n  // Return the word, using the located bounds to extract it from the string.\n  return {\n    word: str.slice(left, right + pos),\n    begin: left,\n    end: right + pos\n  };\n}\n\nexport default function getSearchWord(editorState, selection) {\n  var anchorKey = selection.getAnchorKey();\n  var anchorOffset = selection.getAnchorOffset() - 1;\n  var currentContent = editorState.getCurrentContent();\n  var currentBlock = currentContent.getBlockForKey(anchorKey);\n  if (currentBlock) {\n    var blockText = currentBlock.getText();\n    return getWord(blockText, anchorOffset);\n  }\n  return '';\n}"],"mappings":"AAAA,SAASA,OAAOA,CAACC,IAAI,EAAEC,QAAQ,EAAE;EAC/B,IAAIC,GAAG,GAAGC,MAAM,CAACH,IAAI,CAAC;EACtB;EACA,IAAII,GAAG,GAAGC,MAAM,CAACJ,QAAQ,CAAC,KAAK,CAAC;;EAEhC;EACA,IAAIK,IAAI,GAAGJ,GAAG,CAACK,KAAK,CAAC,CAAC,EAAEH,GAAG,GAAG,CAAC,CAAC,CAACI,MAAM,CAAC,MAAM,CAAC;EAC/C,IAAIC,KAAK,GAAGP,GAAG,CAACK,KAAK,CAACH,GAAG,CAAC,CAACI,MAAM,CAAC,IAAI,CAAC;EAEvC,IAAIC,KAAK,GAAG,CAAC,EAAE;IACb,OAAO;MACLC,IAAI,EAAER,GAAG,CAACK,KAAK,CAACD,IAAI,CAAC;MACrBK,KAAK,EAAEL,IAAI;MACXM,GAAG,EAAEV,GAAG,CAACW;IACX,CAAC;EACH;;EAEA;EACA,OAAO;IACLH,IAAI,EAAER,GAAG,CAACK,KAAK,CAACD,IAAI,EAAEG,KAAK,GAAGL,GAAG,CAAC;IAClCO,KAAK,EAAEL,IAAI;IACXM,GAAG,EAAEH,KAAK,GAAGL;EACf,CAAC;AACH;AAEA,eAAe,SAASU,aAAaA,CAACC,WAAW,EAAEC,SAAS,EAAE;EAC5D,IAAIC,SAAS,GAAGD,SAAS,CAACE,YAAY,CAAC,CAAC;EACxC,IAAIC,YAAY,GAAGH,SAAS,CAACI,eAAe,CAAC,CAAC,GAAG,CAAC;EAClD,IAAIC,cAAc,GAAGN,WAAW,CAACO,iBAAiB,CAAC,CAAC;EACpD,IAAIC,YAAY,GAAGF,cAAc,CAACG,cAAc,CAACP,SAAS,CAAC;EAC3D,IAAIM,YAAY,EAAE;IAChB,IAAIE,SAAS,GAAGF,YAAY,CAACG,OAAO,CAAC,CAAC;IACtC,OAAO3B,OAAO,CAAC0B,SAAS,EAAEN,YAAY,CAAC;EACzC;EACA,OAAO,EAAE;AACX"},"metadata":{},"sourceType":"module","externalDependencies":[]}