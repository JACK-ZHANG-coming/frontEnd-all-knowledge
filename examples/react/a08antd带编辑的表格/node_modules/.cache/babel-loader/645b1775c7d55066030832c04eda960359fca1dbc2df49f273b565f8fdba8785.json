{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule modifyBlockForContentState\n * @format\n * \n */\n\n'use strict';\n\nvar Immutable = require('immutable');\nvar Map = Immutable.Map;\nfunction modifyBlockForContentState(contentState, selectionState, operation) {\n  var startKey = selectionState.getStartKey();\n  var endKey = selectionState.getEndKey();\n  var blockMap = contentState.getBlockMap();\n  var newBlocks = blockMap.toSeq().skipUntil(function (_, k) {\n    return k === startKey;\n  }).takeUntil(function (_, k) {\n    return k === endKey;\n  }).concat(Map([[endKey, blockMap.get(endKey)]])).map(operation);\n  return contentState.merge({\n    blockMap: blockMap.merge(newBlocks),\n    selectionBefore: selectionState,\n    selectionAfter: selectionState\n  });\n}\nmodule.exports = modifyBlockForContentState;","map":{"version":3,"names":["Immutable","require","Map","modifyBlockForContentState","contentState","selectionState","operation","startKey","getStartKey","endKey","getEndKey","blockMap","getBlockMap","newBlocks","toSeq","skipUntil","_","k","takeUntil","concat","get","map","merge","selectionBefore","selectionAfter","module","exports"],"sources":["/Users/zhangqiang/Documents/GitHub/frontEnd-all-knowledge/examples/react/a08antd带编辑的表格/node_modules/rc-editor-mention/node_modules/draft-js/lib/modifyBlockForContentState.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule modifyBlockForContentState\n * @format\n * \n */\n\n'use strict';\n\nvar Immutable = require('immutable');\n\nvar Map = Immutable.Map;\n\n\nfunction modifyBlockForContentState(contentState, selectionState, operation) {\n  var startKey = selectionState.getStartKey();\n  var endKey = selectionState.getEndKey();\n  var blockMap = contentState.getBlockMap();\n  var newBlocks = blockMap.toSeq().skipUntil(function (_, k) {\n    return k === startKey;\n  }).takeUntil(function (_, k) {\n    return k === endKey;\n  }).concat(Map([[endKey, blockMap.get(endKey)]])).map(operation);\n\n  return contentState.merge({\n    blockMap: blockMap.merge(newBlocks),\n    selectionBefore: selectionState,\n    selectionAfter: selectionState\n  });\n}\n\nmodule.exports = modifyBlockForContentState;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,SAAS,GAAGC,OAAO,CAAC,WAAW,CAAC;AAEpC,IAAIC,GAAG,GAAGF,SAAS,CAACE,GAAG;AAGvB,SAASC,0BAA0BA,CAACC,YAAY,EAAEC,cAAc,EAAEC,SAAS,EAAE;EAC3E,IAAIC,QAAQ,GAAGF,cAAc,CAACG,WAAW,CAAC,CAAC;EAC3C,IAAIC,MAAM,GAAGJ,cAAc,CAACK,SAAS,CAAC,CAAC;EACvC,IAAIC,QAAQ,GAAGP,YAAY,CAACQ,WAAW,CAAC,CAAC;EACzC,IAAIC,SAAS,GAAGF,QAAQ,CAACG,KAAK,CAAC,CAAC,CAACC,SAAS,CAAC,UAAUC,CAAC,EAAEC,CAAC,EAAE;IACzD,OAAOA,CAAC,KAAKV,QAAQ;EACvB,CAAC,CAAC,CAACW,SAAS,CAAC,UAAUF,CAAC,EAAEC,CAAC,EAAE;IAC3B,OAAOA,CAAC,KAAKR,MAAM;EACrB,CAAC,CAAC,CAACU,MAAM,CAACjB,GAAG,CAAC,CAAC,CAACO,MAAM,EAAEE,QAAQ,CAACS,GAAG,CAACX,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAACY,GAAG,CAACf,SAAS,CAAC;EAE/D,OAAOF,YAAY,CAACkB,KAAK,CAAC;IACxBX,QAAQ,EAAEA,QAAQ,CAACW,KAAK,CAACT,SAAS,CAAC;IACnCU,eAAe,EAAElB,cAAc;IAC/BmB,cAAc,EAAEnB;EAClB,CAAC,CAAC;AACJ;AAEAoB,MAAM,CAACC,OAAO,GAAGvB,0BAA0B"},"metadata":{},"sourceType":"script","externalDependencies":[]}