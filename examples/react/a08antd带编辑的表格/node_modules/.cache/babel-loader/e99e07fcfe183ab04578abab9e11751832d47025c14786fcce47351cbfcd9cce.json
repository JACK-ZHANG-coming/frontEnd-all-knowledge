{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Memoizes the return value of a function that accepts one string argument.\n */\nfunction memoizeStringOnly(callback) {\n  var cache = {};\n  return function (string) {\n    if (!cache.hasOwnProperty(string)) {\n      cache[string] = callback.call(this, string);\n    }\n    return cache[string];\n  };\n}\nmodule.exports = memoizeStringOnly;","map":{"version":3,"names":["memoizeStringOnly","callback","cache","string","hasOwnProperty","call","module","exports"],"sources":["/Users/zhangqiang/Documents/GitHub/frontEnd-all-knowledge/examples/react/a08antd带编辑的表格/node_modules/fbjs/lib/memoizeStringOnly.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Memoizes the return value of a function that accepts one string argument.\n */\n\nfunction memoizeStringOnly(callback) {\n  var cache = {};\n  return function (string) {\n    if (!cache.hasOwnProperty(string)) {\n      cache[string] = callback.call(this, string);\n    }\n    return cache[string];\n  };\n}\n\nmodule.exports = memoizeStringOnly;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AAEA,SAASA,iBAAiBA,CAACC,QAAQ,EAAE;EACnC,IAAIC,KAAK,GAAG,CAAC,CAAC;EACd,OAAO,UAAUC,MAAM,EAAE;IACvB,IAAI,CAACD,KAAK,CAACE,cAAc,CAACD,MAAM,CAAC,EAAE;MACjCD,KAAK,CAACC,MAAM,CAAC,GAAGF,QAAQ,CAACI,IAAI,CAAC,IAAI,EAAEF,MAAM,CAAC;IAC7C;IACA,OAAOD,KAAK,CAACC,MAAM,CAAC;EACtB,CAAC;AACH;AAEAG,MAAM,CAACC,OAAO,GAAGP,iBAAiB"},"metadata":{},"sourceType":"script","externalDependencies":[]}