{"ast":null,"code":"import { invariant } from '@react-dnd/invariant';\nimport { registerSource, DragSourceMonitorImpl, SourceConnector } from '../internals';\nimport { checkDecoratorArguments, isPlainObject, isValidType } from './utils';\nimport { decorateHandler } from './decorateHandler';\nimport { createSourceFactory } from './createSourceFactory';\n/**\n * Decorates a component as a dragsource\n * @param type The dragsource type\n * @param spec The drag source specification\n * @param collect The props collector function\n * @param options DnD options\n */\n\nexport function DragSource(type, spec, collect) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  checkDecoratorArguments('DragSource', 'type, spec, collect[, options]', type, spec, collect, options);\n  var getType = type;\n  if (typeof type !== 'function') {\n    invariant(isValidType(type), 'Expected \"type\" provided as the first argument to DragSource to be ' + 'a string, or a function that returns a string given the current props. ' + 'Instead, received %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', type);\n    getType = function getType() {\n      return type;\n    };\n  }\n  invariant(isPlainObject(spec), 'Expected \"spec\" provided as the second argument to DragSource to be ' + 'a plain object. Instead, received %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', spec);\n  var createSource = createSourceFactory(spec);\n  invariant(typeof collect === 'function', 'Expected \"collect\" provided as the third argument to DragSource to be ' + 'a function that returns a plain object of props to inject. ' + 'Instead, received %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', collect);\n  invariant(isPlainObject(options), 'Expected \"options\" provided as the fourth argument to DragSource to be ' + 'a plain object when specified. ' + 'Instead, received %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', collect);\n  return function decorateSource(DecoratedComponent) {\n    return decorateHandler({\n      containerDisplayName: 'DragSource',\n      createHandler: createSource,\n      registerHandler: registerSource,\n      createConnector: function createConnector(backend) {\n        return new SourceConnector(backend);\n      },\n      createMonitor: function createMonitor(manager) {\n        return new DragSourceMonitorImpl(manager);\n      },\n      DecoratedComponent: DecoratedComponent,\n      getType: getType,\n      collect: collect,\n      options: options\n    });\n  };\n}","map":{"version":3,"names":["invariant","registerSource","DragSourceMonitorImpl","SourceConnector","checkDecoratorArguments","isPlainObject","isValidType","decorateHandler","createSourceFactory","DragSource","type","spec","collect","options","arguments","length","undefined","getType","createSource","decorateSource","DecoratedComponent","containerDisplayName","createHandler","registerHandler","createConnector","backend","createMonitor","manager"],"sources":["/Users/zhangqiang/Documents/GitHub/frontEnd-all-knowledge/examples/react/a08antd带编辑的表格/node_modules/react-dnd/dist/esm/decorators/DragSource.js"],"sourcesContent":["import { invariant } from '@react-dnd/invariant';\nimport { registerSource, DragSourceMonitorImpl, SourceConnector } from '../internals';\nimport { checkDecoratorArguments, isPlainObject, isValidType } from './utils';\nimport { decorateHandler } from './decorateHandler';\nimport { createSourceFactory } from './createSourceFactory';\n/**\n * Decorates a component as a dragsource\n * @param type The dragsource type\n * @param spec The drag source specification\n * @param collect The props collector function\n * @param options DnD options\n */\n\nexport function DragSource(type, spec, collect) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  checkDecoratorArguments('DragSource', 'type, spec, collect[, options]', type, spec, collect, options);\n  var getType = type;\n\n  if (typeof type !== 'function') {\n    invariant(isValidType(type), 'Expected \"type\" provided as the first argument to DragSource to be ' + 'a string, or a function that returns a string given the current props. ' + 'Instead, received %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', type);\n\n    getType = function getType() {\n      return type;\n    };\n  }\n\n  invariant(isPlainObject(spec), 'Expected \"spec\" provided as the second argument to DragSource to be ' + 'a plain object. Instead, received %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', spec);\n  var createSource = createSourceFactory(spec);\n  invariant(typeof collect === 'function', 'Expected \"collect\" provided as the third argument to DragSource to be ' + 'a function that returns a plain object of props to inject. ' + 'Instead, received %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', collect);\n  invariant(isPlainObject(options), 'Expected \"options\" provided as the fourth argument to DragSource to be ' + 'a plain object when specified. ' + 'Instead, received %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', collect);\n  return function decorateSource(DecoratedComponent) {\n    return decorateHandler({\n      containerDisplayName: 'DragSource',\n      createHandler: createSource,\n      registerHandler: registerSource,\n      createConnector: function createConnector(backend) {\n        return new SourceConnector(backend);\n      },\n      createMonitor: function createMonitor(manager) {\n        return new DragSourceMonitorImpl(manager);\n      },\n      DecoratedComponent: DecoratedComponent,\n      getType: getType,\n      collect: collect,\n      options: options\n    });\n  };\n}"],"mappings":"AAAA,SAASA,SAAS,QAAQ,sBAAsB;AAChD,SAASC,cAAc,EAAEC,qBAAqB,EAAEC,eAAe,QAAQ,cAAc;AACrF,SAASC,uBAAuB,EAAEC,aAAa,EAAEC,WAAW,QAAQ,SAAS;AAC7E,SAASC,eAAe,QAAQ,mBAAmB;AACnD,SAASC,mBAAmB,QAAQ,uBAAuB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,UAAUA,CAACC,IAAI,EAAEC,IAAI,EAAEC,OAAO,EAAE;EAC9C,IAAIC,OAAO,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACpFV,uBAAuB,CAAC,YAAY,EAAE,gCAAgC,EAAEM,IAAI,EAAEC,IAAI,EAAEC,OAAO,EAAEC,OAAO,CAAC;EACrG,IAAII,OAAO,GAAGP,IAAI;EAElB,IAAI,OAAOA,IAAI,KAAK,UAAU,EAAE;IAC9BV,SAAS,CAACM,WAAW,CAACI,IAAI,CAAC,EAAE,qEAAqE,GAAG,yEAAyE,GAAG,wBAAwB,GAAG,sEAAsE,EAAEA,IAAI,CAAC;IAEzRO,OAAO,GAAG,SAASA,OAAOA,CAAA,EAAG;MAC3B,OAAOP,IAAI;IACb,CAAC;EACH;EAEAV,SAAS,CAACK,aAAa,CAACM,IAAI,CAAC,EAAE,sEAAsE,GAAG,wCAAwC,GAAG,sEAAsE,EAAEA,IAAI,CAAC;EAChO,IAAIO,YAAY,GAAGV,mBAAmB,CAACG,IAAI,CAAC;EAC5CX,SAAS,CAAC,OAAOY,OAAO,KAAK,UAAU,EAAE,wEAAwE,GAAG,6DAA6D,GAAG,wBAAwB,GAAG,sEAAsE,EAAEA,OAAO,CAAC;EAC/RZ,SAAS,CAACK,aAAa,CAACQ,OAAO,CAAC,EAAE,yEAAyE,GAAG,iCAAiC,GAAG,wBAAwB,GAAG,sEAAsE,EAAED,OAAO,CAAC;EAC7P,OAAO,SAASO,cAAcA,CAACC,kBAAkB,EAAE;IACjD,OAAOb,eAAe,CAAC;MACrBc,oBAAoB,EAAE,YAAY;MAClCC,aAAa,EAAEJ,YAAY;MAC3BK,eAAe,EAAEtB,cAAc;MAC/BuB,eAAe,EAAE,SAASA,eAAeA,CAACC,OAAO,EAAE;QACjD,OAAO,IAAItB,eAAe,CAACsB,OAAO,CAAC;MACrC,CAAC;MACDC,aAAa,EAAE,SAASA,aAAaA,CAACC,OAAO,EAAE;QAC7C,OAAO,IAAIzB,qBAAqB,CAACyB,OAAO,CAAC;MAC3C,CAAC;MACDP,kBAAkB,EAAEA,kBAAkB;MACtCH,OAAO,EAAEA,OAAO;MAChBL,OAAO,EAAEA,OAAO;MAChBC,OAAO,EAAEA;IACX,CAAC,CAAC;EACJ,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}