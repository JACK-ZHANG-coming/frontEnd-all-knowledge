{"ast":null,"code":"var _jsxFileName = \"/Users/zhangqiang/Documents/GitHub/frontEnd-all-knowledge/examples/react/a08antd\\u5E26\\u7F16\\u8F91\\u7684\\u8868\\u683C/src/App.tsx\";\n/**拖拽表格 */\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { DragSource, DropTarget } from 'react-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet dragingIndex = -1;\nclass BodyRow extends React.Component {\n  render() {\n    const {\n      isOver,\n      connectDragSource,\n      connectDropTarget,\n      moveRow,\n      ...restProps\n    } = this.props;\n    const style = {\n      ...restProps.style,\n      cursor: 'move'\n    };\n    let {\n      className\n    } = restProps;\n    if (isOver) {\n      if (restProps.index > dragingIndex) {\n        className += ' drop-over-downward';\n      }\n      if (restProps.index < dragingIndex) {\n        className += ' drop-over-upward';\n      }\n    }\n    return connectDragSource(connectDropTarget( /*#__PURE__*/_jsxDEV(\"tr\", {\n      ...restProps,\n      className: className,\n      style: style\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }, this)));\n  }\n}\nconst rowSource = {\n  beginDrag(props) {\n    dragingIndex = props.index;\n    return {\n      index: props.index\n    };\n  }\n};\nconst rowTarget = {\n  drop(props, monitor) {\n    const dragIndex = monitor.getItem().index;\n    const hoverIndex = props.index;\n\n    // Don't replace items with themselves\n    if (dragIndex === hoverIndex) {\n      return;\n    }\n\n    // Time to actually perform the action\n    props.moveRow(dragIndex, hoverIndex);\n\n    // Note: we're mutating the monitor item here!\n    // Generally it's better to avoid mutations,\n    // but it's good here for the sake of performance\n    // to avoid expensive index searches.\n    monitor.getItem().index = hoverIndex;\n  }\n};\nconst DragableBodyRow = DropTarget('row', rowTarget, (connect, monitor) => ({\n  connectDropTarget: connect.dropTarget(),\n  isOver: monitor.isOver()\n}))(DragSource('row', rowSource, connect => ({\n  connectDragSource: connect.dragSource()\n}))(BodyRow));\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name',\n  key: 'name'\n}, {\n  title: 'Age',\n  dataIndex: 'age',\n  key: 'age'\n}, {\n  title: 'Address',\n  dataIndex: 'address',\n  key: 'address'\n}];\nclass EditableTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.columns = void 0;\n    this.state = {};\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"123\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default EditableTable;","map":{"version":3,"names":["React","DragSource","DropTarget","jsxDEV","_jsxDEV","dragingIndex","BodyRow","Component","render","isOver","connectDragSource","connectDropTarget","moveRow","restProps","props","style","cursor","className","index","fileName","_jsxFileName","lineNumber","columnNumber","rowSource","beginDrag","rowTarget","drop","monitor","dragIndex","getItem","hoverIndex","DragableBodyRow","connect","dropTarget","dragSource","columns","title","dataIndex","key","EditableTable","constructor","state","children"],"sources":["/Users/zhangqiang/Documents/GitHub/frontEnd-all-knowledge/examples/react/a08antd带编辑的表格/src/App.tsx"],"sourcesContent":["/**拖拽表格 */\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Table, Input, InputNumber, Popconfirm } from 'antd';\nimport { DndProvider, DragSource, DropTarget } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport update from 'immutability-helper';\n\nlet dragingIndex = -1;\n\nclass BodyRow extends React.Component {\n  render() {\n    const { isOver, connectDragSource, connectDropTarget, moveRow, ...restProps } = this.props;\n    const style = { ...restProps.style, cursor: 'move' };\n\n    let { className } = restProps;\n    if (isOver) {\n      if (restProps.index > dragingIndex) {\n        className += ' drop-over-downward';\n      }\n      if (restProps.index < dragingIndex) {\n        className += ' drop-over-upward';\n      }\n    }\n\n    return connectDragSource(\n      connectDropTarget(<tr {...restProps} className={className} style={style} />),\n    );\n  }\n}\n\nconst rowSource = {\n  beginDrag(props) {\n    dragingIndex = props.index;\n    return {\n      index: props.index,\n    };\n  },\n};\n\nconst rowTarget = {\n  drop(props, monitor) {\n    const dragIndex = monitor.getItem().index;\n    const hoverIndex = props.index;\n\n    // Don't replace items with themselves\n    if (dragIndex === hoverIndex) {\n      return;\n    }\n\n    // Time to actually perform the action\n    props.moveRow(dragIndex, hoverIndex);\n\n    // Note: we're mutating the monitor item here!\n    // Generally it's better to avoid mutations,\n    // but it's good here for the sake of performance\n    // to avoid expensive index searches.\n    monitor.getItem().index = hoverIndex;\n  },\n};\n\nconst DragableBodyRow = DropTarget('row', rowTarget, (connect, monitor) => ({\n  connectDropTarget: connect.dropTarget(),\n  isOver: monitor.isOver(),\n}))(\n  DragSource('row', rowSource, connect => ({\n    connectDragSource: connect.dragSource(),\n  }))(BodyRow),\n);\n\nconst columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age',\n    key: 'age',\n  },\n  {\n    title: 'Address',\n    dataIndex: 'address',\n    key: 'address',\n  },\n];\n\n\nexport interface CAFormOfTableProps {\n\n}\n\nexport interface CAFormOfTableState {\n\n}\n\n\nclass EditableTable extends React.Component<any, any>{\n  private columns;\n  constructor(props: any) {\n    super(props);\n    this.state = {};\n  }\n\n\n  render() {\n    return (\n      <div>123</div>\n    );\n  }\n}\n\nexport default EditableTable;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}