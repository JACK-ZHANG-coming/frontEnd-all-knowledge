{"ast":null,"code":"var _jsxFileName = \"/Users/zhangqiang/Documents/GitHub/frontEnd-all-knowledge/examples/react/a08antd\\u5E26\\u7F16\\u8F91\\u7684\\u8868\\u683C/src/App.tsx\";\n/**拖拽表格 */\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Table, InputNumber } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [];\nfor (let i = 0; i < 12; i++) {\n  data.push({\n    key: i.toString(),\n    name: `Edrward ${i}`,\n    age: 32,\n    address: `London Park no. ${i}`\n  });\n}\nclass EditableTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.columns = void 0;\n    this.state = {\n      data\n    };\n    this.columns = [{\n      title: 'name11',\n      dataIndex: 'name',\n      width: '25%',\n      editable: true\n    }, {\n      title: 'age',\n      dataIndex: 'age',\n      width: '15%',\n      editable: true,\n      render: (text, record) => {\n        return /*#__PURE__*/_jsxDEV(InputNumber, {\n          value: text,\n          onChange: e => {\n            this.save('age', e, record, record.key);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 18\n        });\n      }\n    }, {\n      title: 'address',\n      dataIndex: 'address',\n      width: '40%',\n      editable: true\n    }];\n  }\n  /**\n   * 保存表格数据\n   * @param editKey 当前编辑的这一行英文索引名 dataIndex\n   * @param text 当前编辑的内容值\n   * @param record 当前行数据\n   * @param key 当前编辑的这一行索引\n   */\n  save(dataIndex, text, record, key) {\n    const newData = [...this.state.data];\n    const index = newData.findIndex(item => key === item.key); // 这里后面根据dataIndex来查找\n    console.log('dataIndex,text,record, key:', dataIndex, text, record, key);\n    console.log('index:', index);\n    if (index > -1) {\n      const item = newData[index];\n      newData.splice(index, 1, {\n        ...item,\n        [`${dataIndex}`]: text\n      });\n      console.log('newData===>', newData);\n      this.setState({\n        data: newData\n      });\n    } else {\n      newData.push(record);\n      this.setState({\n        data: newData\n      });\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Table, {\n      bordered: true,\n      dataSource: this.state.data,\n      columns: this.columns\n      // rowClassName=\"editable-row\"\n      // pagination={false}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default EditableTable;","map":{"version":3,"names":["React","Table","InputNumber","jsxDEV","_jsxDEV","data","i","push","key","toString","name","age","address","EditableTable","Component","constructor","props","columns","state","title","dataIndex","width","editable","render","text","record","value","onChange","e","save","fileName","_jsxFileName","lineNumber","columnNumber","newData","index","findIndex","item","console","log","splice","setState","bordered","dataSource"],"sources":["/Users/zhangqiang/Documents/GitHub/frontEnd-all-knowledge/examples/react/a08antd带编辑的表格/src/App.tsx"],"sourcesContent":["/**拖拽表格 */\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Table, Input, InputNumber, Popconfirm } from 'antd';\n\n\n\nconst data: any = [];\nfor (let i = 0; i < 12; i++) {\n  data.push({\n    key: i.toString(),\n    name: `Edrward ${i}`,\n    age: 32,\n    address: `London Park no. ${i}`,\n  });\n}\nexport interface CAFormOfTableProps {\n\n}\n\nexport interface CAFormOfTableState {\n  data: any\n}\n\n\nclass EditableTable extends React.Component<CAFormOfTableProps, CAFormOfTableState>{\n  private columns;\n  constructor(props: CAFormOfTableProps) {\n    super(props);\n    this.state = { data };\n    this.columns = [\n      {\n        title: 'name11',\n        dataIndex: 'name',\n        width: '25%',\n        editable: true,\n      },\n      {\n        title: 'age',\n        dataIndex: 'age',\n        width: '15%',\n        editable: true,\n        render: (text, record) => {\n          return <InputNumber\n            value={text}\n            onChange={(e) => {\n              this.save('age', e, record, record.key)\n            }}></InputNumber>\n        }\n      },\n      {\n        title: 'address',\n        dataIndex: 'address',\n        width: '40%',\n        editable: true,\n      }\n    ];\n  }\n  /**\n   * 保存表格数据\n   * @param editKey 当前编辑的这一行英文索引名 dataIndex\n   * @param text 当前编辑的内容值\n   * @param record 当前行数据\n   * @param key 当前编辑的这一行索引\n   */\n  save<T>(dataIndex: string, text: any, record: T, key?: string) {\n    const newData: any = [...this.state.data];\n    const index = newData.findIndex(item => key === item.key); // 这里后面根据dataIndex来查找\n    console.log('dataIndex,text,record, key:', dataIndex, text, record, key)\n    console.log('index:', index)\n    if (index > -1) {\n      const item = newData[index];\n      newData.splice(index, 1, {\n        ...item,\n        [`${dataIndex}`]: text,\n      });\n      console.log('newData===>', newData)\n      this.setState({ data: newData });\n    } else {\n      newData.push(record);\n      this.setState({ data: newData });\n    }\n  }\n\n\n  render() {\n\n\n    return (\n      <Table\n        bordered\n        dataSource={this.state.data}\n        columns={this.columns}\n      // rowClassName=\"editable-row\"\n      // pagination={false}\n      />\n    );\n  }\n}\n\nexport default EditableTable;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}