{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule keyCommandBackspaceWord\n * @format\n * \n */\n\n'use strict';\n\nvar DraftRemovableWord = require('./DraftRemovableWord');\nvar EditorState = require('./EditorState');\nvar moveSelectionBackward = require('./moveSelectionBackward');\nvar removeTextWithStrategy = require('./removeTextWithStrategy');\n\n/**\n * Delete the word that is left of the cursor, as well as any spaces or\n * punctuation after the word.\n */\nfunction keyCommandBackspaceWord(editorState) {\n  var afterRemoval = removeTextWithStrategy(editorState, function (strategyState) {\n    var selection = strategyState.getSelection();\n    var offset = selection.getStartOffset();\n    // If there are no words before the cursor, remove the preceding newline.\n    if (offset === 0) {\n      return moveSelectionBackward(strategyState, 1);\n    }\n    var key = selection.getStartKey();\n    var content = strategyState.getCurrentContent();\n    var text = content.getBlockForKey(key).getText().slice(0, offset);\n    var toRemove = DraftRemovableWord.getBackward(text);\n    return moveSelectionBackward(strategyState, toRemove.length || 1);\n  }, 'backward');\n  if (afterRemoval === editorState.getCurrentContent()) {\n    return editorState;\n  }\n  return EditorState.push(editorState, afterRemoval, 'remove-range');\n}\nmodule.exports = keyCommandBackspaceWord;","map":{"version":3,"names":["DraftRemovableWord","require","EditorState","moveSelectionBackward","removeTextWithStrategy","keyCommandBackspaceWord","editorState","afterRemoval","strategyState","selection","getSelection","offset","getStartOffset","key","getStartKey","content","getCurrentContent","text","getBlockForKey","getText","slice","toRemove","getBackward","length","push","module","exports"],"sources":["/Users/zhangqiang/Documents/GitHub/frontEnd-all-knowledge/examples/react/a08antd带编辑的表格/node_modules/rc-editor-core/node_modules/draft-js/lib/keyCommandBackspaceWord.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule keyCommandBackspaceWord\n * @format\n * \n */\n\n'use strict';\n\nvar DraftRemovableWord = require('./DraftRemovableWord');\nvar EditorState = require('./EditorState');\n\nvar moveSelectionBackward = require('./moveSelectionBackward');\nvar removeTextWithStrategy = require('./removeTextWithStrategy');\n\n/**\n * Delete the word that is left of the cursor, as well as any spaces or\n * punctuation after the word.\n */\nfunction keyCommandBackspaceWord(editorState) {\n  var afterRemoval = removeTextWithStrategy(editorState, function (strategyState) {\n    var selection = strategyState.getSelection();\n    var offset = selection.getStartOffset();\n    // If there are no words before the cursor, remove the preceding newline.\n    if (offset === 0) {\n      return moveSelectionBackward(strategyState, 1);\n    }\n    var key = selection.getStartKey();\n    var content = strategyState.getCurrentContent();\n    var text = content.getBlockForKey(key).getText().slice(0, offset);\n    var toRemove = DraftRemovableWord.getBackward(text);\n    return moveSelectionBackward(strategyState, toRemove.length || 1);\n  }, 'backward');\n\n  if (afterRemoval === editorState.getCurrentContent()) {\n    return editorState;\n  }\n\n  return EditorState.push(editorState, afterRemoval, 'remove-range');\n}\n\nmodule.exports = keyCommandBackspaceWord;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,kBAAkB,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AACxD,IAAIC,WAAW,GAAGD,OAAO,CAAC,eAAe,CAAC;AAE1C,IAAIE,qBAAqB,GAAGF,OAAO,CAAC,yBAAyB,CAAC;AAC9D,IAAIG,sBAAsB,GAAGH,OAAO,CAAC,0BAA0B,CAAC;;AAEhE;AACA;AACA;AACA;AACA,SAASI,uBAAuBA,CAACC,WAAW,EAAE;EAC5C,IAAIC,YAAY,GAAGH,sBAAsB,CAACE,WAAW,EAAE,UAAUE,aAAa,EAAE;IAC9E,IAAIC,SAAS,GAAGD,aAAa,CAACE,YAAY,CAAC,CAAC;IAC5C,IAAIC,MAAM,GAAGF,SAAS,CAACG,cAAc,CAAC,CAAC;IACvC;IACA,IAAID,MAAM,KAAK,CAAC,EAAE;MAChB,OAAOR,qBAAqB,CAACK,aAAa,EAAE,CAAC,CAAC;IAChD;IACA,IAAIK,GAAG,GAAGJ,SAAS,CAACK,WAAW,CAAC,CAAC;IACjC,IAAIC,OAAO,GAAGP,aAAa,CAACQ,iBAAiB,CAAC,CAAC;IAC/C,IAAIC,IAAI,GAAGF,OAAO,CAACG,cAAc,CAACL,GAAG,CAAC,CAACM,OAAO,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAET,MAAM,CAAC;IACjE,IAAIU,QAAQ,GAAGrB,kBAAkB,CAACsB,WAAW,CAACL,IAAI,CAAC;IACnD,OAAOd,qBAAqB,CAACK,aAAa,EAAEa,QAAQ,CAACE,MAAM,IAAI,CAAC,CAAC;EACnE,CAAC,EAAE,UAAU,CAAC;EAEd,IAAIhB,YAAY,KAAKD,WAAW,CAACU,iBAAiB,CAAC,CAAC,EAAE;IACpD,OAAOV,WAAW;EACpB;EAEA,OAAOJ,WAAW,CAACsB,IAAI,CAAClB,WAAW,EAAEC,YAAY,EAAE,cAAc,CAAC;AACpE;AAEAkB,MAAM,CAACC,OAAO,GAAGrB,uBAAuB"},"metadata":{},"sourceType":"script","externalDependencies":[]}