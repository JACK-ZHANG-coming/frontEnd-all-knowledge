{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n * \n */\n\n/**\n * Stateful API for text direction detection\n *\n * This class can be used in applications where you need to detect the\n * direction of a sequence of text blocks, where each direction shall be used\n * as the fallback direction for the next one.\n *\n * NOTE: A default direction, if not provided, is set based on the global\n *       direction, as defined by `UnicodeBidiDirection`.\n *\n * == Example ==\n * ```\n * var UnicodeBidiService = require('UnicodeBidiService');\n *\n * var bidiService = new UnicodeBidiService();\n *\n * ...\n *\n * bidiService.reset();\n * for (var para in paragraphs) {\n *   var dir = bidiService.getDirection(para);\n *   ...\n * }\n * ```\n *\n * Part of our implementation of Unicode Bidirectional Algorithm (UBA)\n * Unicode Standard Annex #9 (UAX9)\n * http://www.unicode.org/reports/tr9/\n */\n\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nvar UnicodeBidi = require('./UnicodeBidi');\nvar UnicodeBidiDirection = require('./UnicodeBidiDirection');\nvar invariant = require('./invariant');\nvar UnicodeBidiService = function () {\n  /**\n   * Stateful class for paragraph direction detection\n   *\n   * @param defaultDir  Default direction of the service\n   */\n  function UnicodeBidiService(defaultDir) {\n    _classCallCheck(this, UnicodeBidiService);\n    if (!defaultDir) {\n      defaultDir = UnicodeBidiDirection.getGlobalDir();\n    } else {\n      !UnicodeBidiDirection.isStrong(defaultDir) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Default direction must be a strong direction (LTR or RTL)') : invariant(false) : void 0;\n    }\n    this._defaultDir = defaultDir;\n    this.reset();\n  }\n\n  /**\n   * Reset the internal state\n   *\n   * Instead of creating a new instance, you can just reset() your instance\n   * everytime you start a new loop.\n   */\n\n  UnicodeBidiService.prototype.reset = function reset() {\n    this._lastDir = this._defaultDir;\n  };\n\n  /**\n   * Returns the direction of a block of text, and remembers it as the\n   * fall-back direction for the next paragraph.\n   *\n   * @param str  A text block, e.g. paragraph, table cell, tag\n   * @return     The resolved direction\n   */\n\n  UnicodeBidiService.prototype.getDirection = function getDirection(str) {\n    this._lastDir = UnicodeBidi.getDirection(str, this._lastDir);\n    return this._lastDir;\n  };\n  return UnicodeBidiService;\n}();\nmodule.exports = UnicodeBidiService;","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","UnicodeBidi","require","UnicodeBidiDirection","invariant","UnicodeBidiService","defaultDir","getGlobalDir","isStrong","process","env","NODE_ENV","_defaultDir","reset","prototype","_lastDir","getDirection","str","module","exports"],"sources":["/Users/zhangqiang/Documents/GitHub/frontEnd-all-knowledge/examples/react/a08antd带编辑的表格/node_modules/fbjs/lib/UnicodeBidiService.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n * \n */\n\n/**\n * Stateful API for text direction detection\n *\n * This class can be used in applications where you need to detect the\n * direction of a sequence of text blocks, where each direction shall be used\n * as the fallback direction for the next one.\n *\n * NOTE: A default direction, if not provided, is set based on the global\n *       direction, as defined by `UnicodeBidiDirection`.\n *\n * == Example ==\n * ```\n * var UnicodeBidiService = require('UnicodeBidiService');\n *\n * var bidiService = new UnicodeBidiService();\n *\n * ...\n *\n * bidiService.reset();\n * for (var para in paragraphs) {\n *   var dir = bidiService.getDirection(para);\n *   ...\n * }\n * ```\n *\n * Part of our implementation of Unicode Bidirectional Algorithm (UBA)\n * Unicode Standard Annex #9 (UAX9)\n * http://www.unicode.org/reports/tr9/\n */\n\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar UnicodeBidi = require('./UnicodeBidi');\nvar UnicodeBidiDirection = require('./UnicodeBidiDirection');\n\nvar invariant = require('./invariant');\n\nvar UnicodeBidiService = function () {\n\n  /**\n   * Stateful class for paragraph direction detection\n   *\n   * @param defaultDir  Default direction of the service\n   */\n  function UnicodeBidiService(defaultDir) {\n    _classCallCheck(this, UnicodeBidiService);\n\n    if (!defaultDir) {\n      defaultDir = UnicodeBidiDirection.getGlobalDir();\n    } else {\n      !UnicodeBidiDirection.isStrong(defaultDir) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Default direction must be a strong direction (LTR or RTL)') : invariant(false) : void 0;\n    }\n    this._defaultDir = defaultDir;\n    this.reset();\n  }\n\n  /**\n   * Reset the internal state\n   *\n   * Instead of creating a new instance, you can just reset() your instance\n   * everytime you start a new loop.\n   */\n\n\n  UnicodeBidiService.prototype.reset = function reset() {\n    this._lastDir = this._defaultDir;\n  };\n\n  /**\n   * Returns the direction of a block of text, and remembers it as the\n   * fall-back direction for the next paragraph.\n   *\n   * @param str  A text block, e.g. paragraph, table cell, tag\n   * @return     The resolved direction\n   */\n\n\n  UnicodeBidiService.prototype.getDirection = function getDirection(str) {\n    this._lastDir = UnicodeBidi.getDirection(str, this._lastDir);\n    return this._lastDir;\n  };\n\n  return UnicodeBidiService;\n}();\n\nmodule.exports = UnicodeBidiService;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,SAASA,eAAeA,CAACC,QAAQ,EAAEC,WAAW,EAAE;EAAE,IAAI,EAAED,QAAQ,YAAYC,WAAW,CAAC,EAAE;IAAE,MAAM,IAAIC,SAAS,CAAC,mCAAmC,CAAC;EAAE;AAAE;AAExJ,IAAIC,WAAW,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC1C,IAAIC,oBAAoB,GAAGD,OAAO,CAAC,wBAAwB,CAAC;AAE5D,IAAIE,SAAS,GAAGF,OAAO,CAAC,aAAa,CAAC;AAEtC,IAAIG,kBAAkB,GAAG,YAAY;EAEnC;AACF;AACA;AACA;AACA;EACE,SAASA,kBAAkBA,CAACC,UAAU,EAAE;IACtCT,eAAe,CAAC,IAAI,EAAEQ,kBAAkB,CAAC;IAEzC,IAAI,CAACC,UAAU,EAAE;MACfA,UAAU,GAAGH,oBAAoB,CAACI,YAAY,CAAC,CAAC;IAClD,CAAC,MAAM;MACL,CAACJ,oBAAoB,CAACK,QAAQ,CAACF,UAAU,CAAC,GAAGG,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGP,SAAS,CAAC,KAAK,EAAE,2DAA2D,CAAC,GAAGA,SAAS,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;IAChM;IACA,IAAI,CAACQ,WAAW,GAAGN,UAAU;IAC7B,IAAI,CAACO,KAAK,CAAC,CAAC;EACd;;EAEA;AACF;AACA;AACA;AACA;AACA;;EAGER,kBAAkB,CAACS,SAAS,CAACD,KAAK,GAAG,SAASA,KAAKA,CAAA,EAAG;IACpD,IAAI,CAACE,QAAQ,GAAG,IAAI,CAACH,WAAW;EAClC,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;AACA;;EAGEP,kBAAkB,CAACS,SAAS,CAACE,YAAY,GAAG,SAASA,YAAYA,CAACC,GAAG,EAAE;IACrE,IAAI,CAACF,QAAQ,GAAGd,WAAW,CAACe,YAAY,CAACC,GAAG,EAAE,IAAI,CAACF,QAAQ,CAAC;IAC5D,OAAO,IAAI,CAACA,QAAQ;EACtB,CAAC;EAED,OAAOV,kBAAkB;AAC3B,CAAC,CAAC,CAAC;AAEHa,MAAM,CAACC,OAAO,GAAGd,kBAAkB"},"metadata":{},"sourceType":"script","externalDependencies":[]}