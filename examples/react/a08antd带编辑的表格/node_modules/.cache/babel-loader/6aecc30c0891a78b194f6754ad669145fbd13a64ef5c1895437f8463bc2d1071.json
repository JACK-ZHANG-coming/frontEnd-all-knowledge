{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SecondaryClipboard\n * @format\n * \n */\n\n'use strict';\n\nvar DraftModifier = require('./DraftModifier');\nvar EditorState = require('./EditorState');\nvar getContentStateFragment = require('./getContentStateFragment');\nvar nullthrows = require('fbjs/lib/nullthrows');\nvar clipboard = null;\n\n/**\n * Some systems offer a \"secondary\" clipboard to allow quick internal cut\n * and paste behavior. For instance, Ctrl+K (cut) and Ctrl+Y (paste).\n */\nvar SecondaryClipboard = {\n  cut: function cut(editorState) {\n    var content = editorState.getCurrentContent();\n    var selection = editorState.getSelection();\n    var targetRange = null;\n    if (selection.isCollapsed()) {\n      var anchorKey = selection.getAnchorKey();\n      var blockEnd = content.getBlockForKey(anchorKey).getLength();\n      if (blockEnd === selection.getAnchorOffset()) {\n        return editorState;\n      }\n      targetRange = selection.set('focusOffset', blockEnd);\n    } else {\n      targetRange = selection;\n    }\n    targetRange = nullthrows(targetRange);\n    clipboard = getContentStateFragment(content, targetRange);\n    var afterRemoval = DraftModifier.removeRange(content, targetRange, 'forward');\n    if (afterRemoval === content) {\n      return editorState;\n    }\n    return EditorState.push(editorState, afterRemoval, 'remove-range');\n  },\n  paste: function paste(editorState) {\n    if (!clipboard) {\n      return editorState;\n    }\n    var newContent = DraftModifier.replaceWithFragment(editorState.getCurrentContent(), editorState.getSelection(), clipboard);\n    return EditorState.push(editorState, newContent, 'insert-fragment');\n  }\n};\nmodule.exports = SecondaryClipboard;","map":{"version":3,"names":["DraftModifier","require","EditorState","getContentStateFragment","nullthrows","clipboard","SecondaryClipboard","cut","editorState","content","getCurrentContent","selection","getSelection","targetRange","isCollapsed","anchorKey","getAnchorKey","blockEnd","getBlockForKey","getLength","getAnchorOffset","set","afterRemoval","removeRange","push","paste","newContent","replaceWithFragment","module","exports"],"sources":["/Users/zhangqiang/Documents/GitHub/frontEnd-all-knowledge/examples/react/a08antd带编辑的表格/node_modules/rc-editor-mention/node_modules/draft-js/lib/SecondaryClipboard.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SecondaryClipboard\n * @format\n * \n */\n\n'use strict';\n\nvar DraftModifier = require('./DraftModifier');\nvar EditorState = require('./EditorState');\n\nvar getContentStateFragment = require('./getContentStateFragment');\nvar nullthrows = require('fbjs/lib/nullthrows');\n\nvar clipboard = null;\n\n/**\n * Some systems offer a \"secondary\" clipboard to allow quick internal cut\n * and paste behavior. For instance, Ctrl+K (cut) and Ctrl+Y (paste).\n */\nvar SecondaryClipboard = {\n  cut: function cut(editorState) {\n    var content = editorState.getCurrentContent();\n    var selection = editorState.getSelection();\n    var targetRange = null;\n\n    if (selection.isCollapsed()) {\n      var anchorKey = selection.getAnchorKey();\n      var blockEnd = content.getBlockForKey(anchorKey).getLength();\n\n      if (blockEnd === selection.getAnchorOffset()) {\n        return editorState;\n      }\n\n      targetRange = selection.set('focusOffset', blockEnd);\n    } else {\n      targetRange = selection;\n    }\n\n    targetRange = nullthrows(targetRange);\n    clipboard = getContentStateFragment(content, targetRange);\n\n    var afterRemoval = DraftModifier.removeRange(content, targetRange, 'forward');\n\n    if (afterRemoval === content) {\n      return editorState;\n    }\n\n    return EditorState.push(editorState, afterRemoval, 'remove-range');\n  },\n\n  paste: function paste(editorState) {\n    if (!clipboard) {\n      return editorState;\n    }\n\n    var newContent = DraftModifier.replaceWithFragment(editorState.getCurrentContent(), editorState.getSelection(), clipboard);\n\n    return EditorState.push(editorState, newContent, 'insert-fragment');\n  }\n};\n\nmodule.exports = SecondaryClipboard;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,aAAa,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAC9C,IAAIC,WAAW,GAAGD,OAAO,CAAC,eAAe,CAAC;AAE1C,IAAIE,uBAAuB,GAAGF,OAAO,CAAC,2BAA2B,CAAC;AAClE,IAAIG,UAAU,GAAGH,OAAO,CAAC,qBAAqB,CAAC;AAE/C,IAAII,SAAS,GAAG,IAAI;;AAEpB;AACA;AACA;AACA;AACA,IAAIC,kBAAkB,GAAG;EACvBC,GAAG,EAAE,SAASA,GAAGA,CAACC,WAAW,EAAE;IAC7B,IAAIC,OAAO,GAAGD,WAAW,CAACE,iBAAiB,CAAC,CAAC;IAC7C,IAAIC,SAAS,GAAGH,WAAW,CAACI,YAAY,CAAC,CAAC;IAC1C,IAAIC,WAAW,GAAG,IAAI;IAEtB,IAAIF,SAAS,CAACG,WAAW,CAAC,CAAC,EAAE;MAC3B,IAAIC,SAAS,GAAGJ,SAAS,CAACK,YAAY,CAAC,CAAC;MACxC,IAAIC,QAAQ,GAAGR,OAAO,CAACS,cAAc,CAACH,SAAS,CAAC,CAACI,SAAS,CAAC,CAAC;MAE5D,IAAIF,QAAQ,KAAKN,SAAS,CAACS,eAAe,CAAC,CAAC,EAAE;QAC5C,OAAOZ,WAAW;MACpB;MAEAK,WAAW,GAAGF,SAAS,CAACU,GAAG,CAAC,aAAa,EAAEJ,QAAQ,CAAC;IACtD,CAAC,MAAM;MACLJ,WAAW,GAAGF,SAAS;IACzB;IAEAE,WAAW,GAAGT,UAAU,CAACS,WAAW,CAAC;IACrCR,SAAS,GAAGF,uBAAuB,CAACM,OAAO,EAAEI,WAAW,CAAC;IAEzD,IAAIS,YAAY,GAAGtB,aAAa,CAACuB,WAAW,CAACd,OAAO,EAAEI,WAAW,EAAE,SAAS,CAAC;IAE7E,IAAIS,YAAY,KAAKb,OAAO,EAAE;MAC5B,OAAOD,WAAW;IACpB;IAEA,OAAON,WAAW,CAACsB,IAAI,CAAChB,WAAW,EAAEc,YAAY,EAAE,cAAc,CAAC;EACpE,CAAC;EAEDG,KAAK,EAAE,SAASA,KAAKA,CAACjB,WAAW,EAAE;IACjC,IAAI,CAACH,SAAS,EAAE;MACd,OAAOG,WAAW;IACpB;IAEA,IAAIkB,UAAU,GAAG1B,aAAa,CAAC2B,mBAAmB,CAACnB,WAAW,CAACE,iBAAiB,CAAC,CAAC,EAAEF,WAAW,CAACI,YAAY,CAAC,CAAC,EAAEP,SAAS,CAAC;IAE1H,OAAOH,WAAW,CAACsB,IAAI,CAAChB,WAAW,EAAEkB,UAAU,EAAE,iBAAiB,CAAC;EACrE;AACF,CAAC;AAEDE,MAAM,CAACC,OAAO,GAAGvB,kBAAkB"},"metadata":{},"sourceType":"script","externalDependencies":[]}