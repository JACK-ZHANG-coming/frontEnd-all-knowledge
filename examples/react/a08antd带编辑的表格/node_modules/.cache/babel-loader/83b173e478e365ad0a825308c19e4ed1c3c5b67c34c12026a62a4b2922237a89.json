{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CSSMotionList from \"rc-animate/es/CSSMotionList\";\nimport Selection from './Selection';\nimport SearchInput from '../../SearchInput';\nvar NODE_SELECTOR = 'selector';\nvar NODE_SEARCH = 'search';\nvar TREE_SELECT_EMPTY_VALUE_KEY = 'RC_TREE_SELECT_EMPTY_VALUE_KEY';\nvar SelectorList = function SelectorList(props) {\n  var selectorValueList = props.selectorValueList,\n    choiceTransitionName = props.choiceTransitionName,\n    prefixCls = props.prefixCls,\n    onChoiceAnimationLeave = props.onChoiceAnimationLeave,\n    labelInValue = props.labelInValue,\n    maxTagCount = props.maxTagCount,\n    maxTagPlaceholder = props.maxTagPlaceholder,\n    showSearch = props.showSearch,\n    valueEntities = props.valueEntities,\n    inputRef = props.inputRef,\n    onMultipleSelectorRemove = props.onMultipleSelectorRemove;\n  var nodeKeys = []; // Check if `maxTagCount` is set\n\n  var myValueList = selectorValueList;\n  if (maxTagCount >= 0) {\n    myValueList = selectorValueList.slice(0, maxTagCount);\n  } // Basic selectors\n\n  myValueList.forEach(function (_ref) {\n    var label = _ref.label,\n      value = _ref.value;\n    var _ref2 = (valueEntities[value] || {}).node || {},\n      _ref2$props = _ref2.props;\n    _ref2$props = _ref2$props === void 0 ? {} : _ref2$props;\n    var disabled = _ref2$props.disabled;\n    nodeKeys.push({\n      key: value,\n      type: NODE_SELECTOR,\n      label: label,\n      value: value,\n      disabled: disabled\n    });\n  }); // Rest node count\n\n  if (maxTagCount >= 0 && maxTagCount < selectorValueList.length) {\n    var content = \"+ \".concat(selectorValueList.length - maxTagCount, \" ...\");\n    if (typeof maxTagPlaceholder === 'string') {\n      content = maxTagPlaceholder;\n    } else if (typeof maxTagPlaceholder === 'function') {\n      var restValueList = selectorValueList.slice(maxTagCount);\n      content = maxTagPlaceholder(labelInValue ? restValueList : restValueList.map(function (_ref3) {\n        var value = _ref3.value;\n        return value;\n      }));\n    }\n    nodeKeys.push({\n      key: 'rc-tree-select-internal-max-tag-counter',\n      type: NODE_SELECTOR,\n      label: content,\n      value: null,\n      disabled: true\n    });\n  } // Search node\n\n  if (showSearch !== false) {\n    nodeKeys.push({\n      key: '__input',\n      type: NODE_SEARCH\n    });\n  }\n  return React.createElement(CSSMotionList, {\n    keys: nodeKeys,\n    className: \"\".concat(prefixCls, \"-selection__rendered\"),\n    component: \"ul\",\n    role: \"menubar\",\n    motionName: choiceTransitionName,\n    onLeaveEnd: onChoiceAnimationLeave\n  }, function (_ref4) {\n    var type = _ref4.type,\n      label = _ref4.label,\n      value = _ref4.value,\n      disabled = _ref4.disabled,\n      className = _ref4.className,\n      style = _ref4.style;\n    if (type === NODE_SELECTOR) {\n      return React.createElement(Selection, _extends({}, props, {\n        className: className,\n        style: style,\n        key: value || TREE_SELECT_EMPTY_VALUE_KEY,\n        label: label,\n        value: value,\n        onRemove: disabled ? null : onMultipleSelectorRemove\n      }));\n    }\n    return React.createElement(\"li\", {\n      className: \"\".concat(prefixCls, \"-search \").concat(prefixCls, \"-search--inline\")\n    }, React.createElement(SearchInput, _extends({}, props, {\n      ref: inputRef,\n      needAlign: true\n    })));\n  });\n};\nSelectorList.propTypes = {\n  selectorValueList: PropTypes.array,\n  choiceTransitionName: PropTypes.string,\n  prefixCls: PropTypes.string,\n  onChoiceAnimationLeave: PropTypes.func,\n  labelInValue: PropTypes.bool,\n  showSearch: PropTypes.bool,\n  maxTagCount: PropTypes.number,\n  maxTagPlaceholder: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  valueEntities: PropTypes.object,\n  inputRef: PropTypes.func,\n  onMultipleSelectorRemove: PropTypes.func\n};\nexport default SelectorList;","map":{"version":3,"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","PropTypes","CSSMotionList","Selection","SearchInput","NODE_SELECTOR","NODE_SEARCH","TREE_SELECT_EMPTY_VALUE_KEY","SelectorList","props","selectorValueList","choiceTransitionName","prefixCls","onChoiceAnimationLeave","labelInValue","maxTagCount","maxTagPlaceholder","showSearch","valueEntities","inputRef","onMultipleSelectorRemove","nodeKeys","myValueList","slice","forEach","_ref","label","value","_ref2","node","_ref2$props","disabled","push","type","content","concat","restValueList","map","_ref3","createElement","keys","className","component","role","motionName","onLeaveEnd","_ref4","style","onRemove","ref","needAlign","propTypes","array","string","func","bool","number","oneOfType","object"],"sources":["/Users/zhangqiang/Documents/GitHub/frontEnd-all-knowledge/examples/react/a08antd带编辑的表格/node_modules/rc-tree-select/es/Selector/MultipleSelector/SelectorList.js"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CSSMotionList from \"rc-animate/es/CSSMotionList\";\nimport Selection from './Selection';\nimport SearchInput from '../../SearchInput';\nvar NODE_SELECTOR = 'selector';\nvar NODE_SEARCH = 'search';\nvar TREE_SELECT_EMPTY_VALUE_KEY = 'RC_TREE_SELECT_EMPTY_VALUE_KEY';\n\nvar SelectorList = function SelectorList(props) {\n  var selectorValueList = props.selectorValueList,\n      choiceTransitionName = props.choiceTransitionName,\n      prefixCls = props.prefixCls,\n      onChoiceAnimationLeave = props.onChoiceAnimationLeave,\n      labelInValue = props.labelInValue,\n      maxTagCount = props.maxTagCount,\n      maxTagPlaceholder = props.maxTagPlaceholder,\n      showSearch = props.showSearch,\n      valueEntities = props.valueEntities,\n      inputRef = props.inputRef,\n      onMultipleSelectorRemove = props.onMultipleSelectorRemove;\n  var nodeKeys = []; // Check if `maxTagCount` is set\n\n  var myValueList = selectorValueList;\n\n  if (maxTagCount >= 0) {\n    myValueList = selectorValueList.slice(0, maxTagCount);\n  } // Basic selectors\n\n\n  myValueList.forEach(function (_ref) {\n    var label = _ref.label,\n        value = _ref.value;\n\n    var _ref2 = (valueEntities[value] || {}).node || {},\n        _ref2$props = _ref2.props;\n\n    _ref2$props = _ref2$props === void 0 ? {} : _ref2$props;\n    var disabled = _ref2$props.disabled;\n    nodeKeys.push({\n      key: value,\n      type: NODE_SELECTOR,\n      label: label,\n      value: value,\n      disabled: disabled\n    });\n  }); // Rest node count\n\n  if (maxTagCount >= 0 && maxTagCount < selectorValueList.length) {\n    var content = \"+ \".concat(selectorValueList.length - maxTagCount, \" ...\");\n\n    if (typeof maxTagPlaceholder === 'string') {\n      content = maxTagPlaceholder;\n    } else if (typeof maxTagPlaceholder === 'function') {\n      var restValueList = selectorValueList.slice(maxTagCount);\n      content = maxTagPlaceholder(labelInValue ? restValueList : restValueList.map(function (_ref3) {\n        var value = _ref3.value;\n        return value;\n      }));\n    }\n\n    nodeKeys.push({\n      key: 'rc-tree-select-internal-max-tag-counter',\n      type: NODE_SELECTOR,\n      label: content,\n      value: null,\n      disabled: true\n    });\n  } // Search node\n\n\n  if (showSearch !== false) {\n    nodeKeys.push({\n      key: '__input',\n      type: NODE_SEARCH\n    });\n  }\n\n  return React.createElement(CSSMotionList, {\n    keys: nodeKeys,\n    className: \"\".concat(prefixCls, \"-selection__rendered\"),\n    component: \"ul\",\n    role: \"menubar\",\n    motionName: choiceTransitionName,\n    onLeaveEnd: onChoiceAnimationLeave\n  }, function (_ref4) {\n    var type = _ref4.type,\n        label = _ref4.label,\n        value = _ref4.value,\n        disabled = _ref4.disabled,\n        className = _ref4.className,\n        style = _ref4.style;\n\n    if (type === NODE_SELECTOR) {\n      return React.createElement(Selection, _extends({}, props, {\n        className: className,\n        style: style,\n        key: value || TREE_SELECT_EMPTY_VALUE_KEY,\n        label: label,\n        value: value,\n        onRemove: disabled ? null : onMultipleSelectorRemove\n      }));\n    }\n\n    return React.createElement(\"li\", {\n      className: \"\".concat(prefixCls, \"-search \").concat(prefixCls, \"-search--inline\")\n    }, React.createElement(SearchInput, _extends({}, props, {\n      ref: inputRef,\n      needAlign: true\n    })));\n  });\n};\n\nSelectorList.propTypes = {\n  selectorValueList: PropTypes.array,\n  choiceTransitionName: PropTypes.string,\n  prefixCls: PropTypes.string,\n  onChoiceAnimationLeave: PropTypes.func,\n  labelInValue: PropTypes.bool,\n  showSearch: PropTypes.bool,\n  maxTagCount: PropTypes.number,\n  maxTagPlaceholder: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  valueEntities: PropTypes.object,\n  inputRef: PropTypes.func,\n  onMultipleSelectorRemove: PropTypes.func\n};\nexport default SelectorList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}