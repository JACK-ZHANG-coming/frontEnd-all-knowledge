{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DraftEditorLeaf.react\n * @format\n * \n */\n\n'use strict';\n\nvar _assign = require('object-assign');\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nvar DraftEditorTextNode = require('./DraftEditorTextNode.react');\nvar React = require('react');\nvar ReactDOM = require('react-dom');\nvar invariant = require('fbjs/lib/invariant');\nvar setDraftEditorSelection = require('./setDraftEditorSelection');\n\n/**\n * All leaf nodes in the editor are spans with single text nodes. Leaf\n * elements are styled based on the merging of an optional custom style map\n * and a default style map.\n *\n * `DraftEditorLeaf` also provides a wrapper for calling into the imperative\n * DOM Selection API. In this way, top-level components can declaratively\n * maintain the selection state.\n */\nvar DraftEditorLeaf = function (_React$Component) {\n  _inherits(DraftEditorLeaf, _React$Component);\n  function DraftEditorLeaf() {\n    _classCallCheck(this, DraftEditorLeaf);\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n  DraftEditorLeaf.prototype._setSelection = function _setSelection() {\n    var selection = this.props.selection;\n\n    // If selection state is irrelevant to the parent block, no-op.\n\n    if (selection == null || !selection.getHasFocus()) {\n      return;\n    }\n    var _props = this.props,\n      block = _props.block,\n      start = _props.start,\n      text = _props.text;\n    var blockKey = block.getKey();\n    var end = start + text.length;\n    if (!selection.hasEdgeWithin(blockKey, start, end)) {\n      return;\n    }\n\n    // Determine the appropriate target node for selection. If the child\n    // is not a text node, it is a <br /> spacer. In this case, use the\n    // <span> itself as the selection target.\n    var node = ReactDOM.findDOMNode(this);\n    !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing node') : invariant(false) : void 0;\n    var child = node.firstChild;\n    !child ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing child') : invariant(false) : void 0;\n    var targetNode = void 0;\n    if (child.nodeType === Node.TEXT_NODE) {\n      targetNode = child;\n    } else if (child.tagName === 'BR') {\n      targetNode = node;\n    } else {\n      targetNode = child.firstChild;\n      !targetNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing targetNode') : invariant(false) : void 0;\n    }\n    setDraftEditorSelection(selection, targetNode, blockKey, start, end);\n  };\n  /**\n   * By making individual leaf instances aware of their context within\n   * the text of the editor, we can set our selection range more\n   * easily than we could in the non-React world.\n   *\n   * Note that this depends on our maintaining tight control over the\n   * DOM structure of the DraftEditor component. If leaves had multiple\n   * text nodes, this would be harder.\n   */\n\n  DraftEditorLeaf.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var leafNode = ReactDOM.findDOMNode(this.leaf);\n    !leafNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing leafNode') : invariant(false) : void 0;\n    return leafNode.textContent !== nextProps.text || nextProps.styleSet !== this.props.styleSet || nextProps.forceSelection;\n  };\n  DraftEditorLeaf.prototype.componentDidUpdate = function componentDidUpdate() {\n    this._setSelection();\n  };\n  DraftEditorLeaf.prototype.componentDidMount = function componentDidMount() {\n    this._setSelection();\n  };\n  DraftEditorLeaf.prototype.render = function render() {\n    var _this2 = this;\n    var block = this.props.block;\n    var text = this.props.text;\n\n    // If the leaf is at the end of its block and ends in a soft newline, append\n    // an extra line feed character. Browsers collapse trailing newline\n    // characters, which leaves the cursor in the wrong place after a\n    // shift+enter. The extra character repairs this.\n\n    if (text.endsWith('\\n') && this.props.isLast) {\n      text += '\\n';\n    }\n    var _props2 = this.props,\n      customStyleMap = _props2.customStyleMap,\n      customStyleFn = _props2.customStyleFn,\n      offsetKey = _props2.offsetKey,\n      styleSet = _props2.styleSet;\n    var styleObj = styleSet.reduce(function (map, styleName) {\n      var mergedStyles = {};\n      var style = customStyleMap[styleName];\n      if (style !== undefined && map.textDecoration !== style.textDecoration) {\n        // .trim() is necessary for IE9/10/11 and Edge\n        mergedStyles.textDecoration = [map.textDecoration, style.textDecoration].join(' ').trim();\n      }\n      return _assign(map, style, mergedStyles);\n    }, {});\n    if (customStyleFn) {\n      var newStyles = customStyleFn(styleSet, block);\n      styleObj = _assign(styleObj, newStyles);\n    }\n    return React.createElement('span', {\n      'data-offset-key': offsetKey,\n      ref: function ref(_ref) {\n        return _this2.leaf = _ref;\n      },\n      style: styleObj\n    }, React.createElement(DraftEditorTextNode, null, text));\n  };\n  return DraftEditorLeaf;\n}(React.Component);\nmodule.exports = DraftEditorLeaf;","map":{"version":3,"names":["_assign","require","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","DraftEditorTextNode","React","ReactDOM","invariant","setDraftEditorSelection","DraftEditorLeaf","_React$Component","apply","arguments","_setSelection","selection","props","getHasFocus","_props","block","start","text","blockKey","getKey","end","length","hasEdgeWithin","node","findDOMNode","process","env","NODE_ENV","child","firstChild","targetNode","nodeType","Node","TEXT_NODE","tagName","shouldComponentUpdate","nextProps","leafNode","leaf","textContent","styleSet","forceSelection","componentDidUpdate","componentDidMount","render","_this2","endsWith","isLast","_props2","customStyleMap","customStyleFn","offsetKey","styleObj","reduce","map","styleName","mergedStyles","style","undefined","textDecoration","join","trim","newStyles","createElement","ref","_ref","Component","module","exports"],"sources":["/Users/zhangqiang/Documents/GitHub/frontEnd-all-knowledge/examples/react/a08antd带编辑的表格/node_modules/rc-editor-core/node_modules/draft-js/lib/DraftEditorLeaf.react.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DraftEditorLeaf.react\n * @format\n * \n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar DraftEditorTextNode = require('./DraftEditorTextNode.react');\nvar React = require('react');\nvar ReactDOM = require('react-dom');\n\nvar invariant = require('fbjs/lib/invariant');\nvar setDraftEditorSelection = require('./setDraftEditorSelection');\n\n/**\n * All leaf nodes in the editor are spans with single text nodes. Leaf\n * elements are styled based on the merging of an optional custom style map\n * and a default style map.\n *\n * `DraftEditorLeaf` also provides a wrapper for calling into the imperative\n * DOM Selection API. In this way, top-level components can declaratively\n * maintain the selection state.\n */\nvar DraftEditorLeaf = function (_React$Component) {\n  _inherits(DraftEditorLeaf, _React$Component);\n\n  function DraftEditorLeaf() {\n    _classCallCheck(this, DraftEditorLeaf);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  DraftEditorLeaf.prototype._setSelection = function _setSelection() {\n    var selection = this.props.selection;\n\n    // If selection state is irrelevant to the parent block, no-op.\n\n    if (selection == null || !selection.getHasFocus()) {\n      return;\n    }\n\n    var _props = this.props,\n        block = _props.block,\n        start = _props.start,\n        text = _props.text;\n\n    var blockKey = block.getKey();\n    var end = start + text.length;\n    if (!selection.hasEdgeWithin(blockKey, start, end)) {\n      return;\n    }\n\n    // Determine the appropriate target node for selection. If the child\n    // is not a text node, it is a <br /> spacer. In this case, use the\n    // <span> itself as the selection target.\n    var node = ReactDOM.findDOMNode(this);\n    !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing node') : invariant(false) : void 0;\n    var child = node.firstChild;\n    !child ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing child') : invariant(false) : void 0;\n    var targetNode = void 0;\n\n    if (child.nodeType === Node.TEXT_NODE) {\n      targetNode = child;\n    } else if (child.tagName === 'BR') {\n      targetNode = node;\n    } else {\n      targetNode = child.firstChild;\n      !targetNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing targetNode') : invariant(false) : void 0;\n    }\n\n    setDraftEditorSelection(selection, targetNode, blockKey, start, end);\n  };\n  /**\n   * By making individual leaf instances aware of their context within\n   * the text of the editor, we can set our selection range more\n   * easily than we could in the non-React world.\n   *\n   * Note that this depends on our maintaining tight control over the\n   * DOM structure of the DraftEditor component. If leaves had multiple\n   * text nodes, this would be harder.\n   */\n\n  DraftEditorLeaf.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var leafNode = ReactDOM.findDOMNode(this.leaf);\n    !leafNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing leafNode') : invariant(false) : void 0;\n    return leafNode.textContent !== nextProps.text || nextProps.styleSet !== this.props.styleSet || nextProps.forceSelection;\n  };\n\n  DraftEditorLeaf.prototype.componentDidUpdate = function componentDidUpdate() {\n    this._setSelection();\n  };\n\n  DraftEditorLeaf.prototype.componentDidMount = function componentDidMount() {\n    this._setSelection();\n  };\n\n  DraftEditorLeaf.prototype.render = function render() {\n    var _this2 = this;\n\n    var block = this.props.block;\n    var text = this.props.text;\n\n    // If the leaf is at the end of its block and ends in a soft newline, append\n    // an extra line feed character. Browsers collapse trailing newline\n    // characters, which leaves the cursor in the wrong place after a\n    // shift+enter. The extra character repairs this.\n\n    if (text.endsWith('\\n') && this.props.isLast) {\n      text += '\\n';\n    }\n\n    var _props2 = this.props,\n        customStyleMap = _props2.customStyleMap,\n        customStyleFn = _props2.customStyleFn,\n        offsetKey = _props2.offsetKey,\n        styleSet = _props2.styleSet;\n\n    var styleObj = styleSet.reduce(function (map, styleName) {\n      var mergedStyles = {};\n      var style = customStyleMap[styleName];\n\n      if (style !== undefined && map.textDecoration !== style.textDecoration) {\n        // .trim() is necessary for IE9/10/11 and Edge\n        mergedStyles.textDecoration = [map.textDecoration, style.textDecoration].join(' ').trim();\n      }\n\n      return _assign(map, style, mergedStyles);\n    }, {});\n\n    if (customStyleFn) {\n      var newStyles = customStyleFn(styleSet, block);\n      styleObj = _assign(styleObj, newStyles);\n    }\n\n    return React.createElement(\n      'span',\n      {\n        'data-offset-key': offsetKey,\n        ref: function ref(_ref) {\n          return _this2.leaf = _ref;\n        },\n        style: styleObj },\n      React.createElement(\n        DraftEditorTextNode,\n        null,\n        text\n      )\n    );\n  };\n\n  return DraftEditorLeaf;\n}(React.Component);\n\nmodule.exports = DraftEditorLeaf;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}